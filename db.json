{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/uploads/geekspeng.png","path":"uploads/geekspeng.png","modified":0,"renderable":0},{"_id":"source/uploads/qrcode_geekspeng.jpg","path":"uploads/qrcode_geekspeng.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/geekspeng.png","path":"images/geekspeng.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","path":"lib/needsharebutton/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/README.md","path":"lib/needsharebutton/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/qrcode_geekspeng.jpg","path":"images/qrcode_geekspeng.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"d1fcacb5ef2612f546d066b50995ce2ff0cc3bb1","modified":1516118596855},{"_id":"source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1504224691000},{"_id":"source/.DS_Store","hash":"7dcdf041a7b82864eb9b9e3b8611bc541e9bc4dd","modified":1515501943654},{"_id":"themes/next/.DS_Store","hash":"3bc07c9ddff7bc6f6e6a979b9d98132fc1c19470","modified":1516202377618},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1516087863000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1516087863000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1516087863000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1516087863000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1516087863000},{"_id":"themes/next/.gitignore","hash":"80686274b53b1e7e44cb5816b27b575b7138ac3a","modified":1516202121403},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1516087863000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1516087863000},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1516087863000},{"_id":"themes/next/README.md","hash":"3d438555ca87b1d247536b3b56fc0672eb001518","modified":1516087863000},{"_id":"themes/next/bower.json","hash":"74115626b419f40126e07bb0bbfc5e6ab163f222","modified":1516087863000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1516087863000},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1516087863000},{"_id":"themes/next/_config.yml","hash":"2ec237b7d17efaf819e85324c7175cd56b36d7be","modified":1516203989473},{"_id":"themes/next/package.json","hash":"edcba128994bb34491334db3a49d5c3a50976cf3","modified":1516087863000},{"_id":"source/_posts/.DS_Store","hash":"ba1f7b10445bc22001d0e0c23d278a2355108650","modified":1514041673000},{"_id":"source/_posts/Python入门01 — Python语言简介.md","hash":"312d348fbe8133e021e732737a37fd17311e55ea","modified":1516203279995},{"_id":"source/_posts/Mac OS X 包管理工具安装与使用.md","hash":"c29bbcd5d490bead941deb960dd95aa3588a1d6a","modified":1515507764000},{"_id":"source/_posts/Mac OSX 完全卸载node.js.md","hash":"809145c3ced91f483815a7cadfd8e4253b9f5842","modified":1515458052000},{"_id":"source/_posts/Python入门02 — Python安装及开发环境配置.md","hash":"97b5f1c22f4301bc0375b96741881b02f6db9c91","modified":1515589460000},{"_id":"source/_posts/Hexo使用指南.md","hash":"26b6dbfa91036417bf60caef6fceac3c182b439f","modified":1514092054000},{"_id":"source/_posts/Python入门03 — Hello World.md","hash":"f942a385aaf8b9d463aa3e9edcc340fd8eea7fe7","modified":1515631570000},{"_id":"source/_posts/hexo 下的分类和表签无法显示.md","hash":"1c0d7652459e16dddea41a17f802a55344e6dc66","modified":1514092054000},{"_id":"source/_posts/npm 模块全局安装的权限问题.md","hash":"98d4ef3593b2832d94d8ff2cf6f64b308d2841bb","modified":1514092054000},{"_id":"source/_posts/搭建 Node.js 开发环境.md","hash":"71b2ae2528bf9d1fc6f135cb85a6a0eac40fb0f9","modified":1514092054000},{"_id":"source/_posts/科学上网（二）：极路由配置Shadowsocks.md","hash":"411ab5e49ab056641f353fd70e7cb26ca5a75c0b","modified":1515458052000},{"_id":"source/_posts/通过 nrm 自由切换 npm 源.md","hash":"c12a963198a4b325bed170c6d1a57b9c7d39195c","modified":1514092054000},{"_id":"source/_posts/科学上网（一）：在 AWS 云服务器上搭建 Shadowsocks.md","hash":"39c4f167a9d0515ea8b8a16c1753554bc4987998","modified":1515458052000},{"_id":"source/categories/index.md","hash":"584f05aa66575597b405c9f54f6c2bb905703086","modified":1504224691000},{"_id":"source/tags/index.md","hash":"43b30ab83cc85337330aa531b3d90a4781ed55cc","modified":1504224691000},{"_id":"source/uploads/geekspeng.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1504224691000},{"_id":"themes/next/.git/FETCH_HEAD","hash":"d2b1e87842d9bf7e39dc84e5f87cc9bb315429fd","modified":1516103950000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1516087863000},{"_id":"themes/next/.git/config","hash":"e2ca9fa6f115d4406d24bf0df53fc26ce13e0c9b","modified":1516087863000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1516087839000},{"_id":"themes/next/.git/index","hash":"23ffdc1482002871d42937eb68db883813f36b74","modified":1516100096000},{"_id":"themes/next/.git/packed-refs","hash":"28512906d4be4b777a11b6de3b92378df7010aa0","modified":1516087863000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"792b4e3c3544d51164e8a414219dc1b388dc65dc","modified":1516087863000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"054be54a22f3aea601a29334c7577ffa793f1a48","modified":1516087863000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1516087863000},{"_id":"themes/next/.github/stale.yml","hash":"1bbdd20d025010ec57225712be82988a26485836","modified":1516087863000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1516087863000},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1516087863000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"01a383fd1d46752d4b4f22047b535127b44adb75","modified":1516087863000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"de63aa8466ee8c4d4b418dfbe4e8f27fa117751d","modified":1516087863000},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1516087863000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1516087863000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1516087863000},{"_id":"themes/next/languages/de.yml","hash":"92964c8ed184fa959a5e2001e7c6d9a07d7a4344","modified":1516087863000},{"_id":"themes/next/languages/default.yml","hash":"b39706b2d22696eed6b036f4c90aa5362e331090","modified":1516087863000},{"_id":"themes/next/languages/en.yml","hash":"df63017548589b2e567647e08d736c2a7f342b12","modified":1516087863000},{"_id":"themes/next/languages/fr-FR.yml","hash":"6ee34c8103a95839207dac1201fef7a8f727d2fc","modified":1516087863000},{"_id":"themes/next/languages/id.yml","hash":"60473cc81a871ceb868c97cd3291d602fda1b338","modified":1516087863000},{"_id":"themes/next/languages/it.yml","hash":"5a8a29d145dd2cd882d52b3fbb1203c1a3540cbd","modified":1516087863000},{"_id":"themes/next/languages/ja.yml","hash":"8a3acfb56dc783f261b640dca662c0ec431fea6f","modified":1516087863000},{"_id":"themes/next/languages/ko.yml","hash":"73253087d7754a0213e2ad72de16ab5138b9ba54","modified":1516087863000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1516087863000},{"_id":"themes/next/languages/pt-BR.yml","hash":"4d017b7b9542050b87a99931dff98889090fc781","modified":1516087863000},{"_id":"themes/next/languages/pt.yml","hash":"95585897cd108d5ff15e998cd0acdc0fba5d572c","modified":1516087863000},{"_id":"themes/next/languages/ru.yml","hash":"4ba9f4971115bce0213c437158424428e0e13d5a","modified":1516087863000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1516087863000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"d9c17f3ccc5382ff37bb45f2da1bc02dd2d33136","modified":1516087863000},{"_id":"themes/next/languages/zh-hk.yml","hash":"54e4aa1d04ccad1e13cf08124fe5f70a930592dd","modified":1516087863000},{"_id":"themes/next/languages/zh-tw.yml","hash":"280dd00495e90b8a8c4d9351bab8ae65c78bbe87","modified":1516087863000},{"_id":"themes/next/layout/_layout.swig","hash":"96eb1fcd27c19227b206297cce6825031a9dba59","modified":1516104870000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1516087863000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1516087863000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1516087863000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1516087863000},{"_id":"themes/next/layout/post.swig","hash":"8e2d079b46076996cc9343213d5bf7da8178d32d","modified":1516087863000},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1516087863000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1516087863000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1516087863000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1516087863000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1516087863000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1516087863000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1516087863000},{"_id":"themes/next/source/.DS_Store","hash":"7a1110504a27b500242cb0e5a3e846a4a8772dce","modified":1516201677813},{"_id":"source/uploads/qrcode_geekspeng.jpg","hash":"3387e3bc206e52136dd12428fdc17d1ce2427e08","modified":1504224691000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1516087839000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1516087839000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1516087839000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1516087839000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1516087839000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1516087839000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1516087839000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1516087839000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1516087839000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1516087839000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1516087839000},{"_id":"themes/next/.git/logs/HEAD","hash":"f714b2ce20eb2880d8c3f884e51648a4743d8d93","modified":1516087863000},{"_id":"themes/next/docs/cn/DATA-FILES.md","hash":"58c58c7d98365395dba904a87f9b5f5e0b1e99cb","modified":1516087863000},{"_id":"themes/next/docs/cn/INSTALLATION.md","hash":"15b09b7cf4e4159858895e37ce334fcc96ac08d7","modified":1516087863000},{"_id":"themes/next/docs/cn/README.md","hash":"68b98e7489b8d53e8367500507b9ce43d094d48b","modified":1516087863000},{"_id":"themes/next/docs/cn/UPDATE-FROM-5.1.X.md","hash":"b6422e0e1bbb02ddd29a2f9969fc3ff709555560","modified":1516087863000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"1f15b876c106bae74148fb526bc3b914721b8ff2","modified":1516087863000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"43a70e456d15e9eab3753c22a5253ed2ff300ac8","modified":1516087863000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1516087863000},{"_id":"themes/next/docs/ru/README.md","hash":"95a904683da99daf1473fb7c1ffe8a6322ef8fb9","modified":1516087863000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1516087863000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1516087863000},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"560f043e8f4353fa0101014748e40a58d2d57506","modified":1516070195000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1516087863000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1516087863000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"aa620c582143f43ba1cb1a5e59240041a911185b","modified":1516087863000},{"_id":"themes/next/layout/_macro/post.swig","hash":"d02c64771f44e8d574b6a62987f2f098a242c8ff","modified":1516105969000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43f13d75cfb37ec4ed5386bee0f737641977200b","modified":1516087863000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"fea45ab314b9ea23edab25c2b8620f909d856b1d","modified":1516087863000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1516087863000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1516087863000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1516087863000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e0bdc723d1dc858b41fd66e44e2786e6519f259f","modified":1516087863000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"7993e873618f12888d3ae2c3f6ba2069822e2b13","modified":1516087863000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"73835db2ea30a9824f1d90351f975f6011f42d27","modified":1516111890370},{"_id":"themes/next/layout/_partials/head.swig","hash":"18fb37419bb846be99a5714749ed035a73a814f1","modified":1516105907000},{"_id":"themes/next/layout/_partials/header.swig","hash":"203fabaf17acfafbaf1a97d0015a6613ec71d2b0","modified":1516087863000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1516087863000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1516087863000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1516087863000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1516087863000},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"4d0253223a10d2c6823deacc6622387f7f1e7dcc","modified":1516087863000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1516087863000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1516087863000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1516087863000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1516087863000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1516087863000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1516087863000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1516087863000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1516087863000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1516087863000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1516087863000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1516087863000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1516087863000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1516087863000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1516087863000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1516087863000},{"_id":"themes/next/source/lib/.DS_Store","hash":"bbe4e79c12bfa95f862ae988398d364c141a39ed","modified":1516202074039},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1516087863000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1516087863000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1516087863000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1516087863000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1516087863000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1516087863000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1516087863000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1516087863000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1516087863000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1516087863000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1513697993000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1513697993000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516087863000},{"_id":"themes/next/source/images/geekspeng.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1504224691000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1516087863000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516087863000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1516087863000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1516087863000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1516087863000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1516087863000},{"_id":"themes/next/.git/objects/pack/pack-738dcced19f62fcbcdeb65c327dd0670771ac028.idx","hash":"fdfebb01772617b6e9a9f19eacc003be8a7e8368","modified":1516087863000},{"_id":"themes/next/.git/refs/heads/master","hash":"e7138b6436007a526110da2048dbafd08f00b9ca","modified":1516087863000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1516087863000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1516087863000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1516087863000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1516087863000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1516087863000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1516087863000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1516087863000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1516087863000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1516087863000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1516087863000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1516087863000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"2fbee33a4ccd7c8217c73e85a9a1488170e05629","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"17a54796f6e03fc834880a58efca45c286e40e40","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"40e3cacbd5fa5f2948d0179eff6dd88053e8648e","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"6f340d122a9816ccdf4b45b662880a4b2d087671","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1516087863000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"42f62695029834d45934705c619035733762309e","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1516087863000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1516087863000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1516087863000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1516087863000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1516087863000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1516087863000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1516087863000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1516087863000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1516087863000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1516087863000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1516087863000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1516087863000},{"_id":"themes/next/source/lib/jquery/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1516201371978},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1516087863000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"4013e3c1bd35412644dd3ea5f693746c245cb459","modified":1516108319718},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1516087863000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1516087863000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1516087863000},{"_id":"themes/next/source/lib/reading_progress/.DS_Store","hash":"54f93991451329a2304d2af2ebc28bead8b71162","modified":1516202354610},{"_id":"themes/next/source/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/README.md","hash":"9b00c4ce1a739c825df4e51977f7525d2c9f6b81","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/reading_progress.js","hash":"7cfed0ea2ece280686556a0c2bff50b5fbae3963","modified":1516103562000},{"_id":"themes/next/source/lib/font-awesome/.DS_Store","hash":"470bd5505db2511ad68d79996bef4395e98d21d6","modified":1516202013216},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1516087863000},{"_id":"themes/next/source/lib/needsharebutton/.DS_Store","hash":"15411d2fb78063e1957eb7aa961dc804c9769d58","modified":1516202349500},{"_id":"themes/next/source/lib/needsharebutton/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1516119439649},{"_id":"themes/next/source/lib/needsharebutton/README.md","hash":"46bb223bdf714a47a1449666f4f70556447786d1","modified":1516119439650},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1516119439651},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"1400d7b2dc3f5a52c9d67311e57c182829707ba6","modified":1516119439652},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1516119439651},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1516087863000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1516087863000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"531cdedd7fbe8cb1dab2e4328774a9f6b15b59da","modified":1516087863000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1516087863000},{"_id":"themes/next/source/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1516074924000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1516087863000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1516087863000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1516087863000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1516087863000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1516087863000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1516087863000},{"_id":"themes/next/source/images/qrcode_geekspeng.jpg","hash":"3387e3bc206e52136dd12428fdc17d1ce2427e08","modified":1504224691000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1516087863000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"f714b2ce20eb2880d8c3f884e51648a4743d8d93","modified":1516087863000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1516087863000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1516087863000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1516087863000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1516087863000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1516087863000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1516087863000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1516087863000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1516087863000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1516087863000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"dbff05af5e3a7c4f0889cdcc9027f882a246aa68","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"35f093fe4c1861661ac1542d6e8ea5a9bbfeb659","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d204ef41e5f59aa102baf02e1751075a041ae7f4","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1516087863000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1516087863000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1516087863000},{"_id":"themes/next/source/lib/reading_progress/.git/FETCH_HEAD","hash":"5ef4df4a7c049023940a4923f984017c37d54565","modified":1516103652000},{"_id":"themes/next/source/lib/reading_progress/.git/ORIG_HEAD","hash":"1ec09f95dbaa60f4f1405933edb7556f60f786f4","modified":1516103652000},{"_id":"themes/next/source/lib/reading_progress/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/config","hash":"961f76a65d5278408c0317ac92bff35cfe52dfe8","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/index","hash":"48e3f06335028fbbd09328222f919054e731bacf","modified":1516151221426},{"_id":"themes/next/source/lib/reading_progress/.git/packed-refs","hash":"6a2077723bbb4b623f5f819979a5f71decc56d03","modified":1516103562000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1516087863000},{"_id":"themes/next/source/lib/needsharebutton/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1516119439639},{"_id":"themes/next/source/lib/needsharebutton/.git/config","hash":"3bd2fc1363cc36b469c252931084daa7b046d52a","modified":1516119439644},{"_id":"themes/next/source/lib/needsharebutton/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1516119433456},{"_id":"themes/next/source/lib/needsharebutton/.git/index","hash":"3951c03beb0e63c5e8c6da09886e1956255a83ed","modified":1516151225532},{"_id":"themes/next/source/lib/needsharebutton/.git/packed-refs","hash":"ed0cd5c261a3fcb98919190d5f9dc8ce38fca646","modified":1516119439635},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1516087863000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1516087863000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1516087863000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"f714b2ce20eb2880d8c3f884e51648a4743d8d93","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ce77b4ff598c10aca5687e9a65387ae74684632e","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"0abb074afb6ab7242a22fa6dc3ac688251df708a","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8bf095377d28881f63a30bd7db97526829103bf2","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"445f360e196aae10f943bf4699b43b2ace924745","modified":1516105203000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1516087863000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"96326454eb7c7a3ec38d20294c94c4cc63f16ebe","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1516087863000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1516087863000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1516103557000},{"_id":"themes/next/source/lib/reading_progress/.git/logs/HEAD","hash":"b21cc667600b55ad93b044f8d2c451a45729b5a4","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1516103557000},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1516119433456},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1516119433458},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1516087863000},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1516119433458},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1516119433461},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1516119433462},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1516119433463},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1516119433457},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1516119433459},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1516119433460},{"_id":"themes/next/source/lib/needsharebutton/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1516119433455},{"_id":"themes/next/source/lib/needsharebutton/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1516119433464},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/HEAD","hash":"237dafa5a699a47bf0cfa9e14f2bcc16f530839a","modified":1516119439642},{"_id":"themes/next/source/lib/reading_progress/.git/objects/48/1ebe947f06e440e41c1a971be0844e852c1d37","hash":"61fea90ca1824db58df6cfc662bc5b371db02224","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/98/a2041bc808f55bbcb9d8b53560e22558338bda","hash":"ebb53379aa2d77ea0832973fa3e44846df0f170f","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/00/4fa4280892c7d18f6151fac22daf51344c02ea","hash":"7a81ed1087c3792f37bd83137d4034179c911627","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/36/58085a9181df88f19f04603b28f6ea21d199cc","hash":"6a467dd51d39b28c1af9c25869e25c6821f6602a","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/8f/ca1e70cfeea939105e31d7d17f7c3516120b30","hash":"312d55b1a7fbdcc14c54b3805f0827fc42ad94ed","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/a2/7bba2bf42630fc03150b64fc74f2a29c151a27","hash":"b1afe600ba94298a2905a2cf64c900f5954cc146","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/a8/63332915ebfd107ca4418c25c80674875c422b","hash":"f12e708237bcf98c072e73e45f1542cfb5646839","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/ae/aa7a68a7131bd03e0bce06f45bfdfa1cd93587","hash":"d7d37380ba502a4050834df40227d612cf911595","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/b6/eda56cb9647d239b26d86f579204cbccf745fe","hash":"12e479d3dfe08df6f9d4d56be2f0a17d9720d846","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/d1/94060fce08431ebef4cb5f4c02739b913373cb","hash":"b9022b117b03703b5fa8af85fc076b692bde33cf","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/e5/dc795cdf7d9163cc736be938a9707f73869c9f","hash":"57163dfa4eebe09d57ede37ee259b7cbb2b1e643","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/f0/acd06a59665dabfb6eb0608f0a797fdcd44158","hash":"f85f3dbe326b8752f6e32c7169ed3b409f4167b7","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/objects/f6/8184f97255dfd504e22775df6450edb9b51d70","hash":"b0a36dcf81780a9f82db6318daa065200e16efee","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/refs/heads/master","hash":"1ec09f95dbaa60f4f1405933edb7556f60f786f4","modified":1516103562000},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/heads/master","hash":"f3f4ab7bb27c5423f10e4313ac46589308085b4d","modified":1516119439641},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/46/66508d485306f48ac866f4a0eded896b01adb0","hash":"a37ee79e50b83b3a5a7f736cfc6b8eafc210ebca","modified":1516119439622},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/63/ce5669cda10d9c600a65df1c509155a9dce354","hash":"e7eefb05c18a77c99c1044dc53cc0b33bc4bc723","modified":1516119438406},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/72/38adfc9f0b65e7dd8e7eb39b53fd8dbd05728d","hash":"67f5fb35cbbb4625e049368c8ef7fef03e21315d","modified":1516119439623},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/ad104add4d67baba615eccfcc7876bdf60256f","hash":"787497f0b2a074be846ae940ba58475a830690d4","modified":1516119439624},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/77/b1d62571d3374de0902fdf14c3fd925263c295","hash":"f0d087a62296e14072d250d0db5bfeb01e3e0f4c","modified":1516119438408},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/80/8d63b637e30043e74f5150047c232028ffa3bf","hash":"c7cd9201316a2cf66b63cd0f520dc827912d8be8","modified":1516119438413},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1516119438411},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/96/b1227c70e63f95b099993321043a2e05abdbea","hash":"d1f0885e3a68fdfc87e68e5ba6b60de116c3c7a5","modified":1516119439618},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/9f/e80d3fee719ad9953c0e8e8dec472bb727d17d","hash":"09516f8a3f62a9e286f3ac1985969d0913d53271","modified":1516119439621},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/a1/5c0ab3f7ca37d06a7a3dc28f6375ac8fcaffe1","hash":"3aa24fa2254a71f9b408a01ad7154cc1cbf7cde6","modified":1516119438407},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/aa/f4e31e1d4ea073ad9f6926e146fea3c6d8b423","hash":"7c412d2a2243907dff0a1940f13a539675d76428","modified":1516119439620},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/bf/839b1a2dfd79af314506907196f817d1d540b0","hash":"196a52782c02c03b787cca10ca172a6be6ddb8e0","modified":1516119439625},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/eb/83c3470835cc056d65fbaec5ba59fc01a341c6","hash":"a48447a56db4dce3b2ce99fcfd4cbb5d5902877f","modified":1516119438410},{"_id":"themes/next/source/lib/needsharebutton/.git/objects/f5/fc2c417f7156d25437bbe069fa10645b4c3a63","hash":"377e0fce80cab14d6966371260926ee78da12b09","modified":1516119438409},{"_id":"themes/next/source/lib/reading_progress/.git/logs/refs/heads/master","hash":"b21cc667600b55ad93b044f8d2c451a45729b5a4","modified":1516103562000},{"_id":"themes/next/source/lib/reading_progress/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1516103562000},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/heads/master","hash":"237dafa5a699a47bf0cfa9e14f2bcc16f530839a","modified":1516119439643},{"_id":"themes/next/source/lib/needsharebutton/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1516119439637},{"_id":"themes/next/.git/objects/pack/pack-738dcced19f62fcbcdeb65c327dd0670771ac028.pack","hash":"2720bdf2dcc81e4dc8058ae807422852d830a3f7","modified":1516087863000},{"_id":"themes/next/source/lib/reading_progress/.git/logs/refs/remotes/origin/HEAD","hash":"b21cc667600b55ad93b044f8d2c451a45729b5a4","modified":1516103562000},{"_id":"themes/next/source/lib/needsharebutton/.git/logs/refs/remotes/origin/HEAD","hash":"237dafa5a699a47bf0cfa9e14f2bcc16f530839a","modified":1516119439637},{"_id":"public/search.xml","hash":"622151b264642cc19fc2be88dd23dcd6d1e70176","modified":1516204403004},{"_id":"public/404.html","hash":"0ccc188ffa6ea6a5e7ac85ddce1a81538ff0d066","modified":1516204403035},{"_id":"public/categories/index.html","hash":"f031b4d528b49712fe03d18ddc89bd26e659f395","modified":1516204403035},{"_id":"public/tags/index.html","hash":"4c51509eef5957ce3b0cce9f94ea01a638870500","modified":1516204403035},{"_id":"public/2018/01/11/Python入门03 — Hello World.html","hash":"a17d7d001b65e6a6673109ccadfd0463666fab8d","modified":1516204403035},{"_id":"public/2018/01/10/Python入门02 — Python安装及开发环境配置.html","hash":"a430b6d88de8e7c8080d76db12abdbd264918d88","modified":1516204403035},{"_id":"public/2018/01/09/Python入门01 — Python语言简介.html","hash":"5dea0cc5b8de35d53a9561021fab04d866bd39f4","modified":1516204403035},{"_id":"public/2018/01/09/Mac OS X 包管理工具安装与使用.html","hash":"3747fbf1770328fb9bc26471770ac7bdb9ee5b0c","modified":1516204403035},{"_id":"public/2017/12/15/科学上网（二）：极路由配置Shadowsocks.html","hash":"7dfa4b2f6d5df4e7c4e4ad40ab68117998c4d61d","modified":1516204403036},{"_id":"public/2017/12/14/科学上网（一）：在 AWS 云服务器上搭建 Shadowsocks.html","hash":"98cd77e6ec21384a1c390804c5e11b89a48b9799","modified":1516204403036},{"_id":"public/2017/09/01/Mac OSX 完全卸载node.js.html","hash":"889d636280f7447fe4e83256422147f0ae4b4652","modified":1516204403036},{"_id":"public/2017/09/01/npm 模块全局安装的权限问题.html","hash":"b570f4156d8f55c670c37069cc7e6b3642533fc5","modified":1516204403036},{"_id":"public/2017/09/01/搭建 Node.js 开发环境.html","hash":"47ebe31bef1825384acfe044e6c21b80f68b2e06","modified":1516204403036},{"_id":"public/2017/09/01/Hexo使用指南.html","hash":"320e0f4fe1fa4bb9fe53e38aaf8a178864b5ab01","modified":1516204403036},{"_id":"public/2017/09/01/通过 nrm 自由切换 npm 源.html","hash":"363db49e0074af5727a5d673eb5fe950efca5090","modified":1516204403036},{"_id":"public/2017/09/01/hexo 下的分类和表签无法显示.html","hash":"cbc54e627175c0a7cea8a002cb463dbe5afad3c7","modified":1516204403036},{"_id":"public/archives/index.html","hash":"a2a0a1ea7ece24f00425b48baf5814734f8258a5","modified":1516204403036},{"_id":"public/archives/page/2/index.html","hash":"e62af7cc9cbe1ffcd13e30dee299ccfca2631718","modified":1516204403036},{"_id":"public/archives/2017/index.html","hash":"4d0fa49304e2f9346dc042a9467ab075578a975a","modified":1516204403036},{"_id":"public/archives/2017/09/index.html","hash":"3473c694df00191aa7a79ebb4c45ece8e72541a6","modified":1516204403037},{"_id":"public/archives/2017/12/index.html","hash":"f3a1707d2592428dd42525967d6aaa3552baa779","modified":1516204403037},{"_id":"public/archives/2018/index.html","hash":"8becfda990026a1b7b622d684746c6668fa48476","modified":1516204403037},{"_id":"public/archives/2018/01/index.html","hash":"8becfda990026a1b7b622d684746c6668fa48476","modified":1516204403037},{"_id":"public/categories/Python/index.html","hash":"5867a0f836201aae67bf8850cb4019eb2896ae82","modified":1516204403037},{"_id":"public/categories/node/index.html","hash":"4a53a4f15f7a2681615ce8522cea78899c919013","modified":1516204403037},{"_id":"public/categories/Mac/index.html","hash":"4594271282549f315e1d34a3d54929a93ce072f4","modified":1516204403037},{"_id":"public/categories/hexo/index.html","hash":"63937d7a3d3fe3a6d908692e9e4c418c5e91858f","modified":1516204403037},{"_id":"public/categories/科学上网/index.html","hash":"06f86f53d0e70cdab172a9c28185d119bb218689","modified":1516204403037},{"_id":"public/index.html","hash":"327aeb55d182a6c33464ad9ce5d0765a99f2dcb6","modified":1516204403037},{"_id":"public/page/2/index.html","hash":"4c7058f343d9b62a5618cf69ca00a08f61c345f3","modified":1516204403037},{"_id":"public/tags/Python/index.html","hash":"55037cc88aebaca17851fe46096871d0985e94d3","modified":1516204403037},{"_id":"public/tags/node/index.html","hash":"3e4fc163eec9818bc36126bd52ace4e33aeb4076","modified":1516204403038},{"_id":"public/tags/mac/index.html","hash":"f483f7250d57b1595e79964a8d21f9bcdc2cd0a3","modified":1516204403038},{"_id":"public/tags/Mac/index.html","hash":"383e14fdc4b6350ded356c9fa61f9b1072624fec","modified":1516204403038},{"_id":"public/tags/包管理工具/index.html","hash":"0e971b68f38ffc4eb48b1d339442d9836228fff9","modified":1516204403038},{"_id":"public/tags/Homebrew/index.html","hash":"04834123a66a226413d81239c76cb3adaae92965","modified":1516204403038},{"_id":"public/tags/Windows/index.html","hash":"56c86700eff93ee28027a069f32f7dee5dd5fa98","modified":1516204403038},{"_id":"public/tags/Linux/index.html","hash":"3ec19b36298f8ea7822dbf27e7c1d91d385c76d7","modified":1516204403038},{"_id":"public/tags/hexo/index.html","hash":"9937a89b7ab05508ddd781cba977ce8d06ef1fbd","modified":1516204403038},{"_id":"public/tags/npm/index.html","hash":"79e58fe80ab7983095e85aa968717609027f7c5f","modified":1516204403038},{"_id":"public/tags/nvm/index.html","hash":"36416069943669706fc712c7f290835581dc9c33","modified":1516204403038},{"_id":"public/tags/科学上网/index.html","hash":"02320bfeffda9acc04eaca6fdcbe1dc30da03ee6","modified":1516204403038},{"_id":"public/tags/Shadowsocks/index.html","hash":"d1595feca3aec30c4522e27d90c919b6ffece89d","modified":1516204403038},{"_id":"public/tags/极路由/index.html","hash":"5c05999c69c0679c84d483b20b6ad6c2541490c5","modified":1516204403039},{"_id":"public/tags/nrm/index.html","hash":"8d04b8e15b2bb995bc6e2981c7353777572a978f","modified":1516204403039},{"_id":"public/tags/AWS云服务器/index.html","hash":"8c5fc004bad95dd41f21d2092083265081dc8169","modified":1516204403039},{"_id":"public/CNAME","hash":"d1fcacb5ef2612f546d066b50995ce2ff0cc3bb1","modified":1516204403046},{"_id":"public/uploads/geekspeng.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1516204403046},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1516204403047},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1516204403047},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1516204403047},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1516204403047},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1516204403047},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1516204403047},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1516204403047},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1516204403047},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1516204403047},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1516204403047},{"_id":"public/images/favicon-16x16-next.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1516204403047},{"_id":"public/images/favicon-32x32-next.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1516204403047},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516204403047},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1516204403047},{"_id":"public/images/geekspeng.png","hash":"7b5c5a4c38f57fb349a95eb57dbba865802631ae","modified":1516204403047},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1516204403048},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1516204403048},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1516204403048},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1516204403048},{"_id":"public/lib/reading_progress/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1516204403048},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1516204403048},{"_id":"public/lib/needsharebutton/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1516204403048},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1516204403048},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1516204403636},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1516204403640},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1516204403645},{"_id":"public/lib/reading_progress/reading_progress.js","hash":"7cfed0ea2ece280686556a0c2bff50b5fbae3963","modified":1516204403645},{"_id":"public/lib/reading_progress/README.html","hash":"3287121425b2e90fc66e6410984e80a8c85d9ecd","modified":1516204403645},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1516204403645},{"_id":"public/lib/needsharebutton/README.html","hash":"16294954bab07c47f87edf3742ab2547c63d5193","modified":1516204403645},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1516204403645},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1516204403645},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1516204403645},{"_id":"public/js/src/bootstrap.js","hash":"531cdedd7fbe8cb1dab2e4328774a9f6b15b59da","modified":1516204403646},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1516204403646},{"_id":"public/js/src/love.js","hash":"9e8e79d69ad8338761272f86fe5cad0ad5e503cc","modified":1516204403646},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1516204403646},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1516204403646},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1516204403646},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1516204403646},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1516204403646},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1516204403646},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1516204403646},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1516204403646},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1516204403646},{"_id":"public/css/main.css","hash":"14f2238824584c8a161a64ec6e834b3089034b03","modified":1516204403646},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1516204403646},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1516204403646},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"1400d7b2dc3f5a52c9d67311e57c182829707ba6","modified":1516204403646},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1516204403647},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1516204403647},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1516204403647},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1516204403647},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1516204403647},{"_id":"public/uploads/qrcode_geekspeng.jpg","hash":"3387e3bc206e52136dd12428fdc17d1ce2427e08","modified":1516204403647},{"_id":"public/images/qrcode_geekspeng.jpg","hash":"3387e3bc206e52136dd12428fdc17d1ce2427e08","modified":1516204403647},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1516204403647}],"Category":[{"name":"Python","_id":"cjcj8yar50005uw0mrmc9gd8g"},{"name":"node","_id":"cjcj8yard000auw0m8c2ptatx"},{"name":"Mac","_id":"cjcj8yarj000guw0mzj3w7u2e"},{"name":"hexo","_id":"cjcj8yarn000muw0mqrw7pm1o"},{"name":"科学上网","_id":"cjcj8yarw000zuw0mpk43i2fq"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2018-01-16T11:22:32.045Z","updated":"2017-09-01T00:11:31.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjcj8yap80000uw0m0nuiux0x","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"categories","date":"2017-08-27T14:41:48.000Z","type":"categories","_content":"\n\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-08-27 22:41:48\ntype: \"categories\"\n---\n\n\n","updated":"2017-09-01T00:11:31.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjcj8yar00002uw0m9a2n5dc6","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"","date":"2017-08-27T14:41:36.000Z","type":"tags","_content":"\n\n","source":"tags/index.md","raw":"---\ntitle:\ndate: 2017-08-27 22:41:36\ntype: \"tags\"\n---\n\n\n","updated":"2017-09-01T00:11:31.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjcj8yar40004uw0m5ijfunee","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Python入门01 — Python语言简介","date":"2018-01-08T16:00:00.000Z","updated":"2018-01-08T16:00:00.000Z","_content":"\nPython 是一种极少数能兼具 *简单* 与 *功能强大* 的编程语言。你将惊异于发现你正在使用的这门编程语言是如此简单，它专注于如何解决问题，而非拘泥于语法与结构。\n\n官方对 Python 的介绍如下：\n\n> Python 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。\n\n<!-- more -->\n\n#  名字的由来\n\nPython是Guido van Rossum（吉多·范罗苏姆）在1989年圣诞节期间，为了打发无聊的圣诞节而编写的一个编程语言，他采用 BBC 电视节目《蒙提·派森的飞行马戏团（Monty Python's Flying Circus，一译巨蟒剧团）》的名字来为这门编程语言命名。\n\n\n\n#  Python 的特点\n\n* 简单\n\n  Python 是一门简单且简约的语言。阅读一份优秀的 Python 程序代码就如同在阅读英语文章一样，Python 这种伪代码式的特质正是它的一大优势。它能够让你专注于解决问题的方案，而不是语言本身。\n\n* 易于学习\n\n  Python 是一门非常容易入门的语言，Python 有一套极其简单的语法体系。\n\n* 免费开源\n\n  Python 是 FLOSS （自由/开放源代码软件）的成员之一。简单来说，你可以自由地分发这一软件的拷贝，阅读它的源代码，并对其作出改动，或是将其的一部分运用于一款新的自由程序中。FLOSS 基于一个可以分享知识的社区理念而创建。\n\n* 高级语言\n\n  当你在用 Python 编写程序时，你不必考虑诸如你的程序应当如何使用内存等底层细节。\n\n* 跨平台\n\n  由于其开放源码的特性，Python 已被移植到其它诸多平台（意即它们已经过改动以保证其能正常工作）。如果你小心地避开了所有系统依赖型的特性，那么你所有的 Python 程序不必作任何改动就可以在其中任何一个平台上工作。\n\n* 解释性\n\n  一个用编译性语言比如C/C++写的程序在运行前需要通过编译器翻译成计算机能执行的机器码。而解释性语言比如Python写的程序在运行前不需要编译成机器码，而是先由Python解释器将源代码转换成称为[字节码](http://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=53858822&ss_c=ssc.citiao.link)的中间形式，在运行时再把它翻译成计算机能理解的机器码。这一流程使得 Python 更加易于使用，你不必再担心该如何编译程序，或如何保证适当的库被正确的链接并加载等等步骤。这也同样使得 Python 程序更便携且易于移植，你只需要将 Python 程序拷贝到另一台电脑便可让它立即开始工作！\n\n* 面向对象\n\n  Python 同时支持面向过程编程与面向对象编程。在面向过程的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的。在面向对象的语言中，程序是由数据和功能组合而成的对象构建起来的。\n\n* 可扩展性\n\n  如果你需要代码的某一重要部分能够快速地运行，或希望算法的某些部分不被公开，你可以在 C/C++ 语言中编写这些程序，然后再将其运用于你的 Python 程序中。\n\n* 可嵌入性\n\n  你可以在你的 C/C++ 程序中嵌入 Python，从而向你的程序用户提供 *脚本* 功能\n\n* 丰富的库\n\n  实际上 Python 标准库的规模非常庞大。它能够帮助你完成诸多事情，包括正则表达式、文档生成、单元测试、多线程、数据库、网页浏览器、CGI、FTP、邮件、XML、XML-RPC、HTML、WAV 文件、密码系统、GUI（图形用户界面），以及其它系统依赖型的活动。\n\n\n\n#  Python的缺点\n\n* 运行速度慢\n\n  和 C/C++ 程序相比非常慢，因为Python是解释型语言，你的代码在执行时会一行一行地翻译成计算机能理解的机器码，这个翻译过程非常耗时，所以很慢。而 C/C++ 程序是运行前直接编译成CPU能执行的机器码，所以非常快。但是，除了像视频高清解码等计算密集型任务对运行速度有较高的要求外，在大部分时候，我们可能并不需要非常快的运行速度。\n\n* 代码不能加密\n\n  如果要发布你的Python程序，实际上就是发布源代码，这一点跟C/C++语言不同，C/C++语言不用发布源代码，只需要把编译后的机器码（也就是你在Windows上常见的xxx.exe文件）发布出去。要从机器码反推出C代码是不可能的，所以，凡是编译型的语言，都没有这个问题，而解释型的语言，则必须把源码发布出去。这个缺点仅限于你要编写的软件需要卖给别人挣钱的时候。好消息是目前的互联网时代，靠卖软件授权的商业模式越来越少了，靠网站和移动应用卖服务的模式越来越多了，后一种模式不需要把源码给别人。\n\n  ​\n\n# Python 适合做什么\n\n* 脚本开发\n\n  这些简短的程序自动执行常见的管理任务，如在系统中新增用户、将文件上传到网站、在不使用浏览器的情况下下载网页等。\n\n* 网站开发\n\n  不少大型网站都是使用 Python 作为后台开发语言的，比如 YouTube、Pinterest、国内的豆瓣和知乎等。\n\n* 文本处理\n\n  Python在字符串和文本文件处理方面提供了强大的支持，包括正则表达式和Unicode。\n\n* 科学计算\n\n  网上有很多卓越的Python科学计算库，提供了用于统计、数学计算和绘图的函数。\n\n* 机器学习\n\n  有不少知名的机器学习库也是使用 Python 开发的，比如，scikit-learn 是一个强大的机器学习库，Theano 是一个成熟的深度学习库。\n\n* 教育\n\n  鉴于Python简洁实用，越来越多的学校将其作为第一门编程教学语言。","source":"_posts/Python入门01 — Python语言简介.md","raw":"---\ntitle: Python入门01 — Python语言简介\ndate: 2018-01-09\nupdated: 2018-01-09\ntags: [Python]\ncategories: [Python]\n---\n\nPython 是一种极少数能兼具 *简单* 与 *功能强大* 的编程语言。你将惊异于发现你正在使用的这门编程语言是如此简单，它专注于如何解决问题，而非拘泥于语法与结构。\n\n官方对 Python 的介绍如下：\n\n> Python 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。\n\n<!-- more -->\n\n#  名字的由来\n\nPython是Guido van Rossum（吉多·范罗苏姆）在1989年圣诞节期间，为了打发无聊的圣诞节而编写的一个编程语言，他采用 BBC 电视节目《蒙提·派森的飞行马戏团（Monty Python's Flying Circus，一译巨蟒剧团）》的名字来为这门编程语言命名。\n\n\n\n#  Python 的特点\n\n* 简单\n\n  Python 是一门简单且简约的语言。阅读一份优秀的 Python 程序代码就如同在阅读英语文章一样，Python 这种伪代码式的特质正是它的一大优势。它能够让你专注于解决问题的方案，而不是语言本身。\n\n* 易于学习\n\n  Python 是一门非常容易入门的语言，Python 有一套极其简单的语法体系。\n\n* 免费开源\n\n  Python 是 FLOSS （自由/开放源代码软件）的成员之一。简单来说，你可以自由地分发这一软件的拷贝，阅读它的源代码，并对其作出改动，或是将其的一部分运用于一款新的自由程序中。FLOSS 基于一个可以分享知识的社区理念而创建。\n\n* 高级语言\n\n  当你在用 Python 编写程序时，你不必考虑诸如你的程序应当如何使用内存等底层细节。\n\n* 跨平台\n\n  由于其开放源码的特性，Python 已被移植到其它诸多平台（意即它们已经过改动以保证其能正常工作）。如果你小心地避开了所有系统依赖型的特性，那么你所有的 Python 程序不必作任何改动就可以在其中任何一个平台上工作。\n\n* 解释性\n\n  一个用编译性语言比如C/C++写的程序在运行前需要通过编译器翻译成计算机能执行的机器码。而解释性语言比如Python写的程序在运行前不需要编译成机器码，而是先由Python解释器将源代码转换成称为[字节码](http://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=53858822&ss_c=ssc.citiao.link)的中间形式，在运行时再把它翻译成计算机能理解的机器码。这一流程使得 Python 更加易于使用，你不必再担心该如何编译程序，或如何保证适当的库被正确的链接并加载等等步骤。这也同样使得 Python 程序更便携且易于移植，你只需要将 Python 程序拷贝到另一台电脑便可让它立即开始工作！\n\n* 面向对象\n\n  Python 同时支持面向过程编程与面向对象编程。在面向过程的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的。在面向对象的语言中，程序是由数据和功能组合而成的对象构建起来的。\n\n* 可扩展性\n\n  如果你需要代码的某一重要部分能够快速地运行，或希望算法的某些部分不被公开，你可以在 C/C++ 语言中编写这些程序，然后再将其运用于你的 Python 程序中。\n\n* 可嵌入性\n\n  你可以在你的 C/C++ 程序中嵌入 Python，从而向你的程序用户提供 *脚本* 功能\n\n* 丰富的库\n\n  实际上 Python 标准库的规模非常庞大。它能够帮助你完成诸多事情，包括正则表达式、文档生成、单元测试、多线程、数据库、网页浏览器、CGI、FTP、邮件、XML、XML-RPC、HTML、WAV 文件、密码系统、GUI（图形用户界面），以及其它系统依赖型的活动。\n\n\n\n#  Python的缺点\n\n* 运行速度慢\n\n  和 C/C++ 程序相比非常慢，因为Python是解释型语言，你的代码在执行时会一行一行地翻译成计算机能理解的机器码，这个翻译过程非常耗时，所以很慢。而 C/C++ 程序是运行前直接编译成CPU能执行的机器码，所以非常快。但是，除了像视频高清解码等计算密集型任务对运行速度有较高的要求外，在大部分时候，我们可能并不需要非常快的运行速度。\n\n* 代码不能加密\n\n  如果要发布你的Python程序，实际上就是发布源代码，这一点跟C/C++语言不同，C/C++语言不用发布源代码，只需要把编译后的机器码（也就是你在Windows上常见的xxx.exe文件）发布出去。要从机器码反推出C代码是不可能的，所以，凡是编译型的语言，都没有这个问题，而解释型的语言，则必须把源码发布出去。这个缺点仅限于你要编写的软件需要卖给别人挣钱的时候。好消息是目前的互联网时代，靠卖软件授权的商业模式越来越少了，靠网站和移动应用卖服务的模式越来越多了，后一种模式不需要把源码给别人。\n\n  ​\n\n# Python 适合做什么\n\n* 脚本开发\n\n  这些简短的程序自动执行常见的管理任务，如在系统中新增用户、将文件上传到网站、在不使用浏览器的情况下下载网页等。\n\n* 网站开发\n\n  不少大型网站都是使用 Python 作为后台开发语言的，比如 YouTube、Pinterest、国内的豆瓣和知乎等。\n\n* 文本处理\n\n  Python在字符串和文本文件处理方面提供了强大的支持，包括正则表达式和Unicode。\n\n* 科学计算\n\n  网上有很多卓越的Python科学计算库，提供了用于统计、数学计算和绘图的函数。\n\n* 机器学习\n\n  有不少知名的机器学习库也是使用 Python 开发的，比如，scikit-learn 是一个强大的机器学习库，Theano 是一个成熟的深度学习库。\n\n* 教育\n\n  鉴于Python简洁实用，越来越多的学校将其作为第一门编程教学语言。","slug":"Python入门01 — Python语言简介","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yaqx0001uw0mp7im4677","content":"<p>Python 是一种极少数能兼具 <em>简单</em> 与 <em>功能强大</em> 的编程语言。你将惊异于发现你正在使用的这门编程语言是如此简单，它专注于如何解决问题，而非拘泥于语法与结构。</p>\n<p>官方对 Python 的介绍如下：</p>\n<blockquote>\n<p>Python 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h1 id=\"名字的由来\"><a href=\"#名字的由来\" class=\"headerlink\" title=\"名字的由来\"></a>名字的由来</h1><p>Python是Guido van Rossum（吉多·范罗苏姆）在1989年圣诞节期间，为了打发无聊的圣诞节而编写的一个编程语言，他采用 BBC 电视节目《蒙提·派森的飞行马戏团（Monty Python’s Flying Circus，一译巨蟒剧团）》的名字来为这门编程语言命名。</p>\n<h1 id=\"Python-的特点\"><a href=\"#Python-的特点\" class=\"headerlink\" title=\"Python 的特点\"></a>Python 的特点</h1><ul>\n<li><p>简单</p>\n<p>Python 是一门简单且简约的语言。阅读一份优秀的 Python 程序代码就如同在阅读英语文章一样，Python 这种伪代码式的特质正是它的一大优势。它能够让你专注于解决问题的方案，而不是语言本身。</p>\n</li>\n<li><p>易于学习</p>\n<p>Python 是一门非常容易入门的语言，Python 有一套极其简单的语法体系。</p>\n</li>\n<li><p>免费开源</p>\n<p>Python 是 FLOSS （自由/开放源代码软件）的成员之一。简单来说，你可以自由地分发这一软件的拷贝，阅读它的源代码，并对其作出改动，或是将其的一部分运用于一款新的自由程序中。FLOSS 基于一个可以分享知识的社区理念而创建。</p>\n</li>\n<li><p>高级语言</p>\n<p>当你在用 Python 编写程序时，你不必考虑诸如你的程序应当如何使用内存等底层细节。</p>\n</li>\n<li><p>跨平台</p>\n<p>由于其开放源码的特性，Python 已被移植到其它诸多平台（意即它们已经过改动以保证其能正常工作）。如果你小心地避开了所有系统依赖型的特性，那么你所有的 Python 程序不必作任何改动就可以在其中任何一个平台上工作。</p>\n</li>\n<li><p>解释性</p>\n<p>一个用编译性语言比如C/C++写的程序在运行前需要通过编译器翻译成计算机能执行的机器码。而解释性语言比如Python写的程序在运行前不需要编译成机器码，而是先由Python解释器将源代码转换成称为<a href=\"http://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=53858822&amp;ss_c=ssc.citiao.link\" target=\"_blank\" rel=\"noopener\">字节码</a>的中间形式，在运行时再把它翻译成计算机能理解的机器码。这一流程使得 Python 更加易于使用，你不必再担心该如何编译程序，或如何保证适当的库被正确的链接并加载等等步骤。这也同样使得 Python 程序更便携且易于移植，你只需要将 Python 程序拷贝到另一台电脑便可让它立即开始工作！</p>\n</li>\n<li><p>面向对象</p>\n<p>Python 同时支持面向过程编程与面向对象编程。在面向过程的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的。在面向对象的语言中，程序是由数据和功能组合而成的对象构建起来的。</p>\n</li>\n<li><p>可扩展性</p>\n<p>如果你需要代码的某一重要部分能够快速地运行，或希望算法的某些部分不被公开，你可以在 C/C++ 语言中编写这些程序，然后再将其运用于你的 Python 程序中。</p>\n</li>\n<li><p>可嵌入性</p>\n<p>你可以在你的 C/C++ 程序中嵌入 Python，从而向你的程序用户提供 <em>脚本</em> 功能</p>\n</li>\n<li><p>丰富的库</p>\n<p>实际上 Python 标准库的规模非常庞大。它能够帮助你完成诸多事情，包括正则表达式、文档生成、单元测试、多线程、数据库、网页浏览器、CGI、FTP、邮件、XML、XML-RPC、HTML、WAV 文件、密码系统、GUI（图形用户界面），以及其它系统依赖型的活动。</p>\n</li>\n</ul>\n<h1 id=\"Python的缺点\"><a href=\"#Python的缺点\" class=\"headerlink\" title=\"Python的缺点\"></a>Python的缺点</h1><ul>\n<li><p>运行速度慢</p>\n<p>和 C/C++ 程序相比非常慢，因为Python是解释型语言，你的代码在执行时会一行一行地翻译成计算机能理解的机器码，这个翻译过程非常耗时，所以很慢。而 C/C++ 程序是运行前直接编译成CPU能执行的机器码，所以非常快。但是，除了像视频高清解码等计算密集型任务对运行速度有较高的要求外，在大部分时候，我们可能并不需要非常快的运行速度。</p>\n</li>\n<li><p>代码不能加密</p>\n<p>如果要发布你的Python程序，实际上就是发布源代码，这一点跟C/C++语言不同，C/C++语言不用发布源代码，只需要把编译后的机器码（也就是你在Windows上常见的xxx.exe文件）发布出去。要从机器码反推出C代码是不可能的，所以，凡是编译型的语言，都没有这个问题，而解释型的语言，则必须把源码发布出去。这个缺点仅限于你要编写的软件需要卖给别人挣钱的时候。好消息是目前的互联网时代，靠卖软件授权的商业模式越来越少了，靠网站和移动应用卖服务的模式越来越多了，后一种模式不需要把源码给别人。</p>\n<p>​</p>\n</li>\n</ul>\n<h1 id=\"Python-适合做什么\"><a href=\"#Python-适合做什么\" class=\"headerlink\" title=\"Python 适合做什么\"></a>Python 适合做什么</h1><ul>\n<li><p>脚本开发</p>\n<p>这些简短的程序自动执行常见的管理任务，如在系统中新增用户、将文件上传到网站、在不使用浏览器的情况下下载网页等。</p>\n</li>\n<li><p>网站开发</p>\n<p>不少大型网站都是使用 Python 作为后台开发语言的，比如 YouTube、Pinterest、国内的豆瓣和知乎等。</p>\n</li>\n<li><p>文本处理</p>\n<p>Python在字符串和文本文件处理方面提供了强大的支持，包括正则表达式和Unicode。</p>\n</li>\n<li><p>科学计算</p>\n<p>网上有很多卓越的Python科学计算库，提供了用于统计、数学计算和绘图的函数。</p>\n</li>\n<li><p>机器学习</p>\n<p>有不少知名的机器学习库也是使用 Python 开发的，比如，scikit-learn 是一个强大的机器学习库，Theano 是一个成熟的深度学习库。</p>\n</li>\n<li><p>教育</p>\n<p>鉴于Python简洁实用，越来越多的学校将其作为第一门编程教学语言。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Python 是一种极少数能兼具 <em>简单</em> 与 <em>功能强大</em> 的编程语言。你将惊异于发现你正在使用的这门编程语言是如此简单，它专注于如何解决问题，而非拘泥于语法与结构。</p>\n<p>官方对 Python 的介绍如下：</p>\n<blockquote>\n<p>Python 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。</p>\n</blockquote>","more":"<h1 id=\"名字的由来\"><a href=\"#名字的由来\" class=\"headerlink\" title=\"名字的由来\"></a>名字的由来</h1><p>Python是Guido van Rossum（吉多·范罗苏姆）在1989年圣诞节期间，为了打发无聊的圣诞节而编写的一个编程语言，他采用 BBC 电视节目《蒙提·派森的飞行马戏团（Monty Python’s Flying Circus，一译巨蟒剧团）》的名字来为这门编程语言命名。</p>\n<h1 id=\"Python-的特点\"><a href=\"#Python-的特点\" class=\"headerlink\" title=\"Python 的特点\"></a>Python 的特点</h1><ul>\n<li><p>简单</p>\n<p>Python 是一门简单且简约的语言。阅读一份优秀的 Python 程序代码就如同在阅读英语文章一样，Python 这种伪代码式的特质正是它的一大优势。它能够让你专注于解决问题的方案，而不是语言本身。</p>\n</li>\n<li><p>易于学习</p>\n<p>Python 是一门非常容易入门的语言，Python 有一套极其简单的语法体系。</p>\n</li>\n<li><p>免费开源</p>\n<p>Python 是 FLOSS （自由/开放源代码软件）的成员之一。简单来说，你可以自由地分发这一软件的拷贝，阅读它的源代码，并对其作出改动，或是将其的一部分运用于一款新的自由程序中。FLOSS 基于一个可以分享知识的社区理念而创建。</p>\n</li>\n<li><p>高级语言</p>\n<p>当你在用 Python 编写程序时，你不必考虑诸如你的程序应当如何使用内存等底层细节。</p>\n</li>\n<li><p>跨平台</p>\n<p>由于其开放源码的特性，Python 已被移植到其它诸多平台（意即它们已经过改动以保证其能正常工作）。如果你小心地避开了所有系统依赖型的特性，那么你所有的 Python 程序不必作任何改动就可以在其中任何一个平台上工作。</p>\n</li>\n<li><p>解释性</p>\n<p>一个用编译性语言比如C/C++写的程序在运行前需要通过编译器翻译成计算机能执行的机器码。而解释性语言比如Python写的程序在运行前不需要编译成机器码，而是先由Python解释器将源代码转换成称为<a href=\"http://baike.sogou.com/lemma/ShowInnerLink.htm?lemmaId=53858822&amp;ss_c=ssc.citiao.link\" target=\"_blank\" rel=\"noopener\">字节码</a>的中间形式，在运行时再把它翻译成计算机能理解的机器码。这一流程使得 Python 更加易于使用，你不必再担心该如何编译程序，或如何保证适当的库被正确的链接并加载等等步骤。这也同样使得 Python 程序更便携且易于移植，你只需要将 Python 程序拷贝到另一台电脑便可让它立即开始工作！</p>\n</li>\n<li><p>面向对象</p>\n<p>Python 同时支持面向过程编程与面向对象编程。在面向过程的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的。在面向对象的语言中，程序是由数据和功能组合而成的对象构建起来的。</p>\n</li>\n<li><p>可扩展性</p>\n<p>如果你需要代码的某一重要部分能够快速地运行，或希望算法的某些部分不被公开，你可以在 C/C++ 语言中编写这些程序，然后再将其运用于你的 Python 程序中。</p>\n</li>\n<li><p>可嵌入性</p>\n<p>你可以在你的 C/C++ 程序中嵌入 Python，从而向你的程序用户提供 <em>脚本</em> 功能</p>\n</li>\n<li><p>丰富的库</p>\n<p>实际上 Python 标准库的规模非常庞大。它能够帮助你完成诸多事情，包括正则表达式、文档生成、单元测试、多线程、数据库、网页浏览器、CGI、FTP、邮件、XML、XML-RPC、HTML、WAV 文件、密码系统、GUI（图形用户界面），以及其它系统依赖型的活动。</p>\n</li>\n</ul>\n<h1 id=\"Python的缺点\"><a href=\"#Python的缺点\" class=\"headerlink\" title=\"Python的缺点\"></a>Python的缺点</h1><ul>\n<li><p>运行速度慢</p>\n<p>和 C/C++ 程序相比非常慢，因为Python是解释型语言，你的代码在执行时会一行一行地翻译成计算机能理解的机器码，这个翻译过程非常耗时，所以很慢。而 C/C++ 程序是运行前直接编译成CPU能执行的机器码，所以非常快。但是，除了像视频高清解码等计算密集型任务对运行速度有较高的要求外，在大部分时候，我们可能并不需要非常快的运行速度。</p>\n</li>\n<li><p>代码不能加密</p>\n<p>如果要发布你的Python程序，实际上就是发布源代码，这一点跟C/C++语言不同，C/C++语言不用发布源代码，只需要把编译后的机器码（也就是你在Windows上常见的xxx.exe文件）发布出去。要从机器码反推出C代码是不可能的，所以，凡是编译型的语言，都没有这个问题，而解释型的语言，则必须把源码发布出去。这个缺点仅限于你要编写的软件需要卖给别人挣钱的时候。好消息是目前的互联网时代，靠卖软件授权的商业模式越来越少了，靠网站和移动应用卖服务的模式越来越多了，后一种模式不需要把源码给别人。</p>\n<p>​</p>\n</li>\n</ul>\n<h1 id=\"Python-适合做什么\"><a href=\"#Python-适合做什么\" class=\"headerlink\" title=\"Python 适合做什么\"></a>Python 适合做什么</h1><ul>\n<li><p>脚本开发</p>\n<p>这些简短的程序自动执行常见的管理任务，如在系统中新增用户、将文件上传到网站、在不使用浏览器的情况下下载网页等。</p>\n</li>\n<li><p>网站开发</p>\n<p>不少大型网站都是使用 Python 作为后台开发语言的，比如 YouTube、Pinterest、国内的豆瓣和知乎等。</p>\n</li>\n<li><p>文本处理</p>\n<p>Python在字符串和文本文件处理方面提供了强大的支持，包括正则表达式和Unicode。</p>\n</li>\n<li><p>科学计算</p>\n<p>网上有很多卓越的Python科学计算库，提供了用于统计、数学计算和绘图的函数。</p>\n</li>\n<li><p>机器学习</p>\n<p>有不少知名的机器学习库也是使用 Python 开发的，比如，scikit-learn 是一个强大的机器学习库，Theano 是一个成熟的深度学习库。</p>\n</li>\n<li><p>教育</p>\n<p>鉴于Python简洁实用，越来越多的学校将其作为第一门编程教学语言。</p>\n</li>\n</ul>"},{"title":"Mac OSX 完全卸载node.js","date":"2017-08-31T16:00:00.000Z","updated":"2017-08-31T16:00:00.000Z","_content":"\n## 删除/usr/local/lib中的所有node和node_modules的文件夹\n\n```\n$ cd /usr/local/lib\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n```\n\n<!-- more --> \n\n## 如果是从brew安装的, 运行brew uninstall node\n## 检查~/中所有的local，lib或者include文件夹, 删除里面所有node和node_modules\n\n```\n$ cd ~/local\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n\n$ cd ~/lib\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n\n$ cd ~/include\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n```\n## 在/usr/local/bin中, 删除所有node的可执行文件\n\n```\n$ cd /usr/local/bin\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n```\n## 最后运行以下代码:\n\n```\n$ sudo rm /usr/local/bin/npm\n$ sudo rm /usr/local/share/man/man1/node.1\n$ sudo rm /usr/local/lib/dtrace/node.d\n$ sudo rm -rf ~/.npm\n$ sudo rm -rf ~/.node-gyp\n$ sudo rm /opt/local/bin/node\n$ sudo rm /opt/local/include/node\n$ sudo rm -rf /opt/local/lib/node_modules\n```\n\n\n\n","source":"_posts/Mac OSX 完全卸载node.js.md","raw":"---\ntitle: Mac OSX 完全卸载node.js\ndate: 2017-09-01\nupdated: 2017-09-01\ntags: [node,mac]\ncategories: [node]\n---\n\n## 删除/usr/local/lib中的所有node和node_modules的文件夹\n\n```\n$ cd /usr/local/lib\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n```\n\n<!-- more --> \n\n## 如果是从brew安装的, 运行brew uninstall node\n## 检查~/中所有的local，lib或者include文件夹, 删除里面所有node和node_modules\n\n```\n$ cd ~/local\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n\n$ cd ~/lib\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n\n$ cd ~/include\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n```\n## 在/usr/local/bin中, 删除所有node的可执行文件\n\n```\n$ cd /usr/local/bin\n$ sudo rm -rf node\n$ sudo rm -rf node_modules\n```\n## 最后运行以下代码:\n\n```\n$ sudo rm /usr/local/bin/npm\n$ sudo rm /usr/local/share/man/man1/node.1\n$ sudo rm /usr/local/lib/dtrace/node.d\n$ sudo rm -rf ~/.npm\n$ sudo rm -rf ~/.node-gyp\n$ sudo rm /opt/local/bin/node\n$ sudo rm /opt/local/include/node\n$ sudo rm -rf /opt/local/lib/node_modules\n```\n\n\n\n","slug":"Mac OSX 完全卸载node.js","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yar20003uw0mvvbz5krj","content":"<h2 id=\"删除-usr-local-lib中的所有node和node-modules的文件夹\"><a href=\"#删除-usr-local-lib中的所有node和node-modules的文件夹\" class=\"headerlink\" title=\"删除/usr/local/lib中的所有node和node_modules的文件夹\"></a>删除/usr/local/lib中的所有node和node_modules的文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /usr/local/lib</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<h2 id=\"如果是从brew安装的-运行brew-uninstall-node\"><a href=\"#如果是从brew安装的-运行brew-uninstall-node\" class=\"headerlink\" title=\"如果是从brew安装的, 运行brew uninstall node\"></a>如果是从brew安装的, 运行brew uninstall node</h2><h2 id=\"检查-中所有的local，lib或者include文件夹-删除里面所有node和node-modules\"><a href=\"#检查-中所有的local，lib或者include文件夹-删除里面所有node和node-modules\" class=\"headerlink\" title=\"检查~/中所有的local，lib或者include文件夹, 删除里面所有node和node_modules\"></a>检查~/中所有的local，lib或者include文件夹, 删除里面所有node和node_modules</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/local</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">$ cd ~/lib</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">$ cd ~/include</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br></pre></td></tr></table></figure>\n<h2 id=\"在-usr-local-bin中-删除所有node的可执行文件\"><a href=\"#在-usr-local-bin中-删除所有node的可执行文件\" class=\"headerlink\" title=\"在/usr/local/bin中, 删除所有node的可执行文件\"></a>在/usr/local/bin中, 删除所有node的可执行文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /usr/local/bin</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后运行以下代码\"><a href=\"#最后运行以下代码\" class=\"headerlink\" title=\"最后运行以下代码:\"></a>最后运行以下代码:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo rm /usr/local/bin/npm</span><br><span class=\"line\">$ sudo rm /usr/local/share/man/man1/node.1</span><br><span class=\"line\">$ sudo rm /usr/local/lib/dtrace/node.d</span><br><span class=\"line\">$ sudo rm -rf ~/.npm</span><br><span class=\"line\">$ sudo rm -rf ~/.node-gyp</span><br><span class=\"line\">$ sudo rm /opt/local/bin/node</span><br><span class=\"line\">$ sudo rm /opt/local/include/node</span><br><span class=\"line\">$ sudo rm -rf /opt/local/lib/node_modules</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"删除-usr-local-lib中的所有node和node-modules的文件夹\"><a href=\"#删除-usr-local-lib中的所有node和node-modules的文件夹\" class=\"headerlink\" title=\"删除/usr/local/lib中的所有node和node_modules的文件夹\"></a>删除/usr/local/lib中的所有node和node_modules的文件夹</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /usr/local/lib</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"如果是从brew安装的-运行brew-uninstall-node\"><a href=\"#如果是从brew安装的-运行brew-uninstall-node\" class=\"headerlink\" title=\"如果是从brew安装的, 运行brew uninstall node\"></a>如果是从brew安装的, 运行brew uninstall node</h2><h2 id=\"检查-中所有的local，lib或者include文件夹-删除里面所有node和node-modules\"><a href=\"#检查-中所有的local，lib或者include文件夹-删除里面所有node和node-modules\" class=\"headerlink\" title=\"检查~/中所有的local，lib或者include文件夹, 删除里面所有node和node_modules\"></a>检查~/中所有的local，lib或者include文件夹, 删除里面所有node和node_modules</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd ~/local</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">$ cd ~/lib</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br><span class=\"line\"></span><br><span class=\"line\">$ cd ~/include</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br></pre></td></tr></table></figure>\n<h2 id=\"在-usr-local-bin中-删除所有node的可执行文件\"><a href=\"#在-usr-local-bin中-删除所有node的可执行文件\" class=\"headerlink\" title=\"在/usr/local/bin中, 删除所有node的可执行文件\"></a>在/usr/local/bin中, 删除所有node的可执行文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd /usr/local/bin</span><br><span class=\"line\">$ sudo rm -rf node</span><br><span class=\"line\">$ sudo rm -rf node_modules</span><br></pre></td></tr></table></figure>\n<h2 id=\"最后运行以下代码\"><a href=\"#最后运行以下代码\" class=\"headerlink\" title=\"最后运行以下代码:\"></a>最后运行以下代码:</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo rm /usr/local/bin/npm</span><br><span class=\"line\">$ sudo rm /usr/local/share/man/man1/node.1</span><br><span class=\"line\">$ sudo rm /usr/local/lib/dtrace/node.d</span><br><span class=\"line\">$ sudo rm -rf ~/.npm</span><br><span class=\"line\">$ sudo rm -rf ~/.node-gyp</span><br><span class=\"line\">$ sudo rm /opt/local/bin/node</span><br><span class=\"line\">$ sudo rm /opt/local/include/node</span><br><span class=\"line\">$ sudo rm -rf /opt/local/lib/node_modules</span><br></pre></td></tr></table></figure>"},{"title":"Mac OS X 包管理工具 Homebrew 安装与使用","date":"2018-01-08T16:00:00.000Z","updated":"2018-01-08T16:00:00.000Z","_content":"\nHomebrew 是Mac OS 下的包管理工具，类似于Ubuntu下的apt-get命令，通过这个工具我们可以快速获取所需要的软件而不需要像在Windows系统中那样打开浏览器，找到需要下载的安装包，然后才能进行下载。Homebrew拥有安装、卸载、更新、查看、搜索等很多实用的功能。通过一条简单的指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。\n<!-- more -->\n\n# Homebrew 能干什么?\n\n1. 使用 Homebrew 安装 Apple 没有预装但 [你需要的东西](https://github.com/Homebrew/homebrew-core/tree/master/Formula)\n2. Homebrew 会将软件包安装到独立目录，并将其文件软链接至 `/usr/local`\n3. Homebrew 不会将文件安装到它本身目录之外，所以您可将 Homebrew 安装到任意位置\n4. 轻松创建你自己的 Homebrew 包\n5. 完全基于 git 和 ruby，所以自由修改的同时你仍可以轻松撤销你的变更或与上游更新合并\n6. Homebrew 的配方都是简单的 Ruby 脚本\n7. Homebrew 使 macOS 更完整。使用 `gem` 来安装 gems、用 `brew` 来安装那些依赖包\n\n\n\n# Homebrew 安装\n\n```ruby\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n**安装homebrew后报错-bash: brew: command not found 的解决方法**\n\n其实解决这个问题真的很简单。如下：\n\n```bash\nvim ~/.bash_profile\n```\n\n添加下面一行\n\n```bash\nexport PATH=/usr/local/bin:$PATH\n```\n\n保存，执行下面命令使配置生效\n\n```bash\nsource ~/.bash_profile\n```\n\n重新打开命令行工具，再次使用brew 命令就ok了\n\n\n\n# Homebrew 基本使用\n\n**安装任意包**\n\n```bash\n$ brew install <package_name>  \n```\n\n**卸载任意包**\n\n```bash\n$ brew uninstall <packageName>\n```\n\n**更新 Homebrew 在服务器端上的包目录**\n\n```bash\n$ brew update  \n```\n\n**查看你的包是否需要更新**\n\n```bash\n$ brew outdated  \n```\n\n**更新包**\n\n```bash\n$ brew upgrade <package_name>  \n```\n\n**查询可用的包**\n\n```bash\n$ brew search <packageName>\n```\n\n**查看你安装过的包列表（包括版本号）**\n\n```bash\n$ brew list --versions  \n```\n\n**查看任意包信息**\n\n```bash\n$ brew info <packageName>\n```\n\n**查看帮助信息**\n\n```bash\n$ brew -h\n```\n\n**Homebrew 将会把老版本的包缓存下来，以便当你想回滚至旧版本时使用。但这是比较少使用的情况，当你想清理旧版本的包缓存时，可以运行：**\n\n```bash\n$ brew cleanup  \n```\n\n\n\n# Homebrew 镜像\n\n由于Homebrew 下载源基本在国外，因此在中国的开发者下载速度可能会比较慢，针对这个问题，有一些人为国内的开发者做了一个Homebrew 镜像，比如http://ban.ninja/\n\n**配置镜像源**\n\n设置环境变量 HOMEBREW_BOTTLE_DOMAIN 即可使用本镜像源加速下载 Homebrew 资源。\n\n**bash**\n\n打开 `~/.bashrc`\n\n```bash\nsudo vim ~/.bashrc\n```\n\n在 `~/.bashrc` 中加入\n\n```bash\nexport HOMEBREW_BOTTLE_DOMAIN=http://7xkcej.dl1.z0.glb.clouddn.com\n```\n\n**说明**\n\n本镜像源只镜像了 Homebrew 托管在 Bintray 上的二进制预编译包，所以只对这些二进制包有加速功能（Homebrew 大部分情况下使用该渠道下载安装软件）。\n\n\n\n#  Homebrew Cask\n\nHomebrew Cask 由社区进行维护，因此它有更多，更丰富的软件，我们可以通过Homebrew Cask 优雅、简单、快速的安装和管理 OS X 图形界面程序，比如 Google Chrome 和 Evernote。\n\n**安装**\n\n安装 Homebrew-cask 是如此的简单直接，运行以下命令即可完成：\n\n```bash\n$ brew tap caskroom/cask  // 添加 Github 上的 caskroom/cask 库\n$ brew install brew-cask  // 安装 brew-cask\n$ brew update && brew upgrade brew-cask && brew cleanup // 更新  \n$ brew cask install google-chrome // 安装 Google 浏览器\n```\n\n**搜索**\n\n如果你想查看 cask 上是否存在你需要的 app，可以到 [caskroom.io](http://caskroom.io/)进行搜索。\n\n**文件预览插件**\n\n有些 [插件](https://github.com/sindresorhus/quick-look-plugins) 可以让 Mac 上的文件预览更有效，比如语法高亮、markdown 渲染、json 预览等等。\n\n```bash\n$ brew cask install qlcolorcode\n$ brew cask install qlstephen\n$ brew cask install qlmarkdown\n$ brew cask install quicklook-json\n$ brew cask install qlprettypatch\n$ brew cask install quicklook-csv\n$ brew cask install betterzipql\n$ brew cask install webp-quicklook\n$ brew cask install suspicious-package   \n```\n\n**OS X 图形界面程序**\n\n```bash\n$ brew cask install alfred\n$ brew cask install appcleaner\n$ brew cask install cheatsheet\n$ brew cask install dropbox\n$ brew cask install google-chrome\n$ brew cask install onepassword\n$ brew cask install sublime-text\n$ brew cask install totalfinder\n...  \n```\n\n\n\n#  Cakebrew\n\nMac下Homebrew的图形化界面工具[Cakebrew](https://www.cakebrew.com/)\n\n**安装**\n\n```bash\n$ brew cask install cakebrew\n```\n\n如果不能下载直接上[官网](https://www.cakebrew.com/)下载dmg包进行安装","source":"_posts/Mac OS X 包管理工具安装与使用.md","raw":"---\ntitle: Mac OS X 包管理工具 Homebrew 安装与使用\ndate: 2018-01-09\nupdated: 2018-01-09\ntags: [Mac,包管理工具,Homebrew]\ncategories: [Mac]\n---\n\nHomebrew 是Mac OS 下的包管理工具，类似于Ubuntu下的apt-get命令，通过这个工具我们可以快速获取所需要的软件而不需要像在Windows系统中那样打开浏览器，找到需要下载的安装包，然后才能进行下载。Homebrew拥有安装、卸载、更新、查看、搜索等很多实用的功能。通过一条简单的指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。\n<!-- more -->\n\n# Homebrew 能干什么?\n\n1. 使用 Homebrew 安装 Apple 没有预装但 [你需要的东西](https://github.com/Homebrew/homebrew-core/tree/master/Formula)\n2. Homebrew 会将软件包安装到独立目录，并将其文件软链接至 `/usr/local`\n3. Homebrew 不会将文件安装到它本身目录之外，所以您可将 Homebrew 安装到任意位置\n4. 轻松创建你自己的 Homebrew 包\n5. 完全基于 git 和 ruby，所以自由修改的同时你仍可以轻松撤销你的变更或与上游更新合并\n6. Homebrew 的配方都是简单的 Ruby 脚本\n7. Homebrew 使 macOS 更完整。使用 `gem` 来安装 gems、用 `brew` 来安装那些依赖包\n\n\n\n# Homebrew 安装\n\n```ruby\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n```\n\n**安装homebrew后报错-bash: brew: command not found 的解决方法**\n\n其实解决这个问题真的很简单。如下：\n\n```bash\nvim ~/.bash_profile\n```\n\n添加下面一行\n\n```bash\nexport PATH=/usr/local/bin:$PATH\n```\n\n保存，执行下面命令使配置生效\n\n```bash\nsource ~/.bash_profile\n```\n\n重新打开命令行工具，再次使用brew 命令就ok了\n\n\n\n# Homebrew 基本使用\n\n**安装任意包**\n\n```bash\n$ brew install <package_name>  \n```\n\n**卸载任意包**\n\n```bash\n$ brew uninstall <packageName>\n```\n\n**更新 Homebrew 在服务器端上的包目录**\n\n```bash\n$ brew update  \n```\n\n**查看你的包是否需要更新**\n\n```bash\n$ brew outdated  \n```\n\n**更新包**\n\n```bash\n$ brew upgrade <package_name>  \n```\n\n**查询可用的包**\n\n```bash\n$ brew search <packageName>\n```\n\n**查看你安装过的包列表（包括版本号）**\n\n```bash\n$ brew list --versions  \n```\n\n**查看任意包信息**\n\n```bash\n$ brew info <packageName>\n```\n\n**查看帮助信息**\n\n```bash\n$ brew -h\n```\n\n**Homebrew 将会把老版本的包缓存下来，以便当你想回滚至旧版本时使用。但这是比较少使用的情况，当你想清理旧版本的包缓存时，可以运行：**\n\n```bash\n$ brew cleanup  \n```\n\n\n\n# Homebrew 镜像\n\n由于Homebrew 下载源基本在国外，因此在中国的开发者下载速度可能会比较慢，针对这个问题，有一些人为国内的开发者做了一个Homebrew 镜像，比如http://ban.ninja/\n\n**配置镜像源**\n\n设置环境变量 HOMEBREW_BOTTLE_DOMAIN 即可使用本镜像源加速下载 Homebrew 资源。\n\n**bash**\n\n打开 `~/.bashrc`\n\n```bash\nsudo vim ~/.bashrc\n```\n\n在 `~/.bashrc` 中加入\n\n```bash\nexport HOMEBREW_BOTTLE_DOMAIN=http://7xkcej.dl1.z0.glb.clouddn.com\n```\n\n**说明**\n\n本镜像源只镜像了 Homebrew 托管在 Bintray 上的二进制预编译包，所以只对这些二进制包有加速功能（Homebrew 大部分情况下使用该渠道下载安装软件）。\n\n\n\n#  Homebrew Cask\n\nHomebrew Cask 由社区进行维护，因此它有更多，更丰富的软件，我们可以通过Homebrew Cask 优雅、简单、快速的安装和管理 OS X 图形界面程序，比如 Google Chrome 和 Evernote。\n\n**安装**\n\n安装 Homebrew-cask 是如此的简单直接，运行以下命令即可完成：\n\n```bash\n$ brew tap caskroom/cask  // 添加 Github 上的 caskroom/cask 库\n$ brew install brew-cask  // 安装 brew-cask\n$ brew update && brew upgrade brew-cask && brew cleanup // 更新  \n$ brew cask install google-chrome // 安装 Google 浏览器\n```\n\n**搜索**\n\n如果你想查看 cask 上是否存在你需要的 app，可以到 [caskroom.io](http://caskroom.io/)进行搜索。\n\n**文件预览插件**\n\n有些 [插件](https://github.com/sindresorhus/quick-look-plugins) 可以让 Mac 上的文件预览更有效，比如语法高亮、markdown 渲染、json 预览等等。\n\n```bash\n$ brew cask install qlcolorcode\n$ brew cask install qlstephen\n$ brew cask install qlmarkdown\n$ brew cask install quicklook-json\n$ brew cask install qlprettypatch\n$ brew cask install quicklook-csv\n$ brew cask install betterzipql\n$ brew cask install webp-quicklook\n$ brew cask install suspicious-package   \n```\n\n**OS X 图形界面程序**\n\n```bash\n$ brew cask install alfred\n$ brew cask install appcleaner\n$ brew cask install cheatsheet\n$ brew cask install dropbox\n$ brew cask install google-chrome\n$ brew cask install onepassword\n$ brew cask install sublime-text\n$ brew cask install totalfinder\n...  \n```\n\n\n\n#  Cakebrew\n\nMac下Homebrew的图形化界面工具[Cakebrew](https://www.cakebrew.com/)\n\n**安装**\n\n```bash\n$ brew cask install cakebrew\n```\n\n如果不能下载直接上[官网](https://www.cakebrew.com/)下载dmg包进行安装","slug":"Mac OS X 包管理工具安装与使用","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yar80007uw0mnq58qgm0","content":"<p>Homebrew 是Mac OS 下的包管理工具，类似于Ubuntu下的apt-get命令，通过这个工具我们可以快速获取所需要的软件而不需要像在Windows系统中那样打开浏览器，找到需要下载的安装包，然后才能进行下载。Homebrew拥有安装、卸载、更新、查看、搜索等很多实用的功能。通过一条简单的指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。<br><a id=\"more\"></a></p>\n<h1 id=\"Homebrew-能干什么\"><a href=\"#Homebrew-能干什么\" class=\"headerlink\" title=\"Homebrew 能干什么?\"></a>Homebrew 能干什么?</h1><ol>\n<li>使用 Homebrew 安装 Apple 没有预装但 <a href=\"https://github.com/Homebrew/homebrew-core/tree/master/Formula\" target=\"_blank\" rel=\"noopener\">你需要的东西</a></li>\n<li>Homebrew 会将软件包安装到独立目录，并将其文件软链接至 <code>/usr/local</code></li>\n<li>Homebrew 不会将文件安装到它本身目录之外，所以您可将 Homebrew 安装到任意位置</li>\n<li>轻松创建你自己的 Homebrew 包</li>\n<li>完全基于 git 和 ruby，所以自由修改的同时你仍可以轻松撤销你的变更或与上游更新合并</li>\n<li>Homebrew 的配方都是简单的 Ruby 脚本</li>\n<li>Homebrew 使 macOS 更完整。使用 <code>gem</code> 来安装 gems、用 <code>brew</code> 来安装那些依赖包</li>\n</ol>\n<h1 id=\"Homebrew-安装\"><a href=\"#Homebrew-安装\" class=\"headerlink\" title=\"Homebrew 安装\"></a>Homebrew 安装</h1><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</span></span><br></pre></td></tr></table></figure>\n<p><strong>安装homebrew后报错-bash: brew: command not found 的解决方法</strong></p>\n<p>其实解决这个问题真的很简单。如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>添加下面一行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/<span class=\"built_in\">local</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<p>保存，执行下面命令使配置生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>重新打开命令行工具，再次使用brew 命令就ok了</p>\n<h1 id=\"Homebrew-基本使用\"><a href=\"#Homebrew-基本使用\" class=\"headerlink\" title=\"Homebrew 基本使用\"></a>Homebrew 基本使用</h1><p><strong>安装任意包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install &lt;package_name&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>卸载任意包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew uninstall &lt;packageName&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>更新 Homebrew 在服务器端上的包目录</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew update</span><br></pre></td></tr></table></figure>\n<p><strong>查看你的包是否需要更新</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew outdated</span><br></pre></td></tr></table></figure>\n<p><strong>更新包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew upgrade &lt;package_name&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>查询可用的包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew search &lt;packageName&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>查看你安装过的包列表（包括版本号）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew list --versions</span><br></pre></td></tr></table></figure>\n<p><strong>查看任意包信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew info &lt;packageName&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>查看帮助信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew -h</span><br></pre></td></tr></table></figure>\n<p><strong>Homebrew 将会把老版本的包缓存下来，以便当你想回滚至旧版本时使用。但这是比较少使用的情况，当你想清理旧版本的包缓存时，可以运行：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cleanup</span><br></pre></td></tr></table></figure>\n<h1 id=\"Homebrew-镜像\"><a href=\"#Homebrew-镜像\" class=\"headerlink\" title=\"Homebrew 镜像\"></a>Homebrew 镜像</h1><p>由于Homebrew 下载源基本在国外，因此在中国的开发者下载速度可能会比较慢，针对这个问题，有一些人为国内的开发者做了一个Homebrew 镜像，比如<a href=\"http://ban.ninja/\" target=\"_blank\" rel=\"noopener\">http://ban.ninja/</a></p>\n<p><strong>配置镜像源</strong></p>\n<p>设置环境变量 HOMEBREW_BOTTLE_DOMAIN 即可使用本镜像源加速下载 Homebrew 资源。</p>\n<p><strong>bash</strong></p>\n<p>打开 <code>~/.bashrc</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>在 <code>~/.bashrc</code> 中加入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BOTTLE_DOMAIN=http://7xkcej.dl1.z0.glb.clouddn.com</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong></p>\n<p>本镜像源只镜像了 Homebrew 托管在 Bintray 上的二进制预编译包，所以只对这些二进制包有加速功能（Homebrew 大部分情况下使用该渠道下载安装软件）。</p>\n<h1 id=\"Homebrew-Cask\"><a href=\"#Homebrew-Cask\" class=\"headerlink\" title=\"Homebrew Cask\"></a>Homebrew Cask</h1><p>Homebrew Cask 由社区进行维护，因此它有更多，更丰富的软件，我们可以通过Homebrew Cask 优雅、简单、快速的安装和管理 OS X 图形界面程序，比如 Google Chrome 和 Evernote。</p>\n<p><strong>安装</strong></p>\n<p>安装 Homebrew-cask 是如此的简单直接，运行以下命令即可完成：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew tap caskroom/cask  // 添加 Github 上的 caskroom/cask 库</span><br><span class=\"line\">$ brew install brew-cask  // 安装 brew-cask</span><br><span class=\"line\">$ brew update &amp;&amp; brew upgrade brew-cask &amp;&amp; brew cleanup // 更新  </span><br><span class=\"line\">$ brew cask install google-chrome // 安装 Google 浏览器</span><br></pre></td></tr></table></figure>\n<p><strong>搜索</strong></p>\n<p>如果你想查看 cask 上是否存在你需要的 app，可以到 <a href=\"http://caskroom.io/\" target=\"_blank\" rel=\"noopener\">caskroom.io</a>进行搜索。</p>\n<p><strong>文件预览插件</strong></p>\n<p>有些 <a href=\"https://github.com/sindresorhus/quick-look-plugins\" target=\"_blank\" rel=\"noopener\">插件</a> 可以让 Mac 上的文件预览更有效，比如语法高亮、markdown 渲染、json 预览等等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cask install qlcolorcode</span><br><span class=\"line\">$ brew cask install qlstephen</span><br><span class=\"line\">$ brew cask install qlmarkdown</span><br><span class=\"line\">$ brew cask install quicklook-json</span><br><span class=\"line\">$ brew cask install qlprettypatch</span><br><span class=\"line\">$ brew cask install quicklook-csv</span><br><span class=\"line\">$ brew cask install betterzipql</span><br><span class=\"line\">$ brew cask install webp-quicklook</span><br><span class=\"line\">$ brew cask install suspicious-package</span><br></pre></td></tr></table></figure>\n<p><strong>OS X 图形界面程序</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cask install alfred</span><br><span class=\"line\">$ brew cask install appcleaner</span><br><span class=\"line\">$ brew cask install cheatsheet</span><br><span class=\"line\">$ brew cask install dropbox</span><br><span class=\"line\">$ brew cask install google-chrome</span><br><span class=\"line\">$ brew cask install onepassword</span><br><span class=\"line\">$ brew cask install sublime-text</span><br><span class=\"line\">$ brew cask install totalfinder</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h1 id=\"Cakebrew\"><a href=\"#Cakebrew\" class=\"headerlink\" title=\"Cakebrew\"></a>Cakebrew</h1><p>Mac下Homebrew的图形化界面工具<a href=\"https://www.cakebrew.com/\" target=\"_blank\" rel=\"noopener\">Cakebrew</a></p>\n<p><strong>安装</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cask install cakebrew</span><br></pre></td></tr></table></figure>\n<p>如果不能下载直接上<a href=\"https://www.cakebrew.com/\" target=\"_blank\" rel=\"noopener\">官网</a>下载dmg包进行安装</p>\n","site":{"data":{}},"excerpt":"<p>Homebrew 是Mac OS 下的包管理工具，类似于Ubuntu下的apt-get命令，通过这个工具我们可以快速获取所需要的软件而不需要像在Windows系统中那样打开浏览器，找到需要下载的安装包，然后才能进行下载。Homebrew拥有安装、卸载、更新、查看、搜索等很多实用的功能。通过一条简单的指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。<br>","more":"</p>\n<h1 id=\"Homebrew-能干什么\"><a href=\"#Homebrew-能干什么\" class=\"headerlink\" title=\"Homebrew 能干什么?\"></a>Homebrew 能干什么?</h1><ol>\n<li>使用 Homebrew 安装 Apple 没有预装但 <a href=\"https://github.com/Homebrew/homebrew-core/tree/master/Formula\" target=\"_blank\" rel=\"noopener\">你需要的东西</a></li>\n<li>Homebrew 会将软件包安装到独立目录，并将其文件软链接至 <code>/usr/local</code></li>\n<li>Homebrew 不会将文件安装到它本身目录之外，所以您可将 Homebrew 安装到任意位置</li>\n<li>轻松创建你自己的 Homebrew 包</li>\n<li>完全基于 git 和 ruby，所以自由修改的同时你仍可以轻松撤销你的变更或与上游更新合并</li>\n<li>Homebrew 的配方都是简单的 Ruby 脚本</li>\n<li>Homebrew 使 macOS 更完整。使用 <code>gem</code> 来安装 gems、用 <code>brew</code> 来安装那些依赖包</li>\n</ol>\n<h1 id=\"Homebrew-安装\"><a href=\"#Homebrew-安装\" class=\"headerlink\" title=\"Homebrew 安装\"></a>Homebrew 安装</h1><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/bin/ruby -e <span class=\"string\">\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"</span></span><br></pre></td></tr></table></figure>\n<p><strong>安装homebrew后报错-bash: brew: command not found 的解决方法</strong></p>\n<p>其实解决这个问题真的很简单。如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>添加下面一行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> PATH=/usr/<span class=\"built_in\">local</span>/bin:<span class=\"variable\">$PATH</span></span><br></pre></td></tr></table></figure>\n<p>保存，执行下面命令使配置生效</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>\n<p>重新打开命令行工具，再次使用brew 命令就ok了</p>\n<h1 id=\"Homebrew-基本使用\"><a href=\"#Homebrew-基本使用\" class=\"headerlink\" title=\"Homebrew 基本使用\"></a>Homebrew 基本使用</h1><p><strong>安装任意包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install &lt;package_name&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>卸载任意包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew uninstall &lt;packageName&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>更新 Homebrew 在服务器端上的包目录</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew update</span><br></pre></td></tr></table></figure>\n<p><strong>查看你的包是否需要更新</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew outdated</span><br></pre></td></tr></table></figure>\n<p><strong>更新包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew upgrade &lt;package_name&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>查询可用的包</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew search &lt;packageName&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>查看你安装过的包列表（包括版本号）</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew list --versions</span><br></pre></td></tr></table></figure>\n<p><strong>查看任意包信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew info &lt;packageName&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>查看帮助信息</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew -h</span><br></pre></td></tr></table></figure>\n<p><strong>Homebrew 将会把老版本的包缓存下来，以便当你想回滚至旧版本时使用。但这是比较少使用的情况，当你想清理旧版本的包缓存时，可以运行：</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cleanup</span><br></pre></td></tr></table></figure>\n<h1 id=\"Homebrew-镜像\"><a href=\"#Homebrew-镜像\" class=\"headerlink\" title=\"Homebrew 镜像\"></a>Homebrew 镜像</h1><p>由于Homebrew 下载源基本在国外，因此在中国的开发者下载速度可能会比较慢，针对这个问题，有一些人为国内的开发者做了一个Homebrew 镜像，比如<a href=\"http://ban.ninja/\" target=\"_blank\" rel=\"noopener\">http://ban.ninja/</a></p>\n<p><strong>配置镜像源</strong></p>\n<p>设置环境变量 HOMEBREW_BOTTLE_DOMAIN 即可使用本镜像源加速下载 Homebrew 资源。</p>\n<p><strong>bash</strong></p>\n<p>打开 <code>~/.bashrc</code></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure>\n<p>在 <code>~/.bashrc</code> 中加入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BOTTLE_DOMAIN=http://7xkcej.dl1.z0.glb.clouddn.com</span><br></pre></td></tr></table></figure>\n<p><strong>说明</strong></p>\n<p>本镜像源只镜像了 Homebrew 托管在 Bintray 上的二进制预编译包，所以只对这些二进制包有加速功能（Homebrew 大部分情况下使用该渠道下载安装软件）。</p>\n<h1 id=\"Homebrew-Cask\"><a href=\"#Homebrew-Cask\" class=\"headerlink\" title=\"Homebrew Cask\"></a>Homebrew Cask</h1><p>Homebrew Cask 由社区进行维护，因此它有更多，更丰富的软件，我们可以通过Homebrew Cask 优雅、简单、快速的安装和管理 OS X 图形界面程序，比如 Google Chrome 和 Evernote。</p>\n<p><strong>安装</strong></p>\n<p>安装 Homebrew-cask 是如此的简单直接，运行以下命令即可完成：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew tap caskroom/cask  // 添加 Github 上的 caskroom/cask 库</span><br><span class=\"line\">$ brew install brew-cask  // 安装 brew-cask</span><br><span class=\"line\">$ brew update &amp;&amp; brew upgrade brew-cask &amp;&amp; brew cleanup // 更新  </span><br><span class=\"line\">$ brew cask install google-chrome // 安装 Google 浏览器</span><br></pre></td></tr></table></figure>\n<p><strong>搜索</strong></p>\n<p>如果你想查看 cask 上是否存在你需要的 app，可以到 <a href=\"http://caskroom.io/\" target=\"_blank\" rel=\"noopener\">caskroom.io</a>进行搜索。</p>\n<p><strong>文件预览插件</strong></p>\n<p>有些 <a href=\"https://github.com/sindresorhus/quick-look-plugins\" target=\"_blank\" rel=\"noopener\">插件</a> 可以让 Mac 上的文件预览更有效，比如语法高亮、markdown 渲染、json 预览等等。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cask install qlcolorcode</span><br><span class=\"line\">$ brew cask install qlstephen</span><br><span class=\"line\">$ brew cask install qlmarkdown</span><br><span class=\"line\">$ brew cask install quicklook-json</span><br><span class=\"line\">$ brew cask install qlprettypatch</span><br><span class=\"line\">$ brew cask install quicklook-csv</span><br><span class=\"line\">$ brew cask install betterzipql</span><br><span class=\"line\">$ brew cask install webp-quicklook</span><br><span class=\"line\">$ brew cask install suspicious-package</span><br></pre></td></tr></table></figure>\n<p><strong>OS X 图形界面程序</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cask install alfred</span><br><span class=\"line\">$ brew cask install appcleaner</span><br><span class=\"line\">$ brew cask install cheatsheet</span><br><span class=\"line\">$ brew cask install dropbox</span><br><span class=\"line\">$ brew cask install google-chrome</span><br><span class=\"line\">$ brew cask install onepassword</span><br><span class=\"line\">$ brew cask install sublime-text</span><br><span class=\"line\">$ brew cask install totalfinder</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<h1 id=\"Cakebrew\"><a href=\"#Cakebrew\" class=\"headerlink\" title=\"Cakebrew\"></a>Cakebrew</h1><p>Mac下Homebrew的图形化界面工具<a href=\"https://www.cakebrew.com/\" target=\"_blank\" rel=\"noopener\">Cakebrew</a></p>\n<p><strong>安装</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew cask install cakebrew</span><br></pre></td></tr></table></figure>\n<p>如果不能下载直接上<a href=\"https://www.cakebrew.com/\" target=\"_blank\" rel=\"noopener\">官网</a>下载dmg包进行安装</p>"},{"title":"Python入门02 — Python安装及开发环境配置","date":"2018-01-09T16:00:00.000Z","updated":"2018-01-09T16:00:00.000Z","_content":"\nPython 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。这篇文章主要介绍Python在Mac OS X、Windows和Linux系统的安装，为以后python的学习做准备。\n\n<!-- more -->\n\n# 在Mac OS X 系统中安装\n\nMac OS X自带并安装了一个Python版本，但该版本没有IDLE编辑器，通常也不是最新版本，需要安装最新版本\n\n- 对于 Mac OS X 用户，你可以使用 [Homebrew](http://brew.sh/) 并通过命令 `brew install python3` 进行安装，如果你还没有安装Homebrew，可以参考[Mac OS X 包管理工具 Homebrew 安装与使用](http://geekspeng.cn/2018/01/09/Mac%20OS%20X%20%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/)\n- 也可以下载一个安装程序并运行它\n\n要想验证安装是否成功，你可以通过按键 `[Command + Space]`（以启动 Spotlight 搜索），输入 `Terminal` 并按下 `[enter]`键来启动终端程序。现在，试着运行 `python3` 来确保其没有任何错误\n\n```bash\nxuepengdeMacBook-Pro:~ geekspeng$ python3\nPython 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```\n\n\n\n# 在Windows系统中安装\n\n1. 访问Python下载页面[www.python.org/download](http://www.python.org/download)并下载最新的版本python（32位选择[Windows x86 executable installer](https://www.python.org/ftp/python/3.6.4/python-3.6.4.exe)，64位选择 [Windows x86-64 executable installer](https://www.python.org/ftp/python/3.6.4/python-3.6.4-amd64.exe)），目前最新版本为3.6.4\n2. 双击安装程序安装python，其安装过程与其它 Windows 平台的软件的安装过程无异，请务必确认勾选了`Add Python 3.5 to PATH` 选项\n\n\n\n\n要想验证安装是否成功，你可以通过点击开始并点击 `运行` 。在对话中输入 `cmd` 并按下回车键。然后，输入 `python` 以确保其没有任何错误。如果输出与Mac一样，说明Python运行正常\n\n\n\n**补充说明**\n\n* 如未勾选相关选项，你可以点击 `Add Python to environment variables` 。它和安装程序第一屏的 `Add Python 3.5 to PATH`能起到相同效果。如果这个也忘记勾选也不要紧，只需要参考下面步骤手动添加环境变量即可\n* 若要想改变安装位置，勾选 `Customize installation` 选项，点击 `Next` 后在安装位置中输入 `C:\\python36`\n\n\n\n**手动添加环境变量**\n\n对于 Windos 7 与 8：\n\n1. 在桌面右击计算机并选择 `属性` 或点击 `开始` 并选择 `控制面板` → `系统与安全` → `系统` 。点击左侧的 `高级系统设置` 并选择 `高级` 标签。点击底部 `系统变量` 下的 `环境变量` ，找到 `PATH` 属性，将其选中并点击 `编辑` \n\n2. 在最后一行并添加Python安装的路径，比如`;C:\\Python36` \n\n3. 点击 `确定` 以完成操作。你不需要进行重启，不过你可能需要关闭并重启命令提示符\n\n   ​\n\n# 在Linux系统中安装\n\n如果你使用的是Linux，很可能已经安装了Python。要确认这一点，可打开命令行窗口并输入python验证。对于 GNU/Linux 用户，你可以使用发行版的包管理器来安装 Python 3，例如在 Debian 与 Ubuntu 平台下，你可以输入命令：`sudo apt-get update && sudo apt-get install python3` \n\n要想验证安装是否成功，你可以通过打开 `Terminal` 应用或通过按下 `Alt + F2` 组合键并输入 `gnome-terminal` 来启动终端程序。如果这不起作用，请查阅你所使用的的 GNU/Linux 发行版的文档。现在，运行 `python3` 命令来确保其没有任何错误。如果输出与Mac一样，说明Python运行正常","source":"_posts/Python入门02 — Python安装及开发环境配置.md","raw":"---\ntitle: Python入门02 — Python安装及开发环境配置\ndate: 2018-01-10\nupdated: 2018-01-10\ntags: [Python,Mac,Windows,Linux]\ncategories: [Python]\n---\n\nPython 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。这篇文章主要介绍Python在Mac OS X、Windows和Linux系统的安装，为以后python的学习做准备。\n\n<!-- more -->\n\n# 在Mac OS X 系统中安装\n\nMac OS X自带并安装了一个Python版本，但该版本没有IDLE编辑器，通常也不是最新版本，需要安装最新版本\n\n- 对于 Mac OS X 用户，你可以使用 [Homebrew](http://brew.sh/) 并通过命令 `brew install python3` 进行安装，如果你还没有安装Homebrew，可以参考[Mac OS X 包管理工具 Homebrew 安装与使用](http://geekspeng.cn/2018/01/09/Mac%20OS%20X%20%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/)\n- 也可以下载一个安装程序并运行它\n\n要想验证安装是否成功，你可以通过按键 `[Command + Space]`（以启动 Spotlight 搜索），输入 `Terminal` 并按下 `[enter]`键来启动终端程序。现在，试着运行 `python3` 来确保其没有任何错误\n\n```bash\nxuepengdeMacBook-Pro:~ geekspeng$ python3\nPython 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n```\n\n\n\n# 在Windows系统中安装\n\n1. 访问Python下载页面[www.python.org/download](http://www.python.org/download)并下载最新的版本python（32位选择[Windows x86 executable installer](https://www.python.org/ftp/python/3.6.4/python-3.6.4.exe)，64位选择 [Windows x86-64 executable installer](https://www.python.org/ftp/python/3.6.4/python-3.6.4-amd64.exe)），目前最新版本为3.6.4\n2. 双击安装程序安装python，其安装过程与其它 Windows 平台的软件的安装过程无异，请务必确认勾选了`Add Python 3.5 to PATH` 选项\n\n\n\n\n要想验证安装是否成功，你可以通过点击开始并点击 `运行` 。在对话中输入 `cmd` 并按下回车键。然后，输入 `python` 以确保其没有任何错误。如果输出与Mac一样，说明Python运行正常\n\n\n\n**补充说明**\n\n* 如未勾选相关选项，你可以点击 `Add Python to environment variables` 。它和安装程序第一屏的 `Add Python 3.5 to PATH`能起到相同效果。如果这个也忘记勾选也不要紧，只需要参考下面步骤手动添加环境变量即可\n* 若要想改变安装位置，勾选 `Customize installation` 选项，点击 `Next` 后在安装位置中输入 `C:\\python36`\n\n\n\n**手动添加环境变量**\n\n对于 Windos 7 与 8：\n\n1. 在桌面右击计算机并选择 `属性` 或点击 `开始` 并选择 `控制面板` → `系统与安全` → `系统` 。点击左侧的 `高级系统设置` 并选择 `高级` 标签。点击底部 `系统变量` 下的 `环境变量` ，找到 `PATH` 属性，将其选中并点击 `编辑` \n\n2. 在最后一行并添加Python安装的路径，比如`;C:\\Python36` \n\n3. 点击 `确定` 以完成操作。你不需要进行重启，不过你可能需要关闭并重启命令提示符\n\n   ​\n\n# 在Linux系统中安装\n\n如果你使用的是Linux，很可能已经安装了Python。要确认这一点，可打开命令行窗口并输入python验证。对于 GNU/Linux 用户，你可以使用发行版的包管理器来安装 Python 3，例如在 Debian 与 Ubuntu 平台下，你可以输入命令：`sudo apt-get update && sudo apt-get install python3` \n\n要想验证安装是否成功，你可以通过打开 `Terminal` 应用或通过按下 `Alt + F2` 组合键并输入 `gnome-terminal` 来启动终端程序。如果这不起作用，请查阅你所使用的的 GNU/Linux 发行版的文档。现在，运行 `python3` 命令来确保其没有任何错误。如果输出与Mac一样，说明Python运行正常","slug":"Python入门02 — Python安装及开发环境配置","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yara0008uw0m52cklrvg","content":"<p>Python 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。这篇文章主要介绍Python在Mac OS X、Windows和Linux系统的安装，为以后python的学习做准备。</p>\n<a id=\"more\"></a>\n<h1 id=\"在Mac-OS-X-系统中安装\"><a href=\"#在Mac-OS-X-系统中安装\" class=\"headerlink\" title=\"在Mac OS X 系统中安装\"></a>在Mac OS X 系统中安装</h1><p>Mac OS X自带并安装了一个Python版本，但该版本没有IDLE编辑器，通常也不是最新版本，需要安装最新版本</p>\n<ul>\n<li>对于 Mac OS X 用户，你可以使用 <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a> 并通过命令 <code>brew install python3</code> 进行安装，如果你还没有安装Homebrew，可以参考<a href=\"http://geekspeng.cn/2018/01/09/Mac%20OS%20X%20%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/\">Mac OS X 包管理工具 Homebrew 安装与使用</a></li>\n<li>也可以下载一个安装程序并运行它</li>\n</ul>\n<p>要想验证安装是否成功，你可以通过按键 <code>[Command + Space]</code>（以启动 Spotlight 搜索），输入 <code>Terminal</code> 并按下 <code>[enter]</code>键来启动终端程序。现在，试着运行 <code>python3</code> 来确保其没有任何错误</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xuepengdeMacBook-Pro:~ geekspeng$ python3</span><br><span class=\"line\">Python 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)</span><br><span class=\"line\">[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin</span><br><span class=\"line\">Type <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> or <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"在Windows系统中安装\"><a href=\"#在Windows系统中安装\" class=\"headerlink\" title=\"在Windows系统中安装\"></a>在Windows系统中安装</h1><ol>\n<li>访问Python下载页面<a href=\"http://www.python.org/download\" target=\"_blank\" rel=\"noopener\">www.python.org/download</a>并下载最新的版本python（32位选择<a href=\"https://www.python.org/ftp/python/3.6.4/python-3.6.4.exe\" target=\"_blank\" rel=\"noopener\">Windows x86 executable installer</a>，64位选择 <a href=\"https://www.python.org/ftp/python/3.6.4/python-3.6.4-amd64.exe\" target=\"_blank\" rel=\"noopener\">Windows x86-64 executable installer</a>），目前最新版本为3.6.4</li>\n<li>双击安装程序安装python，其安装过程与其它 Windows 平台的软件的安装过程无异，请务必确认勾选了<code>Add Python 3.5 to PATH</code> 选项</li>\n</ol>\n<p>要想验证安装是否成功，你可以通过点击开始并点击 <code>运行</code> 。在对话中输入 <code>cmd</code> 并按下回车键。然后，输入 <code>python</code> 以确保其没有任何错误。如果输出与Mac一样，说明Python运行正常</p>\n<p><strong>补充说明</strong></p>\n<ul>\n<li>如未勾选相关选项，你可以点击 <code>Add Python to environment variables</code> 。它和安装程序第一屏的 <code>Add Python 3.5 to PATH</code>能起到相同效果。如果这个也忘记勾选也不要紧，只需要参考下面步骤手动添加环境变量即可</li>\n<li>若要想改变安装位置，勾选 <code>Customize installation</code> 选项，点击 <code>Next</code> 后在安装位置中输入 <code>C:\\python36</code></li>\n</ul>\n<p><strong>手动添加环境变量</strong></p>\n<p>对于 Windos 7 与 8：</p>\n<ol>\n<li><p>在桌面右击计算机并选择 <code>属性</code> 或点击 <code>开始</code> 并选择 <code>控制面板</code> → <code>系统与安全</code> → <code>系统</code> 。点击左侧的 <code>高级系统设置</code> 并选择 <code>高级</code> 标签。点击底部 <code>系统变量</code> 下的 <code>环境变量</code> ，找到 <code>PATH</code> 属性，将其选中并点击 <code>编辑</code> </p>\n</li>\n<li><p>在最后一行并添加Python安装的路径，比如<code>;C:\\Python36</code> </p>\n</li>\n<li><p>点击 <code>确定</code> 以完成操作。你不需要进行重启，不过你可能需要关闭并重启命令提示符</p>\n<p>​</p>\n</li>\n</ol>\n<h1 id=\"在Linux系统中安装\"><a href=\"#在Linux系统中安装\" class=\"headerlink\" title=\"在Linux系统中安装\"></a>在Linux系统中安装</h1><p>如果你使用的是Linux，很可能已经安装了Python。要确认这一点，可打开命令行窗口并输入python验证。对于 GNU/Linux 用户，你可以使用发行版的包管理器来安装 Python 3，例如在 Debian 与 Ubuntu 平台下，你可以输入命令：<code>sudo apt-get update &amp;&amp; sudo apt-get install python3</code> </p>\n<p>要想验证安装是否成功，你可以通过打开 <code>Terminal</code> 应用或通过按下 <code>Alt + F2</code> 组合键并输入 <code>gnome-terminal</code> 来启动终端程序。如果这不起作用，请查阅你所使用的的 GNU/Linux 发行版的文档。现在，运行 <code>python3</code> 命令来确保其没有任何错误。如果输出与Mac一样，说明Python运行正常</p>\n","site":{"data":{}},"excerpt":"<p>Python 是一款易于学习且功能强大的编程语言。 它具有高效率的数据结构，能够简单又有效地实现面向对象编程。Python 简洁的语法与动态输入之特性，加之其解释性语言的本质，使得它成为一种在多种领域与绝大多数平台都能进行脚本编写与应用快速开发工作的理想语言。这篇文章主要介绍Python在Mac OS X、Windows和Linux系统的安装，为以后python的学习做准备。</p>","more":"<h1 id=\"在Mac-OS-X-系统中安装\"><a href=\"#在Mac-OS-X-系统中安装\" class=\"headerlink\" title=\"在Mac OS X 系统中安装\"></a>在Mac OS X 系统中安装</h1><p>Mac OS X自带并安装了一个Python版本，但该版本没有IDLE编辑器，通常也不是最新版本，需要安装最新版本</p>\n<ul>\n<li>对于 Mac OS X 用户，你可以使用 <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"noopener\">Homebrew</a> 并通过命令 <code>brew install python3</code> 进行安装，如果你还没有安装Homebrew，可以参考<a href=\"http://geekspeng.cn/2018/01/09/Mac%20OS%20X%20%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/\">Mac OS X 包管理工具 Homebrew 安装与使用</a></li>\n<li>也可以下载一个安装程序并运行它</li>\n</ul>\n<p>要想验证安装是否成功，你可以通过按键 <code>[Command + Space]</code>（以启动 Spotlight 搜索），输入 <code>Terminal</code> 并按下 <code>[enter]</code>键来启动终端程序。现在，试着运行 <code>python3</code> 来确保其没有任何错误</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xuepengdeMacBook-Pro:~ geekspeng$ python3</span><br><span class=\"line\">Python 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)</span><br><span class=\"line\">[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin</span><br><span class=\"line\">Type <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> or <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"在Windows系统中安装\"><a href=\"#在Windows系统中安装\" class=\"headerlink\" title=\"在Windows系统中安装\"></a>在Windows系统中安装</h1><ol>\n<li>访问Python下载页面<a href=\"http://www.python.org/download\" target=\"_blank\" rel=\"noopener\">www.python.org/download</a>并下载最新的版本python（32位选择<a href=\"https://www.python.org/ftp/python/3.6.4/python-3.6.4.exe\" target=\"_blank\" rel=\"noopener\">Windows x86 executable installer</a>，64位选择 <a href=\"https://www.python.org/ftp/python/3.6.4/python-3.6.4-amd64.exe\" target=\"_blank\" rel=\"noopener\">Windows x86-64 executable installer</a>），目前最新版本为3.6.4</li>\n<li>双击安装程序安装python，其安装过程与其它 Windows 平台的软件的安装过程无异，请务必确认勾选了<code>Add Python 3.5 to PATH</code> 选项</li>\n</ol>\n<p>要想验证安装是否成功，你可以通过点击开始并点击 <code>运行</code> 。在对话中输入 <code>cmd</code> 并按下回车键。然后，输入 <code>python</code> 以确保其没有任何错误。如果输出与Mac一样，说明Python运行正常</p>\n<p><strong>补充说明</strong></p>\n<ul>\n<li>如未勾选相关选项，你可以点击 <code>Add Python to environment variables</code> 。它和安装程序第一屏的 <code>Add Python 3.5 to PATH</code>能起到相同效果。如果这个也忘记勾选也不要紧，只需要参考下面步骤手动添加环境变量即可</li>\n<li>若要想改变安装位置，勾选 <code>Customize installation</code> 选项，点击 <code>Next</code> 后在安装位置中输入 <code>C:\\python36</code></li>\n</ul>\n<p><strong>手动添加环境变量</strong></p>\n<p>对于 Windos 7 与 8：</p>\n<ol>\n<li><p>在桌面右击计算机并选择 <code>属性</code> 或点击 <code>开始</code> 并选择 <code>控制面板</code> → <code>系统与安全</code> → <code>系统</code> 。点击左侧的 <code>高级系统设置</code> 并选择 <code>高级</code> 标签。点击底部 <code>系统变量</code> 下的 <code>环境变量</code> ，找到 <code>PATH</code> 属性，将其选中并点击 <code>编辑</code> </p>\n</li>\n<li><p>在最后一行并添加Python安装的路径，比如<code>;C:\\Python36</code> </p>\n</li>\n<li><p>点击 <code>确定</code> 以完成操作。你不需要进行重启，不过你可能需要关闭并重启命令提示符</p>\n<p>​</p>\n</li>\n</ol>\n<h1 id=\"在Linux系统中安装\"><a href=\"#在Linux系统中安装\" class=\"headerlink\" title=\"在Linux系统中安装\"></a>在Linux系统中安装</h1><p>如果你使用的是Linux，很可能已经安装了Python。要确认这一点，可打开命令行窗口并输入python验证。对于 GNU/Linux 用户，你可以使用发行版的包管理器来安装 Python 3，例如在 Debian 与 Ubuntu 平台下，你可以输入命令：<code>sudo apt-get update &amp;&amp; sudo apt-get install python3</code> </p>\n<p>要想验证安装是否成功，你可以通过打开 <code>Terminal</code> 应用或通过按下 <code>Alt + F2</code> 组合键并输入 <code>gnome-terminal</code> 来启动终端程序。如果这不起作用，请查阅你所使用的的 GNU/Linux 发行版的文档。现在，运行 <code>python3</code> 命令来确保其没有任何错误。如果输出与Mac一样，说明Python运行正常</p>"},{"title":"Hexo使用指南","date":"2017-08-31T16:00:00.000Z","updated":"2017-08-31T16:00:00.000Z","_content":"\n## 安装 Hexo\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n## 建站\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n<!-- more --> \n\n新建完成后，指定文件夹的目录如下：\n\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n**scaffolds**\n模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n\nHexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。\n\n**source**\n资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。\n\n**themes**\n主题 文件夹。Hexo 会根据主题来生成静态页面。\n\n**public**\nhexo generate 生成的静态网页\n\n## 常用命令\n\n三部曲\n\n``` bash\n$ hexo clean\n$ hexo generate\n$ hexo deploy\n```\n\n### init\n\n``` bash\n$ hexo init [folder]\n```\n新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。\n\n### new\n\n```\n$ hexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n### generate\n\n```\n$ hexo generate\n```\n生成静态文件。\n\n```\n选项\t描述\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n```\n\n该命令可以简写为\n\n``` bash\n$ hexo g\n```\n### publish\n\n```\n$ hexo publish [layout] <filename>\n```\n发表草稿。\n\n### server\n\n```\n$ hexo server\n```\n启动服务器。默认情况下，访问网址为： http://localhost:4000/。\n\n```\n选项\t描述\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n```\n### deploy\n\n```\n$ hexo deploy\n```\n部署网站。\n\n```\n参数\t描述\n-g, --generate\t部署之前预先生成静态文件\n```\n该命令可以简写为：\n\n``` bash\n$ hexo d\n```\n### clean\n\n``` bash\n$ hexo clean\n```\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n### render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n渲染文件。\n\n```\n参数\t描述\n-o, --output\t设置输出路径\n```\n### migrate\n\n``` bash\n$ hexo migrate <type>\n```\n从其他博客系统 迁移内容。\n\n### list\n\n```\n$ hexo list <type>\n```\n列出网站资料。\n\n### version\n\n```\n$ hexo version\n```\n显示 Hexo 版本。\n\n## 主题\n创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题，当然也可以直接下载主题放到themes 文件夹内。一个主题可能会有以下的结构：\n\n\n```\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n打开 站点配置文件， 找到 theme 字段，并将其值更改为 next\n\n\n```\ntheme: next\n```\n\n\n\n\n","source":"_posts/Hexo使用指南.md","raw":"---\ntitle: Hexo使用指南\ndate: 2017-09-01\nupdated: 2017-09-01\ntags: [hexo]\ncategories: [hexo]\n---\n\n## 安装 Hexo\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n## 建站\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n<!-- more --> \n\n新建完成后，指定文件夹的目录如下：\n\n```\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n**scaffolds**\n模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n\nHexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。\n\n**source**\n资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。\n\n**themes**\n主题 文件夹。Hexo 会根据主题来生成静态页面。\n\n**public**\nhexo generate 生成的静态网页\n\n## 常用命令\n\n三部曲\n\n``` bash\n$ hexo clean\n$ hexo generate\n$ hexo deploy\n```\n\n### init\n\n``` bash\n$ hexo init [folder]\n```\n新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。\n\n### new\n\n```\n$ hexo new [layout] <title>\n```\n新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n### generate\n\n```\n$ hexo generate\n```\n生成静态文件。\n\n```\n选项\t描述\n-d, --deploy\t文件生成后立即部署网站\n-w, --watch\t监视文件变动\n```\n\n该命令可以简写为\n\n``` bash\n$ hexo g\n```\n### publish\n\n```\n$ hexo publish [layout] <filename>\n```\n发表草稿。\n\n### server\n\n```\n$ hexo server\n```\n启动服务器。默认情况下，访问网址为： http://localhost:4000/。\n\n```\n选项\t描述\n-p, --port\t重设端口\n-s, --static\t只使用静态文件\n-l, --log\t启动日记记录，使用覆盖记录格式\n```\n### deploy\n\n```\n$ hexo deploy\n```\n部署网站。\n\n```\n参数\t描述\n-g, --generate\t部署之前预先生成静态文件\n```\n该命令可以简写为：\n\n``` bash\n$ hexo d\n```\n### clean\n\n``` bash\n$ hexo clean\n```\n清除缓存文件 (db.json) 和已生成的静态文件 (public)。\n\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n### render\n\n``` bash\n$ hexo render <file1> [file2] ...\n```\n渲染文件。\n\n```\n参数\t描述\n-o, --output\t设置输出路径\n```\n### migrate\n\n``` bash\n$ hexo migrate <type>\n```\n从其他博客系统 迁移内容。\n\n### list\n\n```\n$ hexo list <type>\n```\n列出网站资料。\n\n### version\n\n```\n$ hexo version\n```\n显示 Hexo 版本。\n\n## 主题\n创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题，当然也可以直接下载主题放到themes 文件夹内。一个主题可能会有以下的结构：\n\n\n```\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n打开 站点配置文件， 找到 theme 字段，并将其值更改为 next\n\n\n```\ntheme: next\n```\n\n\n\n\n","slug":"Hexo使用指南","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yarc0009uw0mofsxah1z","content":"<h2 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<p><strong>scaffolds</strong><br>模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<p>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>\n<p><strong>source</strong><br>资源文件夹是存放用户资源的地方。除 <em>posts 文件夹之外，开头命名为 </em> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p>\n<p><strong>themes</strong><br>主题 文件夹。Hexo 会根据主题来生成静态页面。</p>\n<p><strong>public</strong><br>hexo generate 生成的静态网页</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>三部曲</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<h3 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<h3 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>生成静态文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选项\t描述</span><br><span class=\"line\">-d, --deploy\t文件生成后立即部署网站</span><br><span class=\"line\">-w, --watch\t监视文件变动</span><br></pre></td></tr></table></figure>\n<p>该命令可以简写为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure>\n<h3 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>发表草稿。</p>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务器。默认情况下，访问网址为： <a href=\"http://localhost:4000/。\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/。</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选项\t描述</span><br><span class=\"line\">-p, --port\t重设端口</span><br><span class=\"line\">-s, --static\t只使用静态文件</span><br><span class=\"line\">-l, --log\t启动日记记录，使用覆盖记录格式</span><br></pre></td></tr></table></figure>\n<h3 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>部署网站。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t描述</span><br><span class=\"line\">-g, --generate\t部署之前预先生成静态文件</span><br></pre></td></tr></table></figure>\n<p>该命令可以简写为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>渲染文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t描述</span><br><span class=\"line\">-o, --output\t设置输出路径</span><br></pre></td></tr></table></figure>\n<h3 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>从其他博客系统 迁移内容。</p>\n<h3 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>列出网站资料。</p>\n<h3 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>显示 Hexo 版本。</p>\n<h2 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h2><p>创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题，当然也可以直接下载主题放到themes 文件夹内。一个主题可能会有以下的结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<p>打开 站点配置文件， 找到 theme 字段，并将其值更改为 next</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install</span><br></pre></td></tr></table></figure>","more":"<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<p><strong>scaffolds</strong><br>模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<p>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>\n<p><strong>source</strong><br>资源文件夹是存放用户资源的地方。除 <em>posts 文件夹之外，开头命名为 </em> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p>\n<p><strong>themes</strong><br>主题 文件夹。Hexo 会根据主题来生成静态页面。</p>\n<p><strong>public</strong><br>hexo generate 生成的静态网页</p>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><p>三部曲</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br><span class=\"line\">$ hexo generate</span><br><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<h3 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init [folder]</span><br></pre></td></tr></table></figure>\n<p>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p>\n<h3 id=\"new\"><a href=\"#new\" class=\"headerlink\" title=\"new\"></a>new</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure>\n<p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<h3 id=\"generate\"><a href=\"#generate\" class=\"headerlink\" title=\"generate\"></a>generate</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>生成静态文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选项\t描述</span><br><span class=\"line\">-d, --deploy\t文件生成后立即部署网站</span><br><span class=\"line\">-w, --watch\t监视文件变动</span><br></pre></td></tr></table></figure>\n<p>该命令可以简写为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g</span><br></pre></td></tr></table></figure>\n<h3 id=\"publish\"><a href=\"#publish\" class=\"headerlink\" title=\"publish\"></a>publish</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure>\n<p>发表草稿。</p>\n<h3 id=\"server\"><a href=\"#server\" class=\"headerlink\" title=\"server\"></a>server</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>启动服务器。默认情况下，访问网址为： <a href=\"http://localhost:4000/。\" target=\"_blank\" rel=\"noopener\">http://localhost:4000/。</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选项\t描述</span><br><span class=\"line\">-p, --port\t重设端口</span><br><span class=\"line\">-s, --static\t只使用静态文件</span><br><span class=\"line\">-l, --log\t启动日记记录，使用覆盖记录格式</span><br></pre></td></tr></table></figure>\n<h3 id=\"deploy\"><a href=\"#deploy\" class=\"headerlink\" title=\"deploy\"></a>deploy</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>部署网站。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t描述</span><br><span class=\"line\">-g, --generate\t部署之前预先生成静态文件</span><br></pre></td></tr></table></figure>\n<p>该命令可以简写为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo d</span><br></pre></td></tr></table></figure>\n<h3 id=\"clean\"><a href=\"#clean\" class=\"headerlink\" title=\"clean\"></a>clean</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure>\n<p>渲染文件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数\t描述</span><br><span class=\"line\">-o, --output\t设置输出路径</span><br></pre></td></tr></table></figure>\n<h3 id=\"migrate\"><a href=\"#migrate\" class=\"headerlink\" title=\"migrate\"></a>migrate</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo migrate &lt;<span class=\"built_in\">type</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>从其他博客系统 迁移内容。</p>\n<h3 id=\"list\"><a href=\"#list\" class=\"headerlink\" title=\"list\"></a>list</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure>\n<p>列出网站资料。</p>\n<h3 id=\"version\"><a href=\"#version\" class=\"headerlink\" title=\"version\"></a>version</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo version</span><br></pre></td></tr></table></figure>\n<p>显示 Hexo 版本。</p>\n<h2 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h2><p>创建 Hexo 主题非常容易，您只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改 _config.yml 内的 theme 设定，即可切换主题，当然也可以直接下载主题放到themes 文件夹内。一个主题可能会有以下的结构：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n<p>打开 站点配置文件， 找到 theme 字段，并将其值更改为 next</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>"},{"title":"Python入门03 — Hello World","date":"2018-01-10T16:00:00.000Z","updated":"2018-01-10T16:00:00.000Z","_content":"\n现在让我们开始学习如何运行一个传统的“Hello World”程序，这基本上是学习任何编程语言的需要做的第一步。下面将会告诉你如何编写、保存与运行 Python 程序。\n\n通过 Python 来运行的你的程序有两种方法\n\n- 使用交互式解释器提示符\n- 直接运行一个源代码文件\n\n<!-- more -->\n\n#  使用解释器提示符\n\n在你的操作系统中打开终端（Terminal）程序，然后通过输入 `python3` 并按下 `[enter]` 键来打开 Python 提示符（Python Prompt）。\n\n当你启动 Python 后，你会看见在你能开始输入内容的地方出现了 `>>>` 。这个被称作 *Python 解释器提示符（Python Interpreter Prompt）* 。\n\n在 Python 解释器提示符，输入`print(\"Hello World\")`，在输入完成后按下 `[enter]` 键。你将会看到屏幕上打印出 `Hello World` 字样。\n\n```python\nxuepengdeMacBook-Pro:~ geekspeng$ python3\nPython 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print(\"Hello World\")\nHello World\n>>>\n```\n\n\n\n**如何退出解释器提示符**\n\n如果你正在使用一款 GNU/Linux 或 OS X 上的 Shell 程序，你可以通过按下 `[ctrl + d]` 组合键或是输入 `exit()` （注意：要记住要包含括号 `()`）并敲下 `[enter]` 来退出解释器提示符。\n\n如果你使用的是 Windows 命令提示符，可以按下 `[ctrl + z]`组合键并敲击 `[enter]` 键来退出。\n\n\n\n# 直接运行一个源代码文件\n\n## 选择一款编辑器\n\n当我们希望运行某些程序时，总不能每次都在解释器提示符中输入我们的程序。因此我们需要将它们保存为文件，从而我们便可以多次地运行这些程序。要想创建我们的 Python 源代码文件，我们需要一款能够让你输入并保存代码的编辑器软件。\n\n\n\n**对编辑器的两项基本要求**\n\n- 语法高亮\n\n  通过标以不同颜色来帮助你区分 Python 程序中的不同部分，从而能够让你更好 *看清* 你的程序，并使它的运行模式更加形象化。\n\n- 文本自动缩进\n\n  Python的一个与众不同之处是，使用缩进来 *标识代码块*。要在Python中标识代码块，必须以同样程度缩进代码块的每一行。在其他大多数编程语言中，缩进只用于让代码更美观；但在Python中，必须使用缩进来指出语句所属的代码块。所以编辑器如果支持文本自动缩进的话，能减少大量我们花在手动缩进上的时间。\n\n\n\n**编辑器推荐**\n\n- 初学者\n\n  推荐你使用 [PyCharm 教育版](https://www.jetbrains.com/pycharm-edu/) 软件，它在 Windows、Mac OS X、GNU/Linux 上都可以运行，从而你只需要专注于学习 Python 而不是编辑器。\n\n- 熟悉[Vim](http://www.vim.org/) 或 [Emacs](http://www.gnu.org/software/emacs/)的程序员\n\n  那你一定在用 [Vim](http://www.vim.org/) 或 [Emacs](http://www.gnu.org/software/emacs/) 了。无需多言，它们都是最强大的编辑器之一，用它们来编写你的 Python 程序自是受益颇多。\n\n\n\n**1. PyCharm**\n\n[PyCharm 教育版](https://www.jetbrains.com/pycharm-edu/)是一款能够对你编写 Python 程序的工作有所帮助的免费编辑器。\n\n当你打开 PyCharm 时，你会看见如下界面，点击 `Create New Project` ：\n\n![](http://p15d1hccg.bkt.clouddn.com/153731.jpg)\n\n\n\n选择 `Pure Python` ：\n\n![PyCharm 新项目](http://p15d1hccg.bkt.clouddn.com/153923.jpg)\n\n\n\n将你的项目路径位置中的 `untitled` 更改为 `helloworld` ，你所看到的界面细节应该类似于下方这番：\n\n![](http://p15d1hccg.bkt.clouddn.com/154212.jpg)\n\n\n\n点击 `Create` 按钮。\n\n对侧边栏中的 `helloworld` 右击选中，并选择 `New` -> `Python File` ：\n\n![](http://p15d1hccg.bkt.clouddn.com/154351.jpg)\n\n\n\n你会被要求输入名字，现在输入 `hello` ：\n\n![](http://p15d1hccg.bkt.clouddn.com/154454.jpg)\n\n\n\n现在你便可以看见一个新的文件已为你开启：\n\n![](http://p15d1hccg.bkt.clouddn.com/155020.jpg)\n\n\n\n删除那些已存在的内容，现在由你自己输入以下代码：\n\n```python\nprint(\"hello world\")\n```\n\n\n\n现在右击你所输入的内容（无需选中文本），然后点击 `Run 'hello'` 。\n\n![](http://p15d1hccg.bkt.clouddn.com/154836.jpg)\n\n\n\n此刻你将会看到你的程序所输出的内容（它所打印出来的内容）：\n\n![](http://p15d1hccg.bkt.clouddn.com/154943.jpg)\n\n虽然只是刚开始的几个步骤，但从今以后，每当我们要求你创建一个新的文件时，记住只需在 `helloworld` 上右击并选择 -> `New` -> `Python File` 并继续如上所述步骤一般输入内容并运行即可。\n\n\n\n**2. Vim**\n\n1. 安装 Vim\n   - Mac OS X 应该通过 [HomeBrew](http://brew.sh/) 来安装 `macvim` 包。\n   - Windows 用户应该通过 [Vim 官方网站](http://www.vim.org/download.php) 下载“自安装可执行文件”。\n   - GNU/Linux 用户应该通过他们使用的发行版的软件仓库获取 Vim。例如 Debian 与 Ubuntu 用户可以安装 `vim` 包。\n2. 安装 [jedi-vim](https://github.com/davidhalter/jedi-vim) 插件为 Vim 增添自动完成功能。\n3. 安装与之相应的 `jedi` Python 包：`pip install -U jedi`\n\n\n\n**3. Emacs**\n\n1. 安装Emacs 24+\n   - Mac OS X 用户应该从 [http://emacsformacosx.com](http://emacsformacosx.com/) 获取 Emacs。\n   - Windows 用户应该从 <http://ftp.gnu.org/gnu/emacs/windows/> 获取 Emacs。\n   - GNU/Linux 用户应该从他们使用的发行版的软件仓库获取 Emacs。如 Debian 和 Ubuntu 用户可以安装 `emacs24` 包。\n2. 安装 [ELPY](https://github.com/jorgenschaefer/elpy/wiki)。\n\n\n\n## 使用终端运行源代码文件\n\n要想运行你的 Python 程序：\n\n1. 打开终端窗口\n2. 使用 `cd` 命令来**改**变**目**录到你保存文件的地方。\n3. 通过输入命令 `python3 hello.py` 来运行程序。程序的输出结果应如下方所示：\n\n```\n$ python3 hello.py\nhello world\n```","source":"_posts/Python入门03 — Hello World.md","raw":"---\ntitle: Python入门03 — Hello World\ndate: 2018-01-11\nupdated: 2018-01-11\ntags: [Python,Mac,Windows,Linux]\ncategories: [Python]\n---\n\n现在让我们开始学习如何运行一个传统的“Hello World”程序，这基本上是学习任何编程语言的需要做的第一步。下面将会告诉你如何编写、保存与运行 Python 程序。\n\n通过 Python 来运行的你的程序有两种方法\n\n- 使用交互式解释器提示符\n- 直接运行一个源代码文件\n\n<!-- more -->\n\n#  使用解释器提示符\n\n在你的操作系统中打开终端（Terminal）程序，然后通过输入 `python3` 并按下 `[enter]` 键来打开 Python 提示符（Python Prompt）。\n\n当你启动 Python 后，你会看见在你能开始输入内容的地方出现了 `>>>` 。这个被称作 *Python 解释器提示符（Python Interpreter Prompt）* 。\n\n在 Python 解释器提示符，输入`print(\"Hello World\")`，在输入完成后按下 `[enter]` 键。你将会看到屏幕上打印出 `Hello World` 字样。\n\n```python\nxuepengdeMacBook-Pro:~ geekspeng$ python3\nPython 3.6.4 (v3.6.4:d48ecebad5, Dec 18 2017, 21:07:28)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> print(\"Hello World\")\nHello World\n>>>\n```\n\n\n\n**如何退出解释器提示符**\n\n如果你正在使用一款 GNU/Linux 或 OS X 上的 Shell 程序，你可以通过按下 `[ctrl + d]` 组合键或是输入 `exit()` （注意：要记住要包含括号 `()`）并敲下 `[enter]` 来退出解释器提示符。\n\n如果你使用的是 Windows 命令提示符，可以按下 `[ctrl + z]`组合键并敲击 `[enter]` 键来退出。\n\n\n\n# 直接运行一个源代码文件\n\n## 选择一款编辑器\n\n当我们希望运行某些程序时，总不能每次都在解释器提示符中输入我们的程序。因此我们需要将它们保存为文件，从而我们便可以多次地运行这些程序。要想创建我们的 Python 源代码文件，我们需要一款能够让你输入并保存代码的编辑器软件。\n\n\n\n**对编辑器的两项基本要求**\n\n- 语法高亮\n\n  通过标以不同颜色来帮助你区分 Python 程序中的不同部分，从而能够让你更好 *看清* 你的程序，并使它的运行模式更加形象化。\n\n- 文本自动缩进\n\n  Python的一个与众不同之处是，使用缩进来 *标识代码块*。要在Python中标识代码块，必须以同样程度缩进代码块的每一行。在其他大多数编程语言中，缩进只用于让代码更美观；但在Python中，必须使用缩进来指出语句所属的代码块。所以编辑器如果支持文本自动缩进的话，能减少大量我们花在手动缩进上的时间。\n\n\n\n**编辑器推荐**\n\n- 初学者\n\n  推荐你使用 [PyCharm 教育版](https://www.jetbrains.com/pycharm-edu/) 软件，它在 Windows、Mac OS X、GNU/Linux 上都可以运行，从而你只需要专注于学习 Python 而不是编辑器。\n\n- 熟悉[Vim](http://www.vim.org/) 或 [Emacs](http://www.gnu.org/software/emacs/)的程序员\n\n  那你一定在用 [Vim](http://www.vim.org/) 或 [Emacs](http://www.gnu.org/software/emacs/) 了。无需多言，它们都是最强大的编辑器之一，用它们来编写你的 Python 程序自是受益颇多。\n\n\n\n**1. PyCharm**\n\n[PyCharm 教育版](https://www.jetbrains.com/pycharm-edu/)是一款能够对你编写 Python 程序的工作有所帮助的免费编辑器。\n\n当你打开 PyCharm 时，你会看见如下界面，点击 `Create New Project` ：\n\n![](http://p15d1hccg.bkt.clouddn.com/153731.jpg)\n\n\n\n选择 `Pure Python` ：\n\n![PyCharm 新项目](http://p15d1hccg.bkt.clouddn.com/153923.jpg)\n\n\n\n将你的项目路径位置中的 `untitled` 更改为 `helloworld` ，你所看到的界面细节应该类似于下方这番：\n\n![](http://p15d1hccg.bkt.clouddn.com/154212.jpg)\n\n\n\n点击 `Create` 按钮。\n\n对侧边栏中的 `helloworld` 右击选中，并选择 `New` -> `Python File` ：\n\n![](http://p15d1hccg.bkt.clouddn.com/154351.jpg)\n\n\n\n你会被要求输入名字，现在输入 `hello` ：\n\n![](http://p15d1hccg.bkt.clouddn.com/154454.jpg)\n\n\n\n现在你便可以看见一个新的文件已为你开启：\n\n![](http://p15d1hccg.bkt.clouddn.com/155020.jpg)\n\n\n\n删除那些已存在的内容，现在由你自己输入以下代码：\n\n```python\nprint(\"hello world\")\n```\n\n\n\n现在右击你所输入的内容（无需选中文本），然后点击 `Run 'hello'` 。\n\n![](http://p15d1hccg.bkt.clouddn.com/154836.jpg)\n\n\n\n此刻你将会看到你的程序所输出的内容（它所打印出来的内容）：\n\n![](http://p15d1hccg.bkt.clouddn.com/154943.jpg)\n\n虽然只是刚开始的几个步骤，但从今以后，每当我们要求你创建一个新的文件时，记住只需在 `helloworld` 上右击并选择 -> `New` -> `Python File` 并继续如上所述步骤一般输入内容并运行即可。\n\n\n\n**2. Vim**\n\n1. 安装 Vim\n   - Mac OS X 应该通过 [HomeBrew](http://brew.sh/) 来安装 `macvim` 包。\n   - Windows 用户应该通过 [Vim 官方网站](http://www.vim.org/download.php) 下载“自安装可执行文件”。\n   - GNU/Linux 用户应该通过他们使用的发行版的软件仓库获取 Vim。例如 Debian 与 Ubuntu 用户可以安装 `vim` 包。\n2. 安装 [jedi-vim](https://github.com/davidhalter/jedi-vim) 插件为 Vim 增添自动完成功能。\n3. 安装与之相应的 `jedi` Python 包：`pip install -U jedi`\n\n\n\n**3. Emacs**\n\n1. 安装Emacs 24+\n   - Mac OS X 用户应该从 [http://emacsformacosx.com](http://emacsformacosx.com/) 获取 Emacs。\n   - Windows 用户应该从 <http://ftp.gnu.org/gnu/emacs/windows/> 获取 Emacs。\n   - GNU/Linux 用户应该从他们使用的发行版的软件仓库获取 Emacs。如 Debian 和 Ubuntu 用户可以安装 `emacs24` 包。\n2. 安装 [ELPY](https://github.com/jorgenschaefer/elpy/wiki)。\n\n\n\n## 使用终端运行源代码文件\n\n要想运行你的 Python 程序：\n\n1. 打开终端窗口\n2. 使用 `cd` 命令来**改**变**目**录到你保存文件的地方。\n3. 通过输入命令 `python3 hello.py` 来运行程序。程序的输出结果应如下方所示：\n\n```\n$ python3 hello.py\nhello world\n```","slug":"Python入门03 — Hello World","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yare000duw0mai9jdhmw","content":"<p>现在让我们开始学习如何运行一个传统的“Hello World”程序，这基本上是学习任何编程语言的需要做的第一步。下面将会告诉你如何编写、保存与运行 Python 程序。</p>\n<p>通过 Python 来运行的你的程序有两种方法</p>\n<ul>\n<li>使用交互式解释器提示符</li>\n<li>直接运行一个源代码文件</li>\n</ul>\n<a id=\"more\"></a>\n<h1 id=\"使用解释器提示符\"><a href=\"#使用解释器提示符\" class=\"headerlink\" title=\"使用解释器提示符\"></a>使用解释器提示符</h1><p>在你的操作系统中打开终端（Terminal）程序，然后通过输入 <code>python3</code> 并按下 <code>[enter]</code> 键来打开 Python 提示符（Python Prompt）。</p>\n<p>当你启动 Python 后，你会看见在你能开始输入内容的地方出现了 <code>&gt;&gt;&gt;</code> 。这个被称作 <em>Python 解释器提示符（Python Interpreter Prompt）</em> 。</p>\n<p>在 Python 解释器提示符，输入<code>print(&quot;Hello World&quot;)</code>，在输入完成后按下 <code>[enter]</code> 键。你将会看到屏幕上打印出 <code>Hello World</code> 字样。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xuepengdeMacBook-Pro:~ geekspeng$ python3</span><br><span class=\"line\">Python <span class=\"number\">3.6</span><span class=\"number\">.4</span> (v3<span class=\"number\">.6</span><span class=\"number\">.4</span>:d48ecebad5, Dec <span class=\"number\">18</span> <span class=\"number\">2017</span>, <span class=\"number\">21</span>:<span class=\"number\">07</span>:<span class=\"number\">28</span>)</span><br><span class=\"line\">[GCC <span class=\"number\">4.2</span><span class=\"number\">.1</span> (Apple Inc. build <span class=\"number\">5666</span>) (dot <span class=\"number\">3</span>)] on darwin</span><br><span class=\"line\">Type <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> <span class=\"keyword\">or</span> <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(<span class=\"string\">\"Hello World\"</span>)</span><br><span class=\"line\">Hello World</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>如何退出解释器提示符</strong></p>\n<p>如果你正在使用一款 GNU/Linux 或 OS X 上的 Shell 程序，你可以通过按下 <code>[ctrl + d]</code> 组合键或是输入 <code>exit()</code> （注意：要记住要包含括号 <code>()</code>）并敲下 <code>[enter]</code> 来退出解释器提示符。</p>\n<p>如果你使用的是 Windows 命令提示符，可以按下 <code>[ctrl + z]</code>组合键并敲击 <code>[enter]</code> 键来退出。</p>\n<h1 id=\"直接运行一个源代码文件\"><a href=\"#直接运行一个源代码文件\" class=\"headerlink\" title=\"直接运行一个源代码文件\"></a>直接运行一个源代码文件</h1><h2 id=\"选择一款编辑器\"><a href=\"#选择一款编辑器\" class=\"headerlink\" title=\"选择一款编辑器\"></a>选择一款编辑器</h2><p>当我们希望运行某些程序时，总不能每次都在解释器提示符中输入我们的程序。因此我们需要将它们保存为文件，从而我们便可以多次地运行这些程序。要想创建我们的 Python 源代码文件，我们需要一款能够让你输入并保存代码的编辑器软件。</p>\n<p><strong>对编辑器的两项基本要求</strong></p>\n<ul>\n<li><p>语法高亮</p>\n<p>通过标以不同颜色来帮助你区分 Python 程序中的不同部分，从而能够让你更好 <em>看清</em> 你的程序，并使它的运行模式更加形象化。</p>\n</li>\n<li><p>文本自动缩进</p>\n<p>Python的一个与众不同之处是，使用缩进来 <em>标识代码块</em>。要在Python中标识代码块，必须以同样程度缩进代码块的每一行。在其他大多数编程语言中，缩进只用于让代码更美观；但在Python中，必须使用缩进来指出语句所属的代码块。所以编辑器如果支持文本自动缩进的话，能减少大量我们花在手动缩进上的时间。</p>\n</li>\n</ul>\n<p><strong>编辑器推荐</strong></p>\n<ul>\n<li><p>初学者</p>\n<p>推荐你使用 <a href=\"https://www.jetbrains.com/pycharm-edu/\" target=\"_blank\" rel=\"noopener\">PyCharm 教育版</a> 软件，它在 Windows、Mac OS X、GNU/Linux 上都可以运行，从而你只需要专注于学习 Python 而不是编辑器。</p>\n</li>\n<li><p>熟悉<a href=\"http://www.vim.org/\" target=\"_blank\" rel=\"noopener\">Vim</a> 或 <a href=\"http://www.gnu.org/software/emacs/\" target=\"_blank\" rel=\"noopener\">Emacs</a>的程序员</p>\n<p>那你一定在用 <a href=\"http://www.vim.org/\" target=\"_blank\" rel=\"noopener\">Vim</a> 或 <a href=\"http://www.gnu.org/software/emacs/\" target=\"_blank\" rel=\"noopener\">Emacs</a> 了。无需多言，它们都是最强大的编辑器之一，用它们来编写你的 Python 程序自是受益颇多。</p>\n</li>\n</ul>\n<p><strong>1. PyCharm</strong></p>\n<p><a href=\"https://www.jetbrains.com/pycharm-edu/\" target=\"_blank\" rel=\"noopener\">PyCharm 教育版</a>是一款能够对你编写 Python 程序的工作有所帮助的免费编辑器。</p>\n<p>当你打开 PyCharm 时，你会看见如下界面，点击 <code>Create New Project</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/153731.jpg\" alt=\"\"></p>\n<p>选择 <code>Pure Python</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/153923.jpg\" alt=\"PyCharm 新项目\"></p>\n<p>将你的项目路径位置中的 <code>untitled</code> 更改为 <code>helloworld</code> ，你所看到的界面细节应该类似于下方这番：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154212.jpg\" alt=\"\"></p>\n<p>点击 <code>Create</code> 按钮。</p>\n<p>对侧边栏中的 <code>helloworld</code> 右击选中，并选择 <code>New</code> -&gt; <code>Python File</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154351.jpg\" alt=\"\"></p>\n<p>你会被要求输入名字，现在输入 <code>hello</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154454.jpg\" alt=\"\"></p>\n<p>现在你便可以看见一个新的文件已为你开启：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/155020.jpg\" alt=\"\"></p>\n<p>删除那些已存在的内容，现在由你自己输入以下代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"hello world\"</span>)</span><br></pre></td></tr></table></figure>\n<p>现在右击你所输入的内容（无需选中文本），然后点击 <code>Run &#39;hello&#39;</code> 。</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154836.jpg\" alt=\"\"></p>\n<p>此刻你将会看到你的程序所输出的内容（它所打印出来的内容）：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154943.jpg\" alt=\"\"></p>\n<p>虽然只是刚开始的几个步骤，但从今以后，每当我们要求你创建一个新的文件时，记住只需在 <code>helloworld</code> 上右击并选择 -&gt; <code>New</code> -&gt; <code>Python File</code> 并继续如上所述步骤一般输入内容并运行即可。</p>\n<p><strong>2. Vim</strong></p>\n<ol>\n<li>安装 Vim<ul>\n<li>Mac OS X 应该通过 <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"noopener\">HomeBrew</a> 来安装 <code>macvim</code> 包。</li>\n<li>Windows 用户应该通过 <a href=\"http://www.vim.org/download.php\" target=\"_blank\" rel=\"noopener\">Vim 官方网站</a> 下载“自安装可执行文件”。</li>\n<li>GNU/Linux 用户应该通过他们使用的发行版的软件仓库获取 Vim。例如 Debian 与 Ubuntu 用户可以安装 <code>vim</code> 包。</li>\n</ul>\n</li>\n<li>安装 <a href=\"https://github.com/davidhalter/jedi-vim\" target=\"_blank\" rel=\"noopener\">jedi-vim</a> 插件为 Vim 增添自动完成功能。</li>\n<li>安装与之相应的 <code>jedi</code> Python 包：<code>pip install -U jedi</code></li>\n</ol>\n<p><strong>3. Emacs</strong></p>\n<ol>\n<li>安装Emacs 24+<ul>\n<li>Mac OS X 用户应该从 <a href=\"http://emacsformacosx.com/\" target=\"_blank\" rel=\"noopener\">http://emacsformacosx.com</a> 获取 Emacs。</li>\n<li>Windows 用户应该从 <a href=\"http://ftp.gnu.org/gnu/emacs/windows/\" target=\"_blank\" rel=\"noopener\">http://ftp.gnu.org/gnu/emacs/windows/</a> 获取 Emacs。</li>\n<li>GNU/Linux 用户应该从他们使用的发行版的软件仓库获取 Emacs。如 Debian 和 Ubuntu 用户可以安装 <code>emacs24</code> 包。</li>\n</ul>\n</li>\n<li>安装 <a href=\"https://github.com/jorgenschaefer/elpy/wiki\" target=\"_blank\" rel=\"noopener\">ELPY</a>。</li>\n</ol>\n<h2 id=\"使用终端运行源代码文件\"><a href=\"#使用终端运行源代码文件\" class=\"headerlink\" title=\"使用终端运行源代码文件\"></a>使用终端运行源代码文件</h2><p>要想运行你的 Python 程序：</p>\n<ol>\n<li>打开终端窗口</li>\n<li>使用 <code>cd</code> 命令来<strong>改</strong>变<strong>目</strong>录到你保存文件的地方。</li>\n<li>通过输入命令 <code>python3 hello.py</code> 来运行程序。程序的输出结果应如下方所示：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python3 hello.py</span><br><span class=\"line\">hello world</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>现在让我们开始学习如何运行一个传统的“Hello World”程序，这基本上是学习任何编程语言的需要做的第一步。下面将会告诉你如何编写、保存与运行 Python 程序。</p>\n<p>通过 Python 来运行的你的程序有两种方法</p>\n<ul>\n<li>使用交互式解释器提示符</li>\n<li>直接运行一个源代码文件</li>\n</ul>","more":"<h1 id=\"使用解释器提示符\"><a href=\"#使用解释器提示符\" class=\"headerlink\" title=\"使用解释器提示符\"></a>使用解释器提示符</h1><p>在你的操作系统中打开终端（Terminal）程序，然后通过输入 <code>python3</code> 并按下 <code>[enter]</code> 键来打开 Python 提示符（Python Prompt）。</p>\n<p>当你启动 Python 后，你会看见在你能开始输入内容的地方出现了 <code>&gt;&gt;&gt;</code> 。这个被称作 <em>Python 解释器提示符（Python Interpreter Prompt）</em> 。</p>\n<p>在 Python 解释器提示符，输入<code>print(&quot;Hello World&quot;)</code>，在输入完成后按下 <code>[enter]</code> 键。你将会看到屏幕上打印出 <code>Hello World</code> 字样。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xuepengdeMacBook-Pro:~ geekspeng$ python3</span><br><span class=\"line\">Python <span class=\"number\">3.6</span><span class=\"number\">.4</span> (v3<span class=\"number\">.6</span><span class=\"number\">.4</span>:d48ecebad5, Dec <span class=\"number\">18</span> <span class=\"number\">2017</span>, <span class=\"number\">21</span>:<span class=\"number\">07</span>:<span class=\"number\">28</span>)</span><br><span class=\"line\">[GCC <span class=\"number\">4.2</span><span class=\"number\">.1</span> (Apple Inc. build <span class=\"number\">5666</span>) (dot <span class=\"number\">3</span>)] on darwin</span><br><span class=\"line\">Type <span class=\"string\">\"help\"</span>, <span class=\"string\">\"copyright\"</span>, <span class=\"string\">\"credits\"</span> <span class=\"keyword\">or</span> <span class=\"string\">\"license\"</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>print(<span class=\"string\">\"Hello World\"</span>)</span><br><span class=\"line\">Hello World</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>如何退出解释器提示符</strong></p>\n<p>如果你正在使用一款 GNU/Linux 或 OS X 上的 Shell 程序，你可以通过按下 <code>[ctrl + d]</code> 组合键或是输入 <code>exit()</code> （注意：要记住要包含括号 <code>()</code>）并敲下 <code>[enter]</code> 来退出解释器提示符。</p>\n<p>如果你使用的是 Windows 命令提示符，可以按下 <code>[ctrl + z]</code>组合键并敲击 <code>[enter]</code> 键来退出。</p>\n<h1 id=\"直接运行一个源代码文件\"><a href=\"#直接运行一个源代码文件\" class=\"headerlink\" title=\"直接运行一个源代码文件\"></a>直接运行一个源代码文件</h1><h2 id=\"选择一款编辑器\"><a href=\"#选择一款编辑器\" class=\"headerlink\" title=\"选择一款编辑器\"></a>选择一款编辑器</h2><p>当我们希望运行某些程序时，总不能每次都在解释器提示符中输入我们的程序。因此我们需要将它们保存为文件，从而我们便可以多次地运行这些程序。要想创建我们的 Python 源代码文件，我们需要一款能够让你输入并保存代码的编辑器软件。</p>\n<p><strong>对编辑器的两项基本要求</strong></p>\n<ul>\n<li><p>语法高亮</p>\n<p>通过标以不同颜色来帮助你区分 Python 程序中的不同部分，从而能够让你更好 <em>看清</em> 你的程序，并使它的运行模式更加形象化。</p>\n</li>\n<li><p>文本自动缩进</p>\n<p>Python的一个与众不同之处是，使用缩进来 <em>标识代码块</em>。要在Python中标识代码块，必须以同样程度缩进代码块的每一行。在其他大多数编程语言中，缩进只用于让代码更美观；但在Python中，必须使用缩进来指出语句所属的代码块。所以编辑器如果支持文本自动缩进的话，能减少大量我们花在手动缩进上的时间。</p>\n</li>\n</ul>\n<p><strong>编辑器推荐</strong></p>\n<ul>\n<li><p>初学者</p>\n<p>推荐你使用 <a href=\"https://www.jetbrains.com/pycharm-edu/\" target=\"_blank\" rel=\"noopener\">PyCharm 教育版</a> 软件，它在 Windows、Mac OS X、GNU/Linux 上都可以运行，从而你只需要专注于学习 Python 而不是编辑器。</p>\n</li>\n<li><p>熟悉<a href=\"http://www.vim.org/\" target=\"_blank\" rel=\"noopener\">Vim</a> 或 <a href=\"http://www.gnu.org/software/emacs/\" target=\"_blank\" rel=\"noopener\">Emacs</a>的程序员</p>\n<p>那你一定在用 <a href=\"http://www.vim.org/\" target=\"_blank\" rel=\"noopener\">Vim</a> 或 <a href=\"http://www.gnu.org/software/emacs/\" target=\"_blank\" rel=\"noopener\">Emacs</a> 了。无需多言，它们都是最强大的编辑器之一，用它们来编写你的 Python 程序自是受益颇多。</p>\n</li>\n</ul>\n<p><strong>1. PyCharm</strong></p>\n<p><a href=\"https://www.jetbrains.com/pycharm-edu/\" target=\"_blank\" rel=\"noopener\">PyCharm 教育版</a>是一款能够对你编写 Python 程序的工作有所帮助的免费编辑器。</p>\n<p>当你打开 PyCharm 时，你会看见如下界面，点击 <code>Create New Project</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/153731.jpg\" alt=\"\"></p>\n<p>选择 <code>Pure Python</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/153923.jpg\" alt=\"PyCharm 新项目\"></p>\n<p>将你的项目路径位置中的 <code>untitled</code> 更改为 <code>helloworld</code> ，你所看到的界面细节应该类似于下方这番：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154212.jpg\" alt=\"\"></p>\n<p>点击 <code>Create</code> 按钮。</p>\n<p>对侧边栏中的 <code>helloworld</code> 右击选中，并选择 <code>New</code> -&gt; <code>Python File</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154351.jpg\" alt=\"\"></p>\n<p>你会被要求输入名字，现在输入 <code>hello</code> ：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154454.jpg\" alt=\"\"></p>\n<p>现在你便可以看见一个新的文件已为你开启：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/155020.jpg\" alt=\"\"></p>\n<p>删除那些已存在的内容，现在由你自己输入以下代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">\"hello world\"</span>)</span><br></pre></td></tr></table></figure>\n<p>现在右击你所输入的内容（无需选中文本），然后点击 <code>Run &#39;hello&#39;</code> 。</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154836.jpg\" alt=\"\"></p>\n<p>此刻你将会看到你的程序所输出的内容（它所打印出来的内容）：</p>\n<p><img src=\"http://p15d1hccg.bkt.clouddn.com/154943.jpg\" alt=\"\"></p>\n<p>虽然只是刚开始的几个步骤，但从今以后，每当我们要求你创建一个新的文件时，记住只需在 <code>helloworld</code> 上右击并选择 -&gt; <code>New</code> -&gt; <code>Python File</code> 并继续如上所述步骤一般输入内容并运行即可。</p>\n<p><strong>2. Vim</strong></p>\n<ol>\n<li>安装 Vim<ul>\n<li>Mac OS X 应该通过 <a href=\"http://brew.sh/\" target=\"_blank\" rel=\"noopener\">HomeBrew</a> 来安装 <code>macvim</code> 包。</li>\n<li>Windows 用户应该通过 <a href=\"http://www.vim.org/download.php\" target=\"_blank\" rel=\"noopener\">Vim 官方网站</a> 下载“自安装可执行文件”。</li>\n<li>GNU/Linux 用户应该通过他们使用的发行版的软件仓库获取 Vim。例如 Debian 与 Ubuntu 用户可以安装 <code>vim</code> 包。</li>\n</ul>\n</li>\n<li>安装 <a href=\"https://github.com/davidhalter/jedi-vim\" target=\"_blank\" rel=\"noopener\">jedi-vim</a> 插件为 Vim 增添自动完成功能。</li>\n<li>安装与之相应的 <code>jedi</code> Python 包：<code>pip install -U jedi</code></li>\n</ol>\n<p><strong>3. Emacs</strong></p>\n<ol>\n<li>安装Emacs 24+<ul>\n<li>Mac OS X 用户应该从 <a href=\"http://emacsformacosx.com/\" target=\"_blank\" rel=\"noopener\">http://emacsformacosx.com</a> 获取 Emacs。</li>\n<li>Windows 用户应该从 <a href=\"http://ftp.gnu.org/gnu/emacs/windows/\" target=\"_blank\" rel=\"noopener\">http://ftp.gnu.org/gnu/emacs/windows/</a> 获取 Emacs。</li>\n<li>GNU/Linux 用户应该从他们使用的发行版的软件仓库获取 Emacs。如 Debian 和 Ubuntu 用户可以安装 <code>emacs24</code> 包。</li>\n</ul>\n</li>\n<li>安装 <a href=\"https://github.com/jorgenschaefer/elpy/wiki\" target=\"_blank\" rel=\"noopener\">ELPY</a>。</li>\n</ol>\n<h2 id=\"使用终端运行源代码文件\"><a href=\"#使用终端运行源代码文件\" class=\"headerlink\" title=\"使用终端运行源代码文件\"></a>使用终端运行源代码文件</h2><p>要想运行你的 Python 程序：</p>\n<ol>\n<li>打开终端窗口</li>\n<li>使用 <code>cd</code> 命令来<strong>改</strong>变<strong>目</strong>录到你保存文件的地方。</li>\n<li>通过输入命令 <code>python3 hello.py</code> 来运行程序。程序的输出结果应如下方所示：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python3 hello.py</span><br><span class=\"line\">hello world</span><br></pre></td></tr></table></figure>"},{"title":"hexo 下的分类和表签无法显示","date":"2017-08-31T16:00:00.000Z","updated":"2017-08-31T16:00:00.000Z","_content":"\n#### 在命令行中输入hexo new page tags\n\n```\n$ hexo new page tags\n```\n#### 这时会在在sources/tags里面有个index.md的文件，打开这个文件编辑\n\n```\n---\ntitle: tags\ndate: 2017-08-28 08:33:46\ntype: \"tags\"\n---\n```\ntype: 改成tags\n\n<!-- more --> \n\n#### 在主题配置文件中，在menu项下，要把tags页打开如\n\n```\nmenu:\n  home: /\n  archives: /archives\n  tags: /tags    //确保标签页已打开  \n  categories: /categories  \n  about: /about\n```\n\n#### 在你要发布的文章中添加标签\n\n```\n---\ntitle: hexo 下的分类和表签无法显示\ndate: 2017-08-28 08:33:46\ntags: [hexo]\ncategories: [hexo]\n---\n```\n\n所有冒号后面都有个空格\n\n\n\n\n","source":"_posts/hexo 下的分类和表签无法显示.md","raw":"---\ntitle: hexo 下的分类和表签无法显示\ndate: 2017-09-01\nupdated: 2017-09-01\ntags: [hexo]\ncategories: [hexo]\n---\n\n#### 在命令行中输入hexo new page tags\n\n```\n$ hexo new page tags\n```\n#### 这时会在在sources/tags里面有个index.md的文件，打开这个文件编辑\n\n```\n---\ntitle: tags\ndate: 2017-08-28 08:33:46\ntype: \"tags\"\n---\n```\ntype: 改成tags\n\n<!-- more --> \n\n#### 在主题配置文件中，在menu项下，要把tags页打开如\n\n```\nmenu:\n  home: /\n  archives: /archives\n  tags: /tags    //确保标签页已打开  \n  categories: /categories  \n  about: /about\n```\n\n#### 在你要发布的文章中添加标签\n\n```\n---\ntitle: hexo 下的分类和表签无法显示\ndate: 2017-08-28 08:33:46\ntags: [hexo]\ncategories: [hexo]\n---\n```\n\n所有冒号后面都有个空格\n\n\n\n\n","slug":"hexo 下的分类和表签无法显示","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yarg000euw0mq2kc1nnj","content":"<h4 id=\"在命令行中输入hexo-new-page-tags\"><a href=\"#在命令行中输入hexo-new-page-tags\" class=\"headerlink\" title=\"在命令行中输入hexo new page tags\"></a>在命令行中输入hexo new page tags</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure>\n<h4 id=\"这时会在在sources-tags里面有个index-md的文件，打开这个文件编辑\"><a href=\"#这时会在在sources-tags里面有个index-md的文件，打开这个文件编辑\" class=\"headerlink\" title=\"这时会在在sources/tags里面有个index.md的文件，打开这个文件编辑\"></a>这时会在在sources/tags里面有个index.md的文件，打开这个文件编辑</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-08-28 08:33:46</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>type: 改成tags</p>\n<a id=\"more\"></a> \n<h4 id=\"在主题配置文件中，在menu项下，要把tags页打开如\"><a href=\"#在主题配置文件中，在menu项下，要把tags页打开如\" class=\"headerlink\" title=\"在主题配置文件中，在menu项下，要把tags页打开如\"></a>在主题配置文件中，在menu项下，要把tags页打开如</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  tags: /tags    //确保标签页已打开  </span><br><span class=\"line\">  categories: /categories  </span><br><span class=\"line\">  about: /about</span><br></pre></td></tr></table></figure>\n<h4 id=\"在你要发布的文章中添加标签\"><a href=\"#在你要发布的文章中添加标签\" class=\"headerlink\" title=\"在你要发布的文章中添加标签\"></a>在你要发布的文章中添加标签</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo 下的分类和表签无法显示</span><br><span class=\"line\">date: 2017-08-28 08:33:46</span><br><span class=\"line\">tags: [hexo]</span><br><span class=\"line\">categories: [hexo]</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>所有冒号后面都有个空格</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"在命令行中输入hexo-new-page-tags\"><a href=\"#在命令行中输入hexo-new-page-tags\" class=\"headerlink\" title=\"在命令行中输入hexo new page tags\"></a>在命令行中输入hexo new page tags</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new page tags</span><br></pre></td></tr></table></figure>\n<h4 id=\"这时会在在sources-tags里面有个index-md的文件，打开这个文件编辑\"><a href=\"#这时会在在sources-tags里面有个index-md的文件，打开这个文件编辑\" class=\"headerlink\" title=\"这时会在在sources/tags里面有个index.md的文件，打开这个文件编辑\"></a>这时会在在sources/tags里面有个index.md的文件，打开这个文件编辑</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: tags</span><br><span class=\"line\">date: 2017-08-28 08:33:46</span><br><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>type: 改成tags</p>","more":"<h4 id=\"在主题配置文件中，在menu项下，要把tags页打开如\"><a href=\"#在主题配置文件中，在menu项下，要把tags页打开如\" class=\"headerlink\" title=\"在主题配置文件中，在menu项下，要把tags页打开如\"></a>在主题配置文件中，在menu项下，要把tags页打开如</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  tags: /tags    //确保标签页已打开  </span><br><span class=\"line\">  categories: /categories  </span><br><span class=\"line\">  about: /about</span><br></pre></td></tr></table></figure>\n<h4 id=\"在你要发布的文章中添加标签\"><a href=\"#在你要发布的文章中添加标签\" class=\"headerlink\" title=\"在你要发布的文章中添加标签\"></a>在你要发布的文章中添加标签</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo 下的分类和表签无法显示</span><br><span class=\"line\">date: 2017-08-28 08:33:46</span><br><span class=\"line\">tags: [hexo]</span><br><span class=\"line\">categories: [hexo]</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>所有冒号后面都有个空格</p>"},{"title":"npm 模块全局安装的权限问题","date":"2017-08-31T16:00:00.000Z","updated":"2017-08-31T16:00:00.000Z","_content":"\n安装全局 npm 模块报 EACCES 错误的问题，例如：\n\n```\n$ npm install -g coffee-script\n```\n因为缺省的 npm 全局安装目录(/usr/local/node_modules)没有给当前登录用户以写权限。\n当然可以在前面加上 sudo 来提升用户权限，但其实还有更好的方法\n\n你可以通过以下三种方式的任意一种解决这个问题:\n\n1. 修改npm默认安装目录的权限\n2. 修改npm默认安装目录\n3. 借助第三方工具安装node，比如brew\n\n<!-- more --> \n\n## 修改npm默认目录的权限\n\n```\n$ sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}\n```\n## 修改npm默认安装目录\n\n### 创建一个用于全局安装的目录\n\n```\nmkdir ~/.npm-global\n```\n### 修改npm默认安装目录\n\n\n```\nnpm config set prefix '~/.npm-global'\n```\n\n### 打开或者创建 ~/.profile 文件并且添加下面的语句:\n\n```\nexport PATH=~/.npm-global/bin:$PATH\n```\n### 更新系统变量\n\n```\nsource ~/.profile\n```\n\n### 测试\n\n```\nnpm install -g jshint\n```\n\n从此以后 npm install -g 安装的模块就都会到该用户名字下面的 ~/.npm-global 目录中，这样就做到了用户隔离。\n\n## 借助第三方工具安装node\n如果是Mac OS系统，则可以使用Homebrew软件包管理器完全避免此问题\n\n```\nbrew install node\n```\n\n>  引用：https://docs.npmjs.com/getting-started/fixing-npm-permissions \n\n\n\n","source":"_posts/npm 模块全局安装的权限问题.md","raw":"---\ntitle: npm 模块全局安装的权限问题\ndate: 2017-09-01\nupdated: 2017-09-01\ntags: [node,npm]\ncategories: [node]\n---\n\n安装全局 npm 模块报 EACCES 错误的问题，例如：\n\n```\n$ npm install -g coffee-script\n```\n因为缺省的 npm 全局安装目录(/usr/local/node_modules)没有给当前登录用户以写权限。\n当然可以在前面加上 sudo 来提升用户权限，但其实还有更好的方法\n\n你可以通过以下三种方式的任意一种解决这个问题:\n\n1. 修改npm默认安装目录的权限\n2. 修改npm默认安装目录\n3. 借助第三方工具安装node，比如brew\n\n<!-- more --> \n\n## 修改npm默认目录的权限\n\n```\n$ sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}\n```\n## 修改npm默认安装目录\n\n### 创建一个用于全局安装的目录\n\n```\nmkdir ~/.npm-global\n```\n### 修改npm默认安装目录\n\n\n```\nnpm config set prefix '~/.npm-global'\n```\n\n### 打开或者创建 ~/.profile 文件并且添加下面的语句:\n\n```\nexport PATH=~/.npm-global/bin:$PATH\n```\n### 更新系统变量\n\n```\nsource ~/.profile\n```\n\n### 测试\n\n```\nnpm install -g jshint\n```\n\n从此以后 npm install -g 安装的模块就都会到该用户名字下面的 ~/.npm-global 目录中，这样就做到了用户隔离。\n\n## 借助第三方工具安装node\n如果是Mac OS系统，则可以使用Homebrew软件包管理器完全避免此问题\n\n```\nbrew install node\n```\n\n>  引用：https://docs.npmjs.com/getting-started/fixing-npm-permissions \n\n\n\n","slug":"npm 模块全局安装的权限问题","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yark000iuw0m9skkea6n","content":"<p>安装全局 npm 模块报 EACCES 错误的问题，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g coffee-script</span><br></pre></td></tr></table></figure>\n<p>因为缺省的 npm 全局安装目录(/usr/local/node_modules)没有给当前登录用户以写权限。<br>当然可以在前面加上 sudo 来提升用户权限，但其实还有更好的方法</p>\n<p>你可以通过以下三种方式的任意一种解决这个问题:</p>\n<ol>\n<li>修改npm默认安装目录的权限</li>\n<li>修改npm默认安装目录</li>\n<li>借助第三方工具安装node，比如brew</li>\n</ol>\n<a id=\"more\"></a> \n<h2 id=\"修改npm默认目录的权限\"><a href=\"#修改npm默认目录的权限\" class=\"headerlink\" title=\"修改npm默认目录的权限\"></a>修改npm默认目录的权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo chown -R $(whoami) $(npm config get prefix)/&#123;lib/node_modules,bin,share&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改npm默认安装目录\"><a href=\"#修改npm默认安装目录\" class=\"headerlink\" title=\"修改npm默认安装目录\"></a>修改npm默认安装目录</h2><h3 id=\"创建一个用于全局安装的目录\"><a href=\"#创建一个用于全局安装的目录\" class=\"headerlink\" title=\"创建一个用于全局安装的目录\"></a>创建一个用于全局安装的目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.npm-global</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改npm默认安装目录-1\"><a href=\"#修改npm默认安装目录-1\" class=\"headerlink\" title=\"修改npm默认安装目录\"></a>修改npm默认安装目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set prefix &apos;~/.npm-global&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"打开或者创建-profile-文件并且添加下面的语句\"><a href=\"#打开或者创建-profile-文件并且添加下面的语句\" class=\"headerlink\" title=\"打开或者创建 ~/.profile 文件并且添加下面的语句:\"></a>打开或者创建 ~/.profile 文件并且添加下面的语句:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=~/.npm-global/bin:$PATH</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新系统变量\"><a href=\"#更新系统变量\" class=\"headerlink\" title=\"更新系统变量\"></a>更新系统变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g jshint</span><br></pre></td></tr></table></figure>\n<p>从此以后 npm install -g 安装的模块就都会到该用户名字下面的 ~/.npm-global 目录中，这样就做到了用户隔离。</p>\n<h2 id=\"借助第三方工具安装node\"><a href=\"#借助第三方工具安装node\" class=\"headerlink\" title=\"借助第三方工具安装node\"></a>借助第三方工具安装node</h2><p>如果是Mac OS系统，则可以使用Homebrew软件包管理器完全避免此问题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p> 引用：<a href=\"https://docs.npmjs.com/getting-started/fixing-npm-permissions\" target=\"_blank\" rel=\"noopener\">https://docs.npmjs.com/getting-started/fixing-npm-permissions</a> </p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>安装全局 npm 模块报 EACCES 错误的问题，例如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g coffee-script</span><br></pre></td></tr></table></figure>\n<p>因为缺省的 npm 全局安装目录(/usr/local/node_modules)没有给当前登录用户以写权限。<br>当然可以在前面加上 sudo 来提升用户权限，但其实还有更好的方法</p>\n<p>你可以通过以下三种方式的任意一种解决这个问题:</p>\n<ol>\n<li>修改npm默认安装目录的权限</li>\n<li>修改npm默认安装目录</li>\n<li>借助第三方工具安装node，比如brew</li>\n</ol>","more":"<h2 id=\"修改npm默认目录的权限\"><a href=\"#修改npm默认目录的权限\" class=\"headerlink\" title=\"修改npm默认目录的权限\"></a>修改npm默认目录的权限</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo chown -R $(whoami) $(npm config get prefix)/&#123;lib/node_modules,bin,share&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"修改npm默认安装目录\"><a href=\"#修改npm默认安装目录\" class=\"headerlink\" title=\"修改npm默认安装目录\"></a>修改npm默认安装目录</h2><h3 id=\"创建一个用于全局安装的目录\"><a href=\"#创建一个用于全局安装的目录\" class=\"headerlink\" title=\"创建一个用于全局安装的目录\"></a>创建一个用于全局安装的目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir ~/.npm-global</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改npm默认安装目录-1\"><a href=\"#修改npm默认安装目录-1\" class=\"headerlink\" title=\"修改npm默认安装目录\"></a>修改npm默认安装目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set prefix &apos;~/.npm-global&apos;</span><br></pre></td></tr></table></figure>\n<h3 id=\"打开或者创建-profile-文件并且添加下面的语句\"><a href=\"#打开或者创建-profile-文件并且添加下面的语句\" class=\"headerlink\" title=\"打开或者创建 ~/.profile 文件并且添加下面的语句:\"></a>打开或者创建 ~/.profile 文件并且添加下面的语句:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=~/.npm-global/bin:$PATH</span><br></pre></td></tr></table></figure>\n<h3 id=\"更新系统变量\"><a href=\"#更新系统变量\" class=\"headerlink\" title=\"更新系统变量\"></a>更新系统变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.profile</span><br></pre></td></tr></table></figure>\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g jshint</span><br></pre></td></tr></table></figure>\n<p>从此以后 npm install -g 安装的模块就都会到该用户名字下面的 ~/.npm-global 目录中，这样就做到了用户隔离。</p>\n<h2 id=\"借助第三方工具安装node\"><a href=\"#借助第三方工具安装node\" class=\"headerlink\" title=\"借助第三方工具安装node\"></a>借助第三方工具安装node</h2><p>如果是Mac OS系统，则可以使用Homebrew软件包管理器完全避免此问题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install node</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p> 引用：<a href=\"https://docs.npmjs.com/getting-started/fixing-npm-permissions\" target=\"_blank\" rel=\"noopener\">https://docs.npmjs.com/getting-started/fixing-npm-permissions</a> </p>\n</blockquote>"},{"title":"搭建 Node.js 开发环境","date":"2017-08-31T16:00:00.000Z","updated":"2017-08-31T16:00:00.000Z","_content":"\n* 如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本, 那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净。如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm\n\n* nvm 的全称是 Node Version Manager，之所以需要这个工具，是因为 Node.js 的各种特性都没有稳定下来，所以我们经常由于老项目或尝新的原因，需要切换各种版本\n\n<!-- more --> \n\n## 安装nvm\n\n```\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash\n```\n\n## 查看nvm安装是否成功，输入nvm\n\n\n```\n$ nvm\n\nNode Version Manager\n\nNote: <version> refers to any version-like string nvm understands. This includes:\n  - full or partial version numbers, starting with an optional \"v\" (0.10, v0.1.2, v1)\n  - default (built-in) aliases: node, stable, unstable, iojs, system\n  - custom aliases you define with `nvm alias foo`\n\nUsage:\n  nvm help                                  Show this message\n  nvm --version                             Print out the latest released version of nvm\n  nvm install [-s] <version>                Download and install a <version>, [-s] from source. Uses .nvmrc if available\n    --reinstall-packages-from=<version>     When installing, reinstall packages installed in <node|iojs|node version number>\n  nvm uninstall <version>                   Uninstall a version\n  nvm use [--silent] <version>              Modify PATH to use <version>. Uses .nvmrc if available\n  nvm exec [--silent] <version> [<command>] Run <command> on <version>. Uses .nvmrc if available\n  nvm run [--silent] <version> [<args>]     Run `node` on <version> with <args> as arguments. Uses .nvmrc if available\n  nvm current                               Display currently activated version\n  nvm ls                                    List installed versions\n  nvm ls <version>                          List versions matching a given description\n  nvm ls-remote                             List remote versions available for install\n  nvm version <version>                     Resolve the given description to a single local version\n  nvm version-remote <version>              Resolve the given description to a single remote version\n  nvm deactivate                            Undo effects of `nvm` on current shell\n  nvm alias [<pattern>]                     Show all aliases beginning with <pattern>\n  nvm alias <name> <version>                Set an alias named <name> pointing to <version>\n  nvm unalias <name>                        Deletes the alias named <name>\n  nvm reinstall-packages <version>          Reinstall global `npm` packages contained in <version> to current version\n  nvm unload                                Unload `nvm` from shell\n  nvm which [<version>]                     Display path to installed node version. Uses .nvmrc if available\n\nExample:\n  nvm install v0.10.32                  Install a specific version number\n  nvm use 0.10                          Use the latest available 0.10.x release\n  nvm run 0.10.32 app.js                Run app.js using node v0.10.32\n  nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32\n  nvm alias default 0.10.32             Set default node version on a shell\n\nNote:\n  to remove, delete, or uninstall nvm - just remove the `$NVM_DIR` folder (usually `~/.nvm`)\n```\n\n## 通过 nvm 安装任意版本的 node，可以指定版本号，或者用stable(稳定版)代替\n\n\n```\n$ nvm install stable\nDownloading https://nodejs.org/dist/v8.4.0/node-v8.4.0-darwin-x64.tar.xz...\n######################################################################## 100.0%\nWARNING: checksums are currently disabled for node.js v4.0 and later\nnvm is not compatible with the npm config \"prefix\" option: currently set to \"/Users/geekspeng/npm-global\"\nRun `nvm use --delete-prefix v8.4.0` to unset it.\n```\n\n## 通过 nvm 安装任意版本的 iojs\n\n```\n$ nvm install iojs\nDownloading https://iojs.org/dist/v3.3.1/iojs-v3.3.1-darwin-x64.tar.xz...\n######################################################################## 100.0%\nWARNING: checksums are currently disabled for io.js\nNow using io.js v3.3.1 (npm v2.14.3)\n```\n\n## 查看安装的node，箭头指向的就是当前使用的node版本\n\n```\n$ nvm ls\n->       v8.4.0\ndefault -> stable (-> v8.4.0)\nnode -> stable (-> v8.4.0) (default)\nstable -> 8.4 (-> v8.4.0) (default)\niojs -> N/A (default)\n```\n## nvm常用命令\n\n```\nnvm install v0.10.32                  Install a specific version number\nnvm use 0.10                          Use the latest available 0.10.x release\nnvm run 0.10.32 app.js                Run app.js using node v0.10.32\nnvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32\nnvm alias default 0.10.32             Set default node version on a shell\n```\n\n\n## 使用 cnpm 加速 npm\n同理 nvm , npm 默认是从国外的源获取和下载包信息, 所以可能会比较慢. 可以通过简单的 ---registry 参数, 使用国内的镜像 http://registry.npm.taobao.org\n\n\n```\n$ npm install koa --registry=http://registry.npm.taobao.org\n```\n\n毕竟镜像跟官方的 npm 源还是会有一个同步时间差异, 目前 cnpm 的默认同步时间间隔是 10 分钟. 如果你是模块发布者, 或者你想马上同步一个模块, 那么推荐你安装 cnpm cli\n\n```\n$ npm install cnpm -g --registry=http://registry.npm.taobao.org\n```\n通过 cnpm 命令行, 你可以快速同步任意模块\n\n```\n$ cnpm sync koa connect mocha\n```\n例如我想马上同步 koa, 直接打开浏览器: http://npm.taobao.org/sync/koa\n或者在命令行中通过 open 命令同步\n\n```\n$ open http://npm.taobao.org/sync/koa\n```\n\n## 当开启一个新的 shell 窗口时，找不到 node 命令的情况\n\n### 这种情况一般来自两个原因\n1、shell 不知道 nvm 的存在\n\n2、nvm 已经存在，但是没有 default 的 Node.js 版本可用。\n\n### 解决方式\n\n1、检查 ~/.profile 或者 ~/.bash_profile 中有没有下面的语句，没有的话就通过vim添加进入\n\n```\nexport NVM_DIR=\"/Users/geekspeng/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads \nnvm bash_completion\n```\n\n**注意：**\n\n* ~/.bashrc虽然有上面的语句但是每次新开命令行都要source ~/.bashrc，按理来说修改后source一次后面就不需要souce了\n* ~/.bashrc包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该文件被读取）\n\n\n2、 调用nvm ls 查看default 的指向\n\n```\n$ nvm ls \n->       v8.4.0\ndefault -> stable (-> v8.4.0)\nnode -> stable (-> v8.4.0) (default)\nstable -> 8.4 (-> v8.4.0) (default)\niojs -> N/A (default)\n```\n如果default没有指向的话，执行nvm alias default stable指定版本，执行完后再查看下\n\n```\n$ nvm alias default stable\n```\n\n\n\n","source":"_posts/搭建 Node.js 开发环境.md","raw":"---\ntitle: 搭建 Node.js 开发环境\ndate: 2017-09-01\nupdated: 2017-09-01\ntags: [node,nvm]\ncategories: [node]\n---\n\n* 如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本, 那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净。如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm\n\n* nvm 的全称是 Node Version Manager，之所以需要这个工具，是因为 Node.js 的各种特性都没有稳定下来，所以我们经常由于老项目或尝新的原因，需要切换各种版本\n\n<!-- more --> \n\n## 安装nvm\n\n```\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash\n```\n\n## 查看nvm安装是否成功，输入nvm\n\n\n```\n$ nvm\n\nNode Version Manager\n\nNote: <version> refers to any version-like string nvm understands. This includes:\n  - full or partial version numbers, starting with an optional \"v\" (0.10, v0.1.2, v1)\n  - default (built-in) aliases: node, stable, unstable, iojs, system\n  - custom aliases you define with `nvm alias foo`\n\nUsage:\n  nvm help                                  Show this message\n  nvm --version                             Print out the latest released version of nvm\n  nvm install [-s] <version>                Download and install a <version>, [-s] from source. Uses .nvmrc if available\n    --reinstall-packages-from=<version>     When installing, reinstall packages installed in <node|iojs|node version number>\n  nvm uninstall <version>                   Uninstall a version\n  nvm use [--silent] <version>              Modify PATH to use <version>. Uses .nvmrc if available\n  nvm exec [--silent] <version> [<command>] Run <command> on <version>. Uses .nvmrc if available\n  nvm run [--silent] <version> [<args>]     Run `node` on <version> with <args> as arguments. Uses .nvmrc if available\n  nvm current                               Display currently activated version\n  nvm ls                                    List installed versions\n  nvm ls <version>                          List versions matching a given description\n  nvm ls-remote                             List remote versions available for install\n  nvm version <version>                     Resolve the given description to a single local version\n  nvm version-remote <version>              Resolve the given description to a single remote version\n  nvm deactivate                            Undo effects of `nvm` on current shell\n  nvm alias [<pattern>]                     Show all aliases beginning with <pattern>\n  nvm alias <name> <version>                Set an alias named <name> pointing to <version>\n  nvm unalias <name>                        Deletes the alias named <name>\n  nvm reinstall-packages <version>          Reinstall global `npm` packages contained in <version> to current version\n  nvm unload                                Unload `nvm` from shell\n  nvm which [<version>]                     Display path to installed node version. Uses .nvmrc if available\n\nExample:\n  nvm install v0.10.32                  Install a specific version number\n  nvm use 0.10                          Use the latest available 0.10.x release\n  nvm run 0.10.32 app.js                Run app.js using node v0.10.32\n  nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32\n  nvm alias default 0.10.32             Set default node version on a shell\n\nNote:\n  to remove, delete, or uninstall nvm - just remove the `$NVM_DIR` folder (usually `~/.nvm`)\n```\n\n## 通过 nvm 安装任意版本的 node，可以指定版本号，或者用stable(稳定版)代替\n\n\n```\n$ nvm install stable\nDownloading https://nodejs.org/dist/v8.4.0/node-v8.4.0-darwin-x64.tar.xz...\n######################################################################## 100.0%\nWARNING: checksums are currently disabled for node.js v4.0 and later\nnvm is not compatible with the npm config \"prefix\" option: currently set to \"/Users/geekspeng/npm-global\"\nRun `nvm use --delete-prefix v8.4.0` to unset it.\n```\n\n## 通过 nvm 安装任意版本的 iojs\n\n```\n$ nvm install iojs\nDownloading https://iojs.org/dist/v3.3.1/iojs-v3.3.1-darwin-x64.tar.xz...\n######################################################################## 100.0%\nWARNING: checksums are currently disabled for io.js\nNow using io.js v3.3.1 (npm v2.14.3)\n```\n\n## 查看安装的node，箭头指向的就是当前使用的node版本\n\n```\n$ nvm ls\n->       v8.4.0\ndefault -> stable (-> v8.4.0)\nnode -> stable (-> v8.4.0) (default)\nstable -> 8.4 (-> v8.4.0) (default)\niojs -> N/A (default)\n```\n## nvm常用命令\n\n```\nnvm install v0.10.32                  Install a specific version number\nnvm use 0.10                          Use the latest available 0.10.x release\nnvm run 0.10.32 app.js                Run app.js using node v0.10.32\nnvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32\nnvm alias default 0.10.32             Set default node version on a shell\n```\n\n\n## 使用 cnpm 加速 npm\n同理 nvm , npm 默认是从国外的源获取和下载包信息, 所以可能会比较慢. 可以通过简单的 ---registry 参数, 使用国内的镜像 http://registry.npm.taobao.org\n\n\n```\n$ npm install koa --registry=http://registry.npm.taobao.org\n```\n\n毕竟镜像跟官方的 npm 源还是会有一个同步时间差异, 目前 cnpm 的默认同步时间间隔是 10 分钟. 如果你是模块发布者, 或者你想马上同步一个模块, 那么推荐你安装 cnpm cli\n\n```\n$ npm install cnpm -g --registry=http://registry.npm.taobao.org\n```\n通过 cnpm 命令行, 你可以快速同步任意模块\n\n```\n$ cnpm sync koa connect mocha\n```\n例如我想马上同步 koa, 直接打开浏览器: http://npm.taobao.org/sync/koa\n或者在命令行中通过 open 命令同步\n\n```\n$ open http://npm.taobao.org/sync/koa\n```\n\n## 当开启一个新的 shell 窗口时，找不到 node 命令的情况\n\n### 这种情况一般来自两个原因\n1、shell 不知道 nvm 的存在\n\n2、nvm 已经存在，但是没有 default 的 Node.js 版本可用。\n\n### 解决方式\n\n1、检查 ~/.profile 或者 ~/.bash_profile 中有没有下面的语句，没有的话就通过vim添加进入\n\n```\nexport NVM_DIR=\"/Users/geekspeng/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads \nnvm bash_completion\n```\n\n**注意：**\n\n* ~/.bashrc虽然有上面的语句但是每次新开命令行都要source ~/.bashrc，按理来说修改后source一次后面就不需要souce了\n* ~/.bashrc包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该文件被读取）\n\n\n2、 调用nvm ls 查看default 的指向\n\n```\n$ nvm ls \n->       v8.4.0\ndefault -> stable (-> v8.4.0)\nnode -> stable (-> v8.4.0) (default)\nstable -> 8.4 (-> v8.4.0) (default)\niojs -> N/A (default)\n```\n如果default没有指向的话，执行nvm alias default stable指定版本，执行完后再查看下\n\n```\n$ nvm alias default stable\n```\n\n\n\n","slug":"搭建 Node.js 开发环境","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yarm000kuw0mer8x1zqi","content":"<ul>\n<li><p>如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本, 那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净。如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm</p>\n</li>\n<li><p>nvm 的全称是 Node Version Manager，之所以需要这个工具，是因为 Node.js 的各种特性都没有稳定下来，所以我们经常由于老项目或尝新的原因，需要切换各种版本</p>\n</li>\n</ul>\n<a id=\"more\"></a> \n<h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看nvm安装是否成功，输入nvm\"><a href=\"#查看nvm安装是否成功，输入nvm\" class=\"headerlink\" title=\"查看nvm安装是否成功，输入nvm\"></a>查看nvm安装是否成功，输入nvm</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm</span><br><span class=\"line\"></span><br><span class=\"line\">Node Version Manager</span><br><span class=\"line\"></span><br><span class=\"line\">Note: &lt;version&gt; refers to any version-like string nvm understands. This includes:</span><br><span class=\"line\">  - full or partial version numbers, starting with an optional &quot;v&quot; (0.10, v0.1.2, v1)</span><br><span class=\"line\">  - default (built-in) aliases: node, stable, unstable, iojs, system</span><br><span class=\"line\">  - custom aliases you define with `nvm alias foo`</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  nvm help                                  Show this message</span><br><span class=\"line\">  nvm --version                             Print out the latest released version of nvm</span><br><span class=\"line\">  nvm install [-s] &lt;version&gt;                Download and install a &lt;version&gt;, [-s] from source. Uses .nvmrc if available</span><br><span class=\"line\">    --reinstall-packages-from=&lt;version&gt;     When installing, reinstall packages installed in &lt;node|iojs|node version number&gt;</span><br><span class=\"line\">  nvm uninstall &lt;version&gt;                   Uninstall a version</span><br><span class=\"line\">  nvm use [--silent] &lt;version&gt;              Modify PATH to use &lt;version&gt;. Uses .nvmrc if available</span><br><span class=\"line\">  nvm exec [--silent] &lt;version&gt; [&lt;command&gt;] Run &lt;command&gt; on &lt;version&gt;. Uses .nvmrc if available</span><br><span class=\"line\">  nvm run [--silent] &lt;version&gt; [&lt;args&gt;]     Run `node` on &lt;version&gt; with &lt;args&gt; as arguments. Uses .nvmrc if available</span><br><span class=\"line\">  nvm current                               Display currently activated version</span><br><span class=\"line\">  nvm ls                                    List installed versions</span><br><span class=\"line\">  nvm ls &lt;version&gt;                          List versions matching a given description</span><br><span class=\"line\">  nvm ls-remote                             List remote versions available for install</span><br><span class=\"line\">  nvm version &lt;version&gt;                     Resolve the given description to a single local version</span><br><span class=\"line\">  nvm version-remote &lt;version&gt;              Resolve the given description to a single remote version</span><br><span class=\"line\">  nvm deactivate                            Undo effects of `nvm` on current shell</span><br><span class=\"line\">  nvm alias [&lt;pattern&gt;]                     Show all aliases beginning with &lt;pattern&gt;</span><br><span class=\"line\">  nvm alias &lt;name&gt; &lt;version&gt;                Set an alias named &lt;name&gt; pointing to &lt;version&gt;</span><br><span class=\"line\">  nvm unalias &lt;name&gt;                        Deletes the alias named &lt;name&gt;</span><br><span class=\"line\">  nvm reinstall-packages &lt;version&gt;          Reinstall global `npm` packages contained in &lt;version&gt; to current version</span><br><span class=\"line\">  nvm unload                                Unload `nvm` from shell</span><br><span class=\"line\">  nvm which [&lt;version&gt;]                     Display path to installed node version. Uses .nvmrc if available</span><br><span class=\"line\"></span><br><span class=\"line\">Example:</span><br><span class=\"line\">  nvm install v0.10.32                  Install a specific version number</span><br><span class=\"line\">  nvm use 0.10                          Use the latest available 0.10.x release</span><br><span class=\"line\">  nvm run 0.10.32 app.js                Run app.js using node v0.10.32</span><br><span class=\"line\">  nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32</span><br><span class=\"line\">  nvm alias default 0.10.32             Set default node version on a shell</span><br><span class=\"line\"></span><br><span class=\"line\">Note:</span><br><span class=\"line\">  to remove, delete, or uninstall nvm - just remove the `$NVM_DIR` folder (usually `~/.nvm`)</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-nvm-安装任意版本的-node，可以指定版本号，或者用stable-稳定版-代替\"><a href=\"#通过-nvm-安装任意版本的-node，可以指定版本号，或者用stable-稳定版-代替\" class=\"headerlink\" title=\"通过 nvm 安装任意版本的 node，可以指定版本号，或者用stable(稳定版)代替\"></a>通过 nvm 安装任意版本的 node，可以指定版本号，或者用stable(稳定版)代替</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br><span class=\"line\">Downloading https://nodejs.org/dist/v8.4.0/node-v8.4.0-darwin-x64.tar.xz...</span><br><span class=\"line\">######################################################################## 100.0%</span><br><span class=\"line\">WARNING: checksums are currently disabled for node.js v4.0 and later</span><br><span class=\"line\">nvm is not compatible with the npm config &quot;prefix&quot; option: currently set to &quot;/Users/geekspeng/npm-global&quot;</span><br><span class=\"line\">Run `nvm use --delete-prefix v8.4.0` to unset it.</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-nvm-安装任意版本的-iojs\"><a href=\"#通过-nvm-安装任意版本的-iojs\" class=\"headerlink\" title=\"通过 nvm 安装任意版本的 iojs\"></a>通过 nvm 安装任意版本的 iojs</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install iojs</span><br><span class=\"line\">Downloading https://iojs.org/dist/v3.3.1/iojs-v3.3.1-darwin-x64.tar.xz...</span><br><span class=\"line\">######################################################################## 100.0%</span><br><span class=\"line\">WARNING: checksums are currently disabled for io.js</span><br><span class=\"line\">Now using io.js v3.3.1 (npm v2.14.3)</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看安装的node，箭头指向的就是当前使用的node版本\"><a href=\"#查看安装的node，箭头指向的就是当前使用的node版本\" class=\"headerlink\" title=\"查看安装的node，箭头指向的就是当前使用的node版本\"></a>查看安装的node，箭头指向的就是当前使用的node版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm ls</span><br><span class=\"line\">-&gt;       v8.4.0</span><br><span class=\"line\">default -&gt; stable (-&gt; v8.4.0)</span><br><span class=\"line\">node -&gt; stable (-&gt; v8.4.0) (default)</span><br><span class=\"line\">stable -&gt; 8.4 (-&gt; v8.4.0) (default)</span><br><span class=\"line\">iojs -&gt; N/A (default)</span><br></pre></td></tr></table></figure>\n<h2 id=\"nvm常用命令\"><a href=\"#nvm常用命令\" class=\"headerlink\" title=\"nvm常用命令\"></a>nvm常用命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install v0.10.32                  Install a specific version number</span><br><span class=\"line\">nvm use 0.10                          Use the latest available 0.10.x release</span><br><span class=\"line\">nvm run 0.10.32 app.js                Run app.js using node v0.10.32</span><br><span class=\"line\">nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32</span><br><span class=\"line\">nvm alias default 0.10.32             Set default node version on a shell</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用-cnpm-加速-npm\"><a href=\"#使用-cnpm-加速-npm\" class=\"headerlink\" title=\"使用 cnpm 加速 npm\"></a>使用 cnpm 加速 npm</h2><p>同理 nvm , npm 默认是从国外的源获取和下载包信息, 所以可能会比较慢. 可以通过简单的 —registry 参数, 使用国内的镜像 <a href=\"http://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">http://registry.npm.taobao.org</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install koa --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>毕竟镜像跟官方的 npm 源还是会有一个同步时间差异, 目前 cnpm 的默认同步时间间隔是 10 分钟. 如果你是模块发布者, 或者你想马上同步一个模块, 那么推荐你安装 cnpm cli</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install cnpm -g --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>通过 cnpm 命令行, 你可以快速同步任意模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm sync koa connect mocha</span><br></pre></td></tr></table></figure>\n<p>例如我想马上同步 koa, 直接打开浏览器: <a href=\"http://npm.taobao.org/sync/koa\" target=\"_blank\" rel=\"noopener\">http://npm.taobao.org/sync/koa</a><br>或者在命令行中通过 open 命令同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ open http://npm.taobao.org/sync/koa</span><br></pre></td></tr></table></figure>\n<h2 id=\"当开启一个新的-shell-窗口时，找不到-node-命令的情况\"><a href=\"#当开启一个新的-shell-窗口时，找不到-node-命令的情况\" class=\"headerlink\" title=\"当开启一个新的 shell 窗口时，找不到 node 命令的情况\"></a>当开启一个新的 shell 窗口时，找不到 node 命令的情况</h2><h3 id=\"这种情况一般来自两个原因\"><a href=\"#这种情况一般来自两个原因\" class=\"headerlink\" title=\"这种情况一般来自两个原因\"></a>这种情况一般来自两个原因</h3><p>1、shell 不知道 nvm 的存在</p>\n<p>2、nvm 已经存在，但是没有 default 的 Node.js 版本可用。</p>\n<h3 id=\"解决方式\"><a href=\"#解决方式\" class=\"headerlink\" title=\"解决方式\"></a>解决方式</h3><p>1、检查 ~/.profile 或者 ~/.bash_profile 中有没有下面的语句，没有的话就通过vim添加进入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=&quot;/Users/geekspeng/.nvm&quot;</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads </span><br><span class=\"line\">nvm bash_completion</span><br></pre></td></tr></table></figure>\n<p><strong>注意：</strong></p>\n<ul>\n<li>~/.bashrc虽然有上面的语句但是每次新开命令行都要source ~/.bashrc，按理来说修改后source一次后面就不需要souce了</li>\n<li>~/.bashrc包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该文件被读取）</li>\n</ul>\n<p>2、 调用nvm ls 查看default 的指向</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm ls </span><br><span class=\"line\">-&gt;       v8.4.0</span><br><span class=\"line\">default -&gt; stable (-&gt; v8.4.0)</span><br><span class=\"line\">node -&gt; stable (-&gt; v8.4.0) (default)</span><br><span class=\"line\">stable -&gt; 8.4 (-&gt; v8.4.0) (default)</span><br><span class=\"line\">iojs -&gt; N/A (default)</span><br></pre></td></tr></table></figure>\n<p>如果default没有指向的话，执行nvm alias default stable指定版本，执行完后再查看下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm alias default stable</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<ul>\n<li><p>如果你想长期做 node 开发, 或者想快速更新 node 版本, 或者想快速切换 node 版本, 那么在非 Windows(如 osx, linux) 环境下, 请使用 nvm 来安装你的 node 开发环境, 保持系统的干净。如果你使用 Windows 做开发, 那么你可以使用 nvmw 来替代 nvm</p>\n</li>\n<li><p>nvm 的全称是 Node Version Manager，之所以需要这个工具，是因为 Node.js 的各种特性都没有稳定下来，所以我们经常由于老项目或尝新的原因，需要切换各种版本</p>\n</li>\n</ul>","more":"<h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.30.2/install.sh | bash</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看nvm安装是否成功，输入nvm\"><a href=\"#查看nvm安装是否成功，输入nvm\" class=\"headerlink\" title=\"查看nvm安装是否成功，输入nvm\"></a>查看nvm安装是否成功，输入nvm</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm</span><br><span class=\"line\"></span><br><span class=\"line\">Node Version Manager</span><br><span class=\"line\"></span><br><span class=\"line\">Note: &lt;version&gt; refers to any version-like string nvm understands. This includes:</span><br><span class=\"line\">  - full or partial version numbers, starting with an optional &quot;v&quot; (0.10, v0.1.2, v1)</span><br><span class=\"line\">  - default (built-in) aliases: node, stable, unstable, iojs, system</span><br><span class=\"line\">  - custom aliases you define with `nvm alias foo`</span><br><span class=\"line\"></span><br><span class=\"line\">Usage:</span><br><span class=\"line\">  nvm help                                  Show this message</span><br><span class=\"line\">  nvm --version                             Print out the latest released version of nvm</span><br><span class=\"line\">  nvm install [-s] &lt;version&gt;                Download and install a &lt;version&gt;, [-s] from source. Uses .nvmrc if available</span><br><span class=\"line\">    --reinstall-packages-from=&lt;version&gt;     When installing, reinstall packages installed in &lt;node|iojs|node version number&gt;</span><br><span class=\"line\">  nvm uninstall &lt;version&gt;                   Uninstall a version</span><br><span class=\"line\">  nvm use [--silent] &lt;version&gt;              Modify PATH to use &lt;version&gt;. Uses .nvmrc if available</span><br><span class=\"line\">  nvm exec [--silent] &lt;version&gt; [&lt;command&gt;] Run &lt;command&gt; on &lt;version&gt;. Uses .nvmrc if available</span><br><span class=\"line\">  nvm run [--silent] &lt;version&gt; [&lt;args&gt;]     Run `node` on &lt;version&gt; with &lt;args&gt; as arguments. Uses .nvmrc if available</span><br><span class=\"line\">  nvm current                               Display currently activated version</span><br><span class=\"line\">  nvm ls                                    List installed versions</span><br><span class=\"line\">  nvm ls &lt;version&gt;                          List versions matching a given description</span><br><span class=\"line\">  nvm ls-remote                             List remote versions available for install</span><br><span class=\"line\">  nvm version &lt;version&gt;                     Resolve the given description to a single local version</span><br><span class=\"line\">  nvm version-remote &lt;version&gt;              Resolve the given description to a single remote version</span><br><span class=\"line\">  nvm deactivate                            Undo effects of `nvm` on current shell</span><br><span class=\"line\">  nvm alias [&lt;pattern&gt;]                     Show all aliases beginning with &lt;pattern&gt;</span><br><span class=\"line\">  nvm alias &lt;name&gt; &lt;version&gt;                Set an alias named &lt;name&gt; pointing to &lt;version&gt;</span><br><span class=\"line\">  nvm unalias &lt;name&gt;                        Deletes the alias named &lt;name&gt;</span><br><span class=\"line\">  nvm reinstall-packages &lt;version&gt;          Reinstall global `npm` packages contained in &lt;version&gt; to current version</span><br><span class=\"line\">  nvm unload                                Unload `nvm` from shell</span><br><span class=\"line\">  nvm which [&lt;version&gt;]                     Display path to installed node version. Uses .nvmrc if available</span><br><span class=\"line\"></span><br><span class=\"line\">Example:</span><br><span class=\"line\">  nvm install v0.10.32                  Install a specific version number</span><br><span class=\"line\">  nvm use 0.10                          Use the latest available 0.10.x release</span><br><span class=\"line\">  nvm run 0.10.32 app.js                Run app.js using node v0.10.32</span><br><span class=\"line\">  nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32</span><br><span class=\"line\">  nvm alias default 0.10.32             Set default node version on a shell</span><br><span class=\"line\"></span><br><span class=\"line\">Note:</span><br><span class=\"line\">  to remove, delete, or uninstall nvm - just remove the `$NVM_DIR` folder (usually `~/.nvm`)</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-nvm-安装任意版本的-node，可以指定版本号，或者用stable-稳定版-代替\"><a href=\"#通过-nvm-安装任意版本的-node，可以指定版本号，或者用stable-稳定版-代替\" class=\"headerlink\" title=\"通过 nvm 安装任意版本的 node，可以指定版本号，或者用stable(稳定版)代替\"></a>通过 nvm 安装任意版本的 node，可以指定版本号，或者用stable(稳定版)代替</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install stable</span><br><span class=\"line\">Downloading https://nodejs.org/dist/v8.4.0/node-v8.4.0-darwin-x64.tar.xz...</span><br><span class=\"line\">######################################################################## 100.0%</span><br><span class=\"line\">WARNING: checksums are currently disabled for node.js v4.0 and later</span><br><span class=\"line\">nvm is not compatible with the npm config &quot;prefix&quot; option: currently set to &quot;/Users/geekspeng/npm-global&quot;</span><br><span class=\"line\">Run `nvm use --delete-prefix v8.4.0` to unset it.</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-nvm-安装任意版本的-iojs\"><a href=\"#通过-nvm-安装任意版本的-iojs\" class=\"headerlink\" title=\"通过 nvm 安装任意版本的 iojs\"></a>通过 nvm 安装任意版本的 iojs</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm install iojs</span><br><span class=\"line\">Downloading https://iojs.org/dist/v3.3.1/iojs-v3.3.1-darwin-x64.tar.xz...</span><br><span class=\"line\">######################################################################## 100.0%</span><br><span class=\"line\">WARNING: checksums are currently disabled for io.js</span><br><span class=\"line\">Now using io.js v3.3.1 (npm v2.14.3)</span><br></pre></td></tr></table></figure>\n<h2 id=\"查看安装的node，箭头指向的就是当前使用的node版本\"><a href=\"#查看安装的node，箭头指向的就是当前使用的node版本\" class=\"headerlink\" title=\"查看安装的node，箭头指向的就是当前使用的node版本\"></a>查看安装的node，箭头指向的就是当前使用的node版本</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm ls</span><br><span class=\"line\">-&gt;       v8.4.0</span><br><span class=\"line\">default -&gt; stable (-&gt; v8.4.0)</span><br><span class=\"line\">node -&gt; stable (-&gt; v8.4.0) (default)</span><br><span class=\"line\">stable -&gt; 8.4 (-&gt; v8.4.0) (default)</span><br><span class=\"line\">iojs -&gt; N/A (default)</span><br></pre></td></tr></table></figure>\n<h2 id=\"nvm常用命令\"><a href=\"#nvm常用命令\" class=\"headerlink\" title=\"nvm常用命令\"></a>nvm常用命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install v0.10.32                  Install a specific version number</span><br><span class=\"line\">nvm use 0.10                          Use the latest available 0.10.x release</span><br><span class=\"line\">nvm run 0.10.32 app.js                Run app.js using node v0.10.32</span><br><span class=\"line\">nvm exec 0.10.32 node app.js          Run `node app.js` with the PATH pointing to node v0.10.32</span><br><span class=\"line\">nvm alias default 0.10.32             Set default node version on a shell</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用-cnpm-加速-npm\"><a href=\"#使用-cnpm-加速-npm\" class=\"headerlink\" title=\"使用 cnpm 加速 npm\"></a>使用 cnpm 加速 npm</h2><p>同理 nvm , npm 默认是从国外的源获取和下载包信息, 所以可能会比较慢. 可以通过简单的 —registry 参数, 使用国内的镜像 <a href=\"http://registry.npm.taobao.org\" target=\"_blank\" rel=\"noopener\">http://registry.npm.taobao.org</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install koa --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>毕竟镜像跟官方的 npm 源还是会有一个同步时间差异, 目前 cnpm 的默认同步时间间隔是 10 分钟. 如果你是模块发布者, 或者你想马上同步一个模块, 那么推荐你安装 cnpm cli</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install cnpm -g --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>通过 cnpm 命令行, 你可以快速同步任意模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cnpm sync koa connect mocha</span><br></pre></td></tr></table></figure>\n<p>例如我想马上同步 koa, 直接打开浏览器: <a href=\"http://npm.taobao.org/sync/koa\" target=\"_blank\" rel=\"noopener\">http://npm.taobao.org/sync/koa</a><br>或者在命令行中通过 open 命令同步</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ open http://npm.taobao.org/sync/koa</span><br></pre></td></tr></table></figure>\n<h2 id=\"当开启一个新的-shell-窗口时，找不到-node-命令的情况\"><a href=\"#当开启一个新的-shell-窗口时，找不到-node-命令的情况\" class=\"headerlink\" title=\"当开启一个新的 shell 窗口时，找不到 node 命令的情况\"></a>当开启一个新的 shell 窗口时，找不到 node 命令的情况</h2><h3 id=\"这种情况一般来自两个原因\"><a href=\"#这种情况一般来自两个原因\" class=\"headerlink\" title=\"这种情况一般来自两个原因\"></a>这种情况一般来自两个原因</h3><p>1、shell 不知道 nvm 的存在</p>\n<p>2、nvm 已经存在，但是没有 default 的 Node.js 版本可用。</p>\n<h3 id=\"解决方式\"><a href=\"#解决方式\" class=\"headerlink\" title=\"解决方式\"></a>解决方式</h3><p>1、检查 ~/.profile 或者 ~/.bash_profile 中有没有下面的语句，没有的话就通过vim添加进入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export NVM_DIR=&quot;/Users/geekspeng/.nvm&quot;</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm</span><br><span class=\"line\">[ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads </span><br><span class=\"line\">nvm bash_completion</span><br></pre></td></tr></table></figure>\n<p><strong>注意：</strong></p>\n<ul>\n<li>~/.bashrc虽然有上面的语句但是每次新开命令行都要source ~/.bashrc，按理来说修改后source一次后面就不需要souce了</li>\n<li>~/.bashrc包含专用于你的bash shell的bash信息,当登录时以及每次打开新的shell时,该文件被读取）</li>\n</ul>\n<p>2、 调用nvm ls 查看default 的指向</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm ls </span><br><span class=\"line\">-&gt;       v8.4.0</span><br><span class=\"line\">default -&gt; stable (-&gt; v8.4.0)</span><br><span class=\"line\">node -&gt; stable (-&gt; v8.4.0) (default)</span><br><span class=\"line\">stable -&gt; 8.4 (-&gt; v8.4.0) (default)</span><br><span class=\"line\">iojs -&gt; N/A (default)</span><br></pre></td></tr></table></figure>\n<p>如果default没有指向的话，执行nvm alias default stable指定版本，执行完后再查看下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nvm alias default stable</span><br></pre></td></tr></table></figure>"},{"title":"科学上网（二）：极路由配置Shadowsocks","date":"2017-12-14T16:00:00.000Z","updated":"2017-12-14T16:00:00.000Z","_content":"\n上一篇讲了如何在 AWS 云服务器上搭建 Shadowsocks服务器从而实现科学上网，这篇我们主要讲怎么在极路由上配置Shadowsocks，从而使连上这台路由器的设备都可以轻松地访问goolge等网站而不需在所有需要科学上网的设备上进行配置。\n<!-- more -->\n\n# Shadowsocks客户端安装\n通过[hiwifi-ss](https://github.com/qiwihui/hiwifi-ss)开源项目我们可以轻松的在极路由安装Shadowsocks客户端。\n\n首先电脑WiFi连接到极路由，由于需要从网上下载Shadowsocks客户端，所以请确保极路由能连上网（插上网线或者作为无线中继）。\n\n然后我们通过SSH登录到极路由的控制台，我使用的MAC默认带有SSH，如果没有SSH请自行百度安装，端口号默认使用的是1022，这里需要输入WiFi密码\n\n```\nxuepengdeMBP:~ geekspeng$ ssh root@hiwifi.com -p 1022\nroot@hiwifi.com's password:\n```\n\n登录成功后会显示下面的信息\n\n```\nBusyBox v1.22.1 (2017-08-10 17:53:48 CST) built-in shell (ash)\nEnter 'help' for a list of built-in commands.\n\n***********************************************************\n              __  __  _              _   ____  _   TM\n             / / / / (_) _      __  (_) / __/ (_)\n            / /_/ / / / | | /| / / / / / /_  / /\n           / __  / / /  | |/ |/ / / / / __/ / /\n          /_/ /_/ /_/   |__/|__/ /_/ /_/   /_/\n                  http://www.hiwifi.com/\n***********************************************************\nroot@Hiwifi:~#\n```\n最后安装Shadowsocks客户端\n\n**1.新版hiwifi** => 使用项目根目录下的 shadow.sh 脚本进行安装, 建议使用以下一键命令:\n\n```\ncd /tmp && curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh && sh shadow.sh && rm shadow.sh\n```\n\n**2.hiwifi 1.2.5.15805s**\n\n```\ncd /tmp && curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh && sh shadow.sh 12515805s && rm shadow.sh\n```\n\n# Shadowsocks账号设置\n\n在浏览器中登录极路由后台，完成配置后，点击开关开启即可，如果一切正常，下方状态会显示连接正常\n![](http://p15d1hccg.bkt.clouddn.com/15132641329660.jpg)\n\n","source":"_posts/科学上网（二）：极路由配置Shadowsocks.md","raw":"---\ntitle: 科学上网（二）：极路由配置Shadowsocks\ndate: 2017-12-15\nupdated: 2017-12-15\ntags: [科学上网,Shadowsocks,极路由]\ncategories: [科学上网]\n---\n\n上一篇讲了如何在 AWS 云服务器上搭建 Shadowsocks服务器从而实现科学上网，这篇我们主要讲怎么在极路由上配置Shadowsocks，从而使连上这台路由器的设备都可以轻松地访问goolge等网站而不需在所有需要科学上网的设备上进行配置。\n<!-- more -->\n\n# Shadowsocks客户端安装\n通过[hiwifi-ss](https://github.com/qiwihui/hiwifi-ss)开源项目我们可以轻松的在极路由安装Shadowsocks客户端。\n\n首先电脑WiFi连接到极路由，由于需要从网上下载Shadowsocks客户端，所以请确保极路由能连上网（插上网线或者作为无线中继）。\n\n然后我们通过SSH登录到极路由的控制台，我使用的MAC默认带有SSH，如果没有SSH请自行百度安装，端口号默认使用的是1022，这里需要输入WiFi密码\n\n```\nxuepengdeMBP:~ geekspeng$ ssh root@hiwifi.com -p 1022\nroot@hiwifi.com's password:\n```\n\n登录成功后会显示下面的信息\n\n```\nBusyBox v1.22.1 (2017-08-10 17:53:48 CST) built-in shell (ash)\nEnter 'help' for a list of built-in commands.\n\n***********************************************************\n              __  __  _              _   ____  _   TM\n             / / / / (_) _      __  (_) / __/ (_)\n            / /_/ / / / | | /| / / / / / /_  / /\n           / __  / / /  | |/ |/ / / / / __/ / /\n          /_/ /_/ /_/   |__/|__/ /_/ /_/   /_/\n                  http://www.hiwifi.com/\n***********************************************************\nroot@Hiwifi:~#\n```\n最后安装Shadowsocks客户端\n\n**1.新版hiwifi** => 使用项目根目录下的 shadow.sh 脚本进行安装, 建议使用以下一键命令:\n\n```\ncd /tmp && curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh && sh shadow.sh && rm shadow.sh\n```\n\n**2.hiwifi 1.2.5.15805s**\n\n```\ncd /tmp && curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh && sh shadow.sh 12515805s && rm shadow.sh\n```\n\n# Shadowsocks账号设置\n\n在浏览器中登录极路由后台，完成配置后，点击开关开启即可，如果一切正常，下方状态会显示连接正常\n![](http://p15d1hccg.bkt.clouddn.com/15132641329660.jpg)\n\n","slug":"科学上网（二）：极路由配置Shadowsocks","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yaro000ouw0m8gd5fwia","content":"<p>上一篇讲了如何在 AWS 云服务器上搭建 Shadowsocks服务器从而实现科学上网，这篇我们主要讲怎么在极路由上配置Shadowsocks，从而使连上这台路由器的设备都可以轻松地访问goolge等网站而不需在所有需要科学上网的设备上进行配置。<br><a id=\"more\"></a></p>\n<h1 id=\"Shadowsocks客户端安装\"><a href=\"#Shadowsocks客户端安装\" class=\"headerlink\" title=\"Shadowsocks客户端安装\"></a>Shadowsocks客户端安装</h1><p>通过<a href=\"https://github.com/qiwihui/hiwifi-ss\" target=\"_blank\" rel=\"noopener\">hiwifi-ss</a>开源项目我们可以轻松的在极路由安装Shadowsocks客户端。</p>\n<p>首先电脑WiFi连接到极路由，由于需要从网上下载Shadowsocks客户端，所以请确保极路由能连上网（插上网线或者作为无线中继）。</p>\n<p>然后我们通过SSH登录到极路由的控制台，我使用的MAC默认带有SSH，如果没有SSH请自行百度安装，端口号默认使用的是1022，这里需要输入WiFi密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xuepengdeMBP:~ geekspeng$ ssh root@hiwifi.com -p 1022</span><br><span class=\"line\">root@hiwifi.com&apos;s password:</span><br></pre></td></tr></table></figure>\n<p>登录成功后会显示下面的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BusyBox v1.22.1 (2017-08-10 17:53:48 CST) built-in shell (ash)</span><br><span class=\"line\">Enter &apos;help&apos; for a list of built-in commands.</span><br><span class=\"line\"></span><br><span class=\"line\">***********************************************************</span><br><span class=\"line\">              __  __  _              _   ____  _   TM</span><br><span class=\"line\">             / / / / (_) _      __  (_) / __/ (_)</span><br><span class=\"line\">            / /_/ / / / | | /| / / / / / /_  / /</span><br><span class=\"line\">           / __  / / /  | |/ |/ / / / / __/ / /</span><br><span class=\"line\">          /_/ /_/ /_/   |__/|__/ /_/ /_/   /_/</span><br><span class=\"line\">                  http://www.hiwifi.com/</span><br><span class=\"line\">***********************************************************</span><br><span class=\"line\">root@Hiwifi:~#</span><br></pre></td></tr></table></figure>\n<p>最后安装Shadowsocks客户端</p>\n<p><strong>1.新版hiwifi</strong> =&gt; 使用项目根目录下的 shadow.sh 脚本进行安装, 建议使用以下一键命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp &amp;&amp; curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh &amp;&amp; sh shadow.sh &amp;&amp; rm shadow.sh</span><br></pre></td></tr></table></figure>\n<p><strong>2.hiwifi 1.2.5.15805s</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp &amp;&amp; curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh &amp;&amp; sh shadow.sh 12515805s &amp;&amp; rm shadow.sh</span><br></pre></td></tr></table></figure>\n<h1 id=\"Shadowsocks账号设置\"><a href=\"#Shadowsocks账号设置\" class=\"headerlink\" title=\"Shadowsocks账号设置\"></a>Shadowsocks账号设置</h1><p>在浏览器中登录极路由后台，完成配置后，点击开关开启即可，如果一切正常，下方状态会显示连接正常<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132641329660.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>上一篇讲了如何在 AWS 云服务器上搭建 Shadowsocks服务器从而实现科学上网，这篇我们主要讲怎么在极路由上配置Shadowsocks，从而使连上这台路由器的设备都可以轻松地访问goolge等网站而不需在所有需要科学上网的设备上进行配置。<br>","more":"</p>\n<h1 id=\"Shadowsocks客户端安装\"><a href=\"#Shadowsocks客户端安装\" class=\"headerlink\" title=\"Shadowsocks客户端安装\"></a>Shadowsocks客户端安装</h1><p>通过<a href=\"https://github.com/qiwihui/hiwifi-ss\" target=\"_blank\" rel=\"noopener\">hiwifi-ss</a>开源项目我们可以轻松的在极路由安装Shadowsocks客户端。</p>\n<p>首先电脑WiFi连接到极路由，由于需要从网上下载Shadowsocks客户端，所以请确保极路由能连上网（插上网线或者作为无线中继）。</p>\n<p>然后我们通过SSH登录到极路由的控制台，我使用的MAC默认带有SSH，如果没有SSH请自行百度安装，端口号默认使用的是1022，这里需要输入WiFi密码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xuepengdeMBP:~ geekspeng$ ssh root@hiwifi.com -p 1022</span><br><span class=\"line\">root@hiwifi.com&apos;s password:</span><br></pre></td></tr></table></figure>\n<p>登录成功后会显示下面的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BusyBox v1.22.1 (2017-08-10 17:53:48 CST) built-in shell (ash)</span><br><span class=\"line\">Enter &apos;help&apos; for a list of built-in commands.</span><br><span class=\"line\"></span><br><span class=\"line\">***********************************************************</span><br><span class=\"line\">              __  __  _              _   ____  _   TM</span><br><span class=\"line\">             / / / / (_) _      __  (_) / __/ (_)</span><br><span class=\"line\">            / /_/ / / / | | /| / / / / / /_  / /</span><br><span class=\"line\">           / __  / / /  | |/ |/ / / / / __/ / /</span><br><span class=\"line\">          /_/ /_/ /_/   |__/|__/ /_/ /_/   /_/</span><br><span class=\"line\">                  http://www.hiwifi.com/</span><br><span class=\"line\">***********************************************************</span><br><span class=\"line\">root@Hiwifi:~#</span><br></pre></td></tr></table></figure>\n<p>最后安装Shadowsocks客户端</p>\n<p><strong>1.新版hiwifi</strong> =&gt; 使用项目根目录下的 shadow.sh 脚本进行安装, 建议使用以下一键命令:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp &amp;&amp; curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh &amp;&amp; sh shadow.sh &amp;&amp; rm shadow.sh</span><br></pre></td></tr></table></figure>\n<p><strong>2.hiwifi 1.2.5.15805s</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /tmp &amp;&amp; curl -k -o shadow.sh https://raw.githubusercontent.com/qiwihui/hiwifi-ss/master/shadow.sh &amp;&amp; sh shadow.sh 12515805s &amp;&amp; rm shadow.sh</span><br></pre></td></tr></table></figure>\n<h1 id=\"Shadowsocks账号设置\"><a href=\"#Shadowsocks账号设置\" class=\"headerlink\" title=\"Shadowsocks账号设置\"></a>Shadowsocks账号设置</h1><p>在浏览器中登录极路由后台，完成配置后，点击开关开启即可，如果一切正常，下方状态会显示连接正常<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132641329660.jpg\" alt=\"\"></p>"},{"title":"通过 nrm 自由切换 npm 源","date":"2017-08-31T16:00:00.000Z","updated":"2017-08-31T16:00:00.000Z","_content":"\nnrm可以快速地切换不同的npm registries，包括：npm，cnpm，taobao，nj（nodejitsu），rednpm\n\n## 安装\n\n```\n$ npm install -g nrm\n```\n<!-- more -->\n\n## 例子\n\n### - nrm ls\n星号表示当前使用的 registry\n\n```\n$ nrm ls\n\n* npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n\n### - nrm use\n\n```\n$ nrm use cnpm  //switch registry to cnpm\n \n    Registry has been set to: http://r.cnpmjs.org/\n```\n\n## 用法\n\n\n```\nUsage: nrm [options] [command]\n \n  Commands:\n \n    ls                           List all the registries\n    use <registry>               Change registry to registry\n    add <registry> <url> [home]  Add one custom registry\n    del <registry>               Delete one custom registry\n    home <registry> [browser]    Open the homepage of registry with optional browser\n    test [registry]              Show the response time for one or all registries\n    help                         Print this help\n \n  Options:\n \n    -h, --help     output usage information\n    -V, --version  output the version number\n```\n\n## npm registries\n* npm\n* cnpm\n* nodejitsu\n* taobao\n* rednpm\n\n## 注意\n当您使用其他registry时，不能使用publish命令\n\n \n\n\n\n","source":"_posts/通过 nrm 自由切换 npm 源.md","raw":"---\ntitle: 通过 nrm 自由切换 npm 源\ndate: 2017-09-01\nupdated: 2017-09-01\ntags: [node,nrm]\ncategories: [node]\n---\n\nnrm可以快速地切换不同的npm registries，包括：npm，cnpm，taobao，nj（nodejitsu），rednpm\n\n## 安装\n\n```\n$ npm install -g nrm\n```\n<!-- more -->\n\n## 例子\n\n### - nrm ls\n星号表示当前使用的 registry\n\n```\n$ nrm ls\n\n* npm ---- https://registry.npmjs.org/\n  cnpm --- http://r.cnpmjs.org/\n  taobao - https://registry.npm.taobao.org/\n  nj ----- https://registry.nodejitsu.com/\n  rednpm - http://registry.mirror.cqupt.edu.cn/\n  npmMirror  https://skimdb.npmjs.com/registry/\n  edunpm - http://registry.enpmjs.org/\n```\n\n### - nrm use\n\n```\n$ nrm use cnpm  //switch registry to cnpm\n \n    Registry has been set to: http://r.cnpmjs.org/\n```\n\n## 用法\n\n\n```\nUsage: nrm [options] [command]\n \n  Commands:\n \n    ls                           List all the registries\n    use <registry>               Change registry to registry\n    add <registry> <url> [home]  Add one custom registry\n    del <registry>               Delete one custom registry\n    home <registry> [browser]    Open the homepage of registry with optional browser\n    test [registry]              Show the response time for one or all registries\n    help                         Print this help\n \n  Options:\n \n    -h, --help     output usage information\n    -V, --version  output the version number\n```\n\n## npm registries\n* npm\n* cnpm\n* nodejitsu\n* taobao\n* rednpm\n\n## 注意\n当您使用其他registry时，不能使用publish命令\n\n \n\n\n\n","slug":"通过 nrm 自由切换 npm 源","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yarq000ruw0mb42wgwdf","content":"<p>nrm可以快速地切换不同的npm registries，包括：npm，cnpm，taobao，nj（nodejitsu），rednpm</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g nrm</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><h3 id=\"nrm-ls\"><a href=\"#nrm-ls\" class=\"headerlink\" title=\"- nrm ls\"></a>- nrm ls</h3><p>星号表示当前使用的 registry</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nrm ls</span><br><span class=\"line\"></span><br><span class=\"line\">* npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure>\n<h3 id=\"nrm-use\"><a href=\"#nrm-use\" class=\"headerlink\" title=\"- nrm use\"></a>- nrm use</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nrm use cnpm  //switch registry to cnpm</span><br><span class=\"line\"> </span><br><span class=\"line\">    Registry has been set to: http://r.cnpmjs.org/</span><br></pre></td></tr></table></figure>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: nrm [options] [command]</span><br><span class=\"line\"> </span><br><span class=\"line\">  Commands:</span><br><span class=\"line\"> </span><br><span class=\"line\">    ls                           List all the registries</span><br><span class=\"line\">    use &lt;registry&gt;               Change registry to registry</span><br><span class=\"line\">    add &lt;registry&gt; &lt;url&gt; [home]  Add one custom registry</span><br><span class=\"line\">    del &lt;registry&gt;               Delete one custom registry</span><br><span class=\"line\">    home &lt;registry&gt; [browser]    Open the homepage of registry with optional browser</span><br><span class=\"line\">    test [registry]              Show the response time for one or all registries</span><br><span class=\"line\">    help                         Print this help</span><br><span class=\"line\"> </span><br><span class=\"line\">  Options:</span><br><span class=\"line\"> </span><br><span class=\"line\">    -h, --help     output usage information</span><br><span class=\"line\">    -V, --version  output the version number</span><br></pre></td></tr></table></figure>\n<h2 id=\"npm-registries\"><a href=\"#npm-registries\" class=\"headerlink\" title=\"npm registries\"></a>npm registries</h2><ul>\n<li>npm</li>\n<li>cnpm</li>\n<li>nodejitsu</li>\n<li>taobao</li>\n<li>rednpm</li>\n</ul>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>当您使用其他registry时，不能使用publish命令</p>\n","site":{"data":{}},"excerpt":"<p>nrm可以快速地切换不同的npm registries，包括：npm，cnpm，taobao，nj（nodejitsu），rednpm</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g nrm</span><br></pre></td></tr></table></figure>","more":"<h2 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h2><h3 id=\"nrm-ls\"><a href=\"#nrm-ls\" class=\"headerlink\" title=\"- nrm ls\"></a>- nrm ls</h3><p>星号表示当前使用的 registry</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nrm ls</span><br><span class=\"line\"></span><br><span class=\"line\">* npm ---- https://registry.npmjs.org/</span><br><span class=\"line\">  cnpm --- http://r.cnpmjs.org/</span><br><span class=\"line\">  taobao - https://registry.npm.taobao.org/</span><br><span class=\"line\">  nj ----- https://registry.nodejitsu.com/</span><br><span class=\"line\">  rednpm - http://registry.mirror.cqupt.edu.cn/</span><br><span class=\"line\">  npmMirror  https://skimdb.npmjs.com/registry/</span><br><span class=\"line\">  edunpm - http://registry.enpmjs.org/</span><br></pre></td></tr></table></figure>\n<h3 id=\"nrm-use\"><a href=\"#nrm-use\" class=\"headerlink\" title=\"- nrm use\"></a>- nrm use</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ nrm use cnpm  //switch registry to cnpm</span><br><span class=\"line\"> </span><br><span class=\"line\">    Registry has been set to: http://r.cnpmjs.org/</span><br></pre></td></tr></table></figure>\n<h2 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: nrm [options] [command]</span><br><span class=\"line\"> </span><br><span class=\"line\">  Commands:</span><br><span class=\"line\"> </span><br><span class=\"line\">    ls                           List all the registries</span><br><span class=\"line\">    use &lt;registry&gt;               Change registry to registry</span><br><span class=\"line\">    add &lt;registry&gt; &lt;url&gt; [home]  Add one custom registry</span><br><span class=\"line\">    del &lt;registry&gt;               Delete one custom registry</span><br><span class=\"line\">    home &lt;registry&gt; [browser]    Open the homepage of registry with optional browser</span><br><span class=\"line\">    test [registry]              Show the response time for one or all registries</span><br><span class=\"line\">    help                         Print this help</span><br><span class=\"line\"> </span><br><span class=\"line\">  Options:</span><br><span class=\"line\"> </span><br><span class=\"line\">    -h, --help     output usage information</span><br><span class=\"line\">    -V, --version  output the version number</span><br></pre></td></tr></table></figure>\n<h2 id=\"npm-registries\"><a href=\"#npm-registries\" class=\"headerlink\" title=\"npm registries\"></a>npm registries</h2><ul>\n<li>npm</li>\n<li>cnpm</li>\n<li>nodejitsu</li>\n<li>taobao</li>\n<li>rednpm</li>\n</ul>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>当您使用其他registry时，不能使用publish命令</p>"},{"title":"科学上网（一）：在 AWS 云服务器上搭建 Shadowsocks","date":"2017-12-13T16:00:00.000Z","updated":"2017-12-13T16:00:00.000Z","_content":"身为程序员平时遇到问题当然需要上网查找资料，普通人首先想到的肯定是百度，但是百度上面给的答案良莠不齐质量不高，这个时候就要借助Goolge，但是由于某些我们都懂的原因在国内我们却访问不了Goolge，这时候我就需要自备梯子。网上虽然有很多免费的服务器可以使用，但是通常质量不会很高，极不稳定，速度也非常慢，所谓一分钱一分货，想不花钱就能用上优质的服务，几乎是不可能。[xhay1122](http://bwg.xhay1122.com/)在他的博客中分享了自己利用廉价的vps搭建的shadowsocks服务器，质量还是不错的比较稳定，但是毕竟是分享给大家用的而且流量有限不敢敞开用，所以最后我选择自己动手，丰衣足食，利用AWS 云服务器搭建Shadowsocks服务器。\n<!-- more -->\n\n\n# Shadowsocks 原理\n\n![](http://p15d1hccg.bkt.clouddn.com/15132555841950.png)\n\nShadowsocks(ss) 是由 Clowwindy 开发的一款软件，其作用本来是加密传输资料。当然，也正因为它加密传输资料的特性，使得 GFW 没法将由它传输的资料和其他普通资料区分开来（上图），也就不能干扰我们访问那些「不存在」的网站了。\n\n# 创建 AWS 云服务器\n先去亚马逊AWS上面注册一个账号：https://amazonaws-china.com/cn/， 只要有信用卡可以免费使用一年AWS的部分服务\n\n## 注册AWS\n1. 点击注册进入注册页面\n![](http://p15d1hccg.bkt.clouddn.com/15132560890311.png)\n\n2. 填写邮件地址，密码，账户名称\n![](http://p15d1hccg.bkt.clouddn.com/15132563312499.png)\n\n3. 这里选择个人就好了，然后填写个人信息\n![](http://p15d1hccg.bkt.clouddn.com/15132568272500.png)\n\n4. 填写信用卡信息\n![](http://p15d1hccg.bkt.clouddn.com/15136977189629.png)\n绑定完信用卡之后，信用卡会扣取1美元的费用，网上看的教程说后面会退还.\n\n5. 电话验证\n填写完信息后让系统拨打你的电话，然后页面上会显示出一个PIN码，在电话上输入即可\n\n\n## 创建 AWS 实例\n1. 点击右上角切换服务器机房，建议选择亚太地区的服务器，因为亚太地区的服务器相对于北美的服务器延迟要低一些，这里我选择 **东京**\n![](http://p15d1hccg.bkt.clouddn.com/15136024142885.png)\n\n2. 点击左上角的服务选择 **EC2**\n![](http://p15d1hccg.bkt.clouddn.com/15136026702644.png)\n\n3. 点击 **启动实例**\n![](http://p15d1hccg.bkt.clouddn.com/15136027931278.png)\n\n4. 在 **AWS Marketplace** 搜索 **centos6** ,然后点击 **选择**\n![](http://p15d1hccg.bkt.clouddn.com/15136029683293.png)\n\n5. 点击 **continue**\n![](http://p15d1hccg.bkt.clouddn.com/15136030558122.png)\n\n6. 这里我们就直接选用免费的就可以了，然后点击 **下一步**\n![](http://p15d1hccg.bkt.clouddn.com/15136032510119.png)\n\n7. 后面我们都使用默认配置，都直接点击下一步，直到 **配置安全组** 的时候，我们将类型改成 **所有流量**，然后点击 **审核和启动**\n![](http://p15d1hccg.bkt.clouddn.com/15136034503025.png)\n\n8. 点击右下角的 **启动** 会弹出一个密钥窗口选择 **创建新密钥对** ，接着填写密钥名称，点击 **下载密钥** ，最后点击 **启动实例**\n![](http://p15d1hccg.bkt.clouddn.com/15136042148471.png)\n\n9. 接着初始化主机，初始化完成后出现下面的这个界面，点击右下角的 **查看实例**\n![](http://p15d1hccg.bkt.clouddn.com/15136045186657.png)\n\n## 连接 AWS 实例\n1. 点击 **连接**\n![](http://p15d1hccg.bkt.clouddn.com/15136047734339.png)\n\n2. 按照提示我们直接通过ssh连接，首先打开SSH客户端，我用的MAC自带SSH，所以直接打开终端（Windows可以根据提示使用PuTTY连接），并将路径切换到之前保存密钥的路径下，然后根据提示修改密钥的权限，最后复制下面的示例并将root改为centos（我们安装的centos系统的用户名是centos）\n![](http://p15d1hccg.bkt.clouddn.com/15136451779598.png)\n\n```\nLast login: Tue Dec 19 09:01:19 on ttys002\nxuepengdeMacBook-Pro:~ geekspeng$ cd Downloads/\nxuepengdeMacBook-Pro:Downloads geekspeng$ ls\nshadowsock.pem\nxuepengdeMacBook-Pro:Downloads geekspeng$ chmod 400 shadowsock.pem\nxuepengdeMacBook-Pro:Downloads geekspeng$ ssh -i \"shadowsock.pem\" centos@ec2-13-115-236-100.ap-northeast-1.compute.amazonaws.com\n[centos@ip-172-31-22-183 ~]$\n```\n\n# 部署 Shadowsocks\nShadowsocks 需要同时具备客户端和服务器端，所以它的部署也需要分两步\n\n##  部署 Shadowsocks 服务器\n这里使用 teddysun 的一键安装脚本。\n\n可使用 sudo passwd root 先修改root密码，然后切换到root用户\n\n```\n[centos@ip-172-31-22-183 ~]$ sudo passwd root\nChanging password for user root.\nNew password:\nRetype new password:\npasswd: all authentication tokens updated successfully.\n[centos@ip-172-31-22-183 ~]$ su root\nPassword:\n[root@ip-172-31-22-183 centos]#\n```\n这里需要安装 wget，后面需要用到，需要确认的地方都输入y就可以了\n\n```\n[root@ip-172-31-22-183 centos]# yum install wget\n```\n\n然后执行以下是3条命令，每次输入一行、回车，等待屏幕上的操作完成后再输入下一条。\n\n```\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh\nchmod +x shadowsocks.sh\n./shadowsocks.sh 2>&1 | tee shadowsocks.log\n```\n\n上面最后一步输完，按照提示输入进行设置，设置完过后按任意键开始部署 Shadowsocks。这时你什么都不用做，只需要静静地等它运行完就好。结束后就会看到你所部署的 Shadowsocks 的配置信息。\n\n```\nCongratulations, Shadowsocks-python server install completed!\nYour Server IP        :  13.115.236.100\nYour Server Port      :  8989\nYour Password         :  ********\nYour Encryption Method:  aes-256-cfb\n\nWelcome to visit:https://teddysun.com/342.html\nEnjoy it!\n```\n\n复制服务器 IP、服务器端口、你设的密码和加密方式。你就可以在自己任意的设备上进行登录使用了。\n\n## 安装 Shadowsocks 客户端\n\n根据操作系统下载相应的客户端。\n[Mac 版客户端下载](https://github.com/shadowsocks/shadowsocks-iOS/releases)\n[Win 版客户端下载](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n**打开客户端，在「服务器设定」里新增服务器。然后依次填入服务器 IP、服务器端口、你设的密码和加密方式。**\n\nMac 版客户端\n![](http://p15d1hccg.bkt.clouddn.com/15132596983585.png)\n\nWin 版客户端\n![](http://p15d1hccg.bkt.clouddn.com/15132591141053.png)\n\n**然后启用代理，就可以实现科学上网了**\n\nMac 版客户端，点击打开Shadowsocks\n![](http://p15d1hccg.bkt.clouddn.com/15132597970585.png)\n\nWin 版客户端，点击”启用系统代理”，选择PAC模式，在PAC中选择从xxx更新本地PAC\n![](http://p15d1hccg.bkt.clouddn.com/15132598862289.png)\n\n\n## 提升Shadowsocks服务器速度\n实际上你已经可以在自己的任意设备上进行使用了。但是为了更好的连接速度，你还需要多做几步。\n\n### TCP Fast Open\n\n**编辑 /etc/rc.local 文件，按照下面的步骤操作**\n\n1） 首先打开rc.local文件\n\n```\nvi /etc/rc.local\n```\n2） 然后按 **i键** 进入编辑模式，通过 ↑  ↓ ← →按键移动光标，在最后增加如下内容：echo 3 > /proc/sys/net/ipv4/tcp_fastopen\n\n```\n#!/bin/sh\n#\n# This script will be executed *after* all the other init scripts.\n# You can put your own initialization stuff in here if you don't\n# want to do the full Sys V style init stuff.\n\ntouch /var/lock/subsys/local\n\n# set a random pass on first boot\nif [ -f /root/firstrun ]; then\n  dd if=/dev/urandom count=50|md5sum|passwd --stdin root\n  passwd -l root\n  rm /root/firstrun\nfi\n\nif [ ! -d /root/.ssh ]; then\n  mkdir -m 0700 -p /root/.ssh\n  restorecon /root/.ssh\nfi\necho 3 > /proc/sys/net/ipv4/tcp_fastopen\n~\n~\n~\n~\n\n```\n\n3）编辑完过后首先按**ESC键**，再输入**:wq**即可以保存退出了\n\n**然后按照同样的方法修改 /etc/sysctl.conf，在最后增加如下内容：**\n\n```\nnet.ipv4.tcp_fastopen = 3\n```\n\n**再打开一个 Shadowsocks 配置文件，编辑 /etc/shadowsocks.json，把其中 \"fast_open\" 一项的 false 替换成 true 修改如下：**\n\n```\n\"fast_open\":true\n```\n\n**最后，输入以下命令重启 Shadowsocks：**\n\n```\n/etc/init.d/shadowsocks restart\n```\n\n### 开启锐速\n[锐速 ServerSpeeder](https://github.com/91yun/serverspeeder) 是一个 TCP 加速软件，对 Shadowsocks 客户端和服务器端间的传输速度有显著提升。\n\n不同于 FinalSpeed 或 Kcptun 等需要客户端的工具，「锐速」的一大优势是只需要在服务器端单边部署就行了。另外，「锐速」虽然已经停止注册和安装了，不过网上还是有不少「破解版」可用\n\n**锐速破解版一键安装：**\n\n```\nwget -N --no-check-certificate https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh && bash serverspeeder.sh\n```\n\n安装上面官网的的安装步骤执行一键安装脚本会出现如下的错误信息：\n\n```\n前面的省略...\n===============System Info=======================\nCentOS\n2.6.32-696.1.1.el6.x86_64\nx64\n=================================================\n\n\n--2017-12-19 14:14:49--  https://raw.githubusercontent.com/91yun/serverspeeder/test/serverspeederbin.txt\nResolving raw.githubusercontent.com... 151.101.72.133\nConnecting to raw.githubusercontent.com|151.101.72.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 96179 (94K) [text/plain]\nSaving to: “serverspeederbin.txt”\n\n100%[======================================>] 96,179      --.-K/s   in 0.006s\n\n2017-12-19 14:14:49 (16.5 MB/s) - “serverspeederbin.txt” saved [96179/96179]\n\n>>>This kernel is not supported. Trying fuzzy matching...\n\n\n\n\nServerspeeder is not supported on this kernel! View all supported systems and kernels here: https://www.91yun.org/serverspeeder91yun\n\n```\n\n**监测VPS架构**\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/91yun/code/master/vm_check.sh && bash vm_check.sh\n```\n如果是kvm还是xen或者vmare则可以装锐速，如果是Openvz，则不可装锐速\n\n**改核适配锐速**\n\nCentOS 6支持安装锐速的内核：2.6.32–504.3.3.el6.x86_64\n\n```\nuname -r #查看当前内核版本\nrpm -ivh http://xz.wn789.com/CentOSkernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm\nrpm -ivh http://xz.wn789.com/CentOSkernel/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force\nrpm -qa | grep kernel #查看是否安装成功\nreboot #重启VPS\nuname -r #当前使用内核版本\n```\n\n**部署锐速**\n依然使用一键安装脚本，输入以下命令：\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh && bash serverspeeder-all.sh\n```\n安装需要一段时间，等待一会。成功界面如下，看到license信息过期时间为”2034-12-31”就没问题了。\n\n```\n[Running Status]\nServerSpeeder is running!\nversion              3.10.61.0\n\n[License Information]\nLicense              763D1329B3D1824A (valid on current device)\nMaxSession           unlimited\nMaxTcpAccSession     unlimited\nMaxBandwidth(kbps)   unlimited\nExpireDate           2034-12-31\n\n[Connection Information]\nTotalFlow            1\nNumOfTcpFlows        1\nTotalAccTcpFlow      0\nTotalActiveTcpFlow   0\n\n[Running Configuration]\naccif                eth0\nacc                  1\nadvacc               1\nadvinacc             1\nwankbps              10000000\nwaninkbps            10000000\ncsvmode              0\nsubnetAcc            0\nmaxmode              1\npcapEnable           0\n```\n\n至此，整个搭建过程就大功告成了！接下来，尽情地享受起飞的速度吧😄\n\n","source":"_posts/科学上网（一）：在 AWS 云服务器上搭建 Shadowsocks.md","raw":"---\ntitle: 科学上网（一）：在 AWS 云服务器上搭建 Shadowsocks\ndate: 2017-12-14\nupdated: 2017-12-14\ntags: [科学上网,Shadowsocks,AWS云服务器]\ncategories: [科学上网]\n---\n身为程序员平时遇到问题当然需要上网查找资料，普通人首先想到的肯定是百度，但是百度上面给的答案良莠不齐质量不高，这个时候就要借助Goolge，但是由于某些我们都懂的原因在国内我们却访问不了Goolge，这时候我就需要自备梯子。网上虽然有很多免费的服务器可以使用，但是通常质量不会很高，极不稳定，速度也非常慢，所谓一分钱一分货，想不花钱就能用上优质的服务，几乎是不可能。[xhay1122](http://bwg.xhay1122.com/)在他的博客中分享了自己利用廉价的vps搭建的shadowsocks服务器，质量还是不错的比较稳定，但是毕竟是分享给大家用的而且流量有限不敢敞开用，所以最后我选择自己动手，丰衣足食，利用AWS 云服务器搭建Shadowsocks服务器。\n<!-- more -->\n\n\n# Shadowsocks 原理\n\n![](http://p15d1hccg.bkt.clouddn.com/15132555841950.png)\n\nShadowsocks(ss) 是由 Clowwindy 开发的一款软件，其作用本来是加密传输资料。当然，也正因为它加密传输资料的特性，使得 GFW 没法将由它传输的资料和其他普通资料区分开来（上图），也就不能干扰我们访问那些「不存在」的网站了。\n\n# 创建 AWS 云服务器\n先去亚马逊AWS上面注册一个账号：https://amazonaws-china.com/cn/， 只要有信用卡可以免费使用一年AWS的部分服务\n\n## 注册AWS\n1. 点击注册进入注册页面\n![](http://p15d1hccg.bkt.clouddn.com/15132560890311.png)\n\n2. 填写邮件地址，密码，账户名称\n![](http://p15d1hccg.bkt.clouddn.com/15132563312499.png)\n\n3. 这里选择个人就好了，然后填写个人信息\n![](http://p15d1hccg.bkt.clouddn.com/15132568272500.png)\n\n4. 填写信用卡信息\n![](http://p15d1hccg.bkt.clouddn.com/15136977189629.png)\n绑定完信用卡之后，信用卡会扣取1美元的费用，网上看的教程说后面会退还.\n\n5. 电话验证\n填写完信息后让系统拨打你的电话，然后页面上会显示出一个PIN码，在电话上输入即可\n\n\n## 创建 AWS 实例\n1. 点击右上角切换服务器机房，建议选择亚太地区的服务器，因为亚太地区的服务器相对于北美的服务器延迟要低一些，这里我选择 **东京**\n![](http://p15d1hccg.bkt.clouddn.com/15136024142885.png)\n\n2. 点击左上角的服务选择 **EC2**\n![](http://p15d1hccg.bkt.clouddn.com/15136026702644.png)\n\n3. 点击 **启动实例**\n![](http://p15d1hccg.bkt.clouddn.com/15136027931278.png)\n\n4. 在 **AWS Marketplace** 搜索 **centos6** ,然后点击 **选择**\n![](http://p15d1hccg.bkt.clouddn.com/15136029683293.png)\n\n5. 点击 **continue**\n![](http://p15d1hccg.bkt.clouddn.com/15136030558122.png)\n\n6. 这里我们就直接选用免费的就可以了，然后点击 **下一步**\n![](http://p15d1hccg.bkt.clouddn.com/15136032510119.png)\n\n7. 后面我们都使用默认配置，都直接点击下一步，直到 **配置安全组** 的时候，我们将类型改成 **所有流量**，然后点击 **审核和启动**\n![](http://p15d1hccg.bkt.clouddn.com/15136034503025.png)\n\n8. 点击右下角的 **启动** 会弹出一个密钥窗口选择 **创建新密钥对** ，接着填写密钥名称，点击 **下载密钥** ，最后点击 **启动实例**\n![](http://p15d1hccg.bkt.clouddn.com/15136042148471.png)\n\n9. 接着初始化主机，初始化完成后出现下面的这个界面，点击右下角的 **查看实例**\n![](http://p15d1hccg.bkt.clouddn.com/15136045186657.png)\n\n## 连接 AWS 实例\n1. 点击 **连接**\n![](http://p15d1hccg.bkt.clouddn.com/15136047734339.png)\n\n2. 按照提示我们直接通过ssh连接，首先打开SSH客户端，我用的MAC自带SSH，所以直接打开终端（Windows可以根据提示使用PuTTY连接），并将路径切换到之前保存密钥的路径下，然后根据提示修改密钥的权限，最后复制下面的示例并将root改为centos（我们安装的centos系统的用户名是centos）\n![](http://p15d1hccg.bkt.clouddn.com/15136451779598.png)\n\n```\nLast login: Tue Dec 19 09:01:19 on ttys002\nxuepengdeMacBook-Pro:~ geekspeng$ cd Downloads/\nxuepengdeMacBook-Pro:Downloads geekspeng$ ls\nshadowsock.pem\nxuepengdeMacBook-Pro:Downloads geekspeng$ chmod 400 shadowsock.pem\nxuepengdeMacBook-Pro:Downloads geekspeng$ ssh -i \"shadowsock.pem\" centos@ec2-13-115-236-100.ap-northeast-1.compute.amazonaws.com\n[centos@ip-172-31-22-183 ~]$\n```\n\n# 部署 Shadowsocks\nShadowsocks 需要同时具备客户端和服务器端，所以它的部署也需要分两步\n\n##  部署 Shadowsocks 服务器\n这里使用 teddysun 的一键安装脚本。\n\n可使用 sudo passwd root 先修改root密码，然后切换到root用户\n\n```\n[centos@ip-172-31-22-183 ~]$ sudo passwd root\nChanging password for user root.\nNew password:\nRetype new password:\npasswd: all authentication tokens updated successfully.\n[centos@ip-172-31-22-183 ~]$ su root\nPassword:\n[root@ip-172-31-22-183 centos]#\n```\n这里需要安装 wget，后面需要用到，需要确认的地方都输入y就可以了\n\n```\n[root@ip-172-31-22-183 centos]# yum install wget\n```\n\n然后执行以下是3条命令，每次输入一行、回车，等待屏幕上的操作完成后再输入下一条。\n\n```\nwget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh\nchmod +x shadowsocks.sh\n./shadowsocks.sh 2>&1 | tee shadowsocks.log\n```\n\n上面最后一步输完，按照提示输入进行设置，设置完过后按任意键开始部署 Shadowsocks。这时你什么都不用做，只需要静静地等它运行完就好。结束后就会看到你所部署的 Shadowsocks 的配置信息。\n\n```\nCongratulations, Shadowsocks-python server install completed!\nYour Server IP        :  13.115.236.100\nYour Server Port      :  8989\nYour Password         :  ********\nYour Encryption Method:  aes-256-cfb\n\nWelcome to visit:https://teddysun.com/342.html\nEnjoy it!\n```\n\n复制服务器 IP、服务器端口、你设的密码和加密方式。你就可以在自己任意的设备上进行登录使用了。\n\n## 安装 Shadowsocks 客户端\n\n根据操作系统下载相应的客户端。\n[Mac 版客户端下载](https://github.com/shadowsocks/shadowsocks-iOS/releases)\n[Win 版客户端下载](https://github.com/shadowsocks/shadowsocks-windows/releases)\n\n**打开客户端，在「服务器设定」里新增服务器。然后依次填入服务器 IP、服务器端口、你设的密码和加密方式。**\n\nMac 版客户端\n![](http://p15d1hccg.bkt.clouddn.com/15132596983585.png)\n\nWin 版客户端\n![](http://p15d1hccg.bkt.clouddn.com/15132591141053.png)\n\n**然后启用代理，就可以实现科学上网了**\n\nMac 版客户端，点击打开Shadowsocks\n![](http://p15d1hccg.bkt.clouddn.com/15132597970585.png)\n\nWin 版客户端，点击”启用系统代理”，选择PAC模式，在PAC中选择从xxx更新本地PAC\n![](http://p15d1hccg.bkt.clouddn.com/15132598862289.png)\n\n\n## 提升Shadowsocks服务器速度\n实际上你已经可以在自己的任意设备上进行使用了。但是为了更好的连接速度，你还需要多做几步。\n\n### TCP Fast Open\n\n**编辑 /etc/rc.local 文件，按照下面的步骤操作**\n\n1） 首先打开rc.local文件\n\n```\nvi /etc/rc.local\n```\n2） 然后按 **i键** 进入编辑模式，通过 ↑  ↓ ← →按键移动光标，在最后增加如下内容：echo 3 > /proc/sys/net/ipv4/tcp_fastopen\n\n```\n#!/bin/sh\n#\n# This script will be executed *after* all the other init scripts.\n# You can put your own initialization stuff in here if you don't\n# want to do the full Sys V style init stuff.\n\ntouch /var/lock/subsys/local\n\n# set a random pass on first boot\nif [ -f /root/firstrun ]; then\n  dd if=/dev/urandom count=50|md5sum|passwd --stdin root\n  passwd -l root\n  rm /root/firstrun\nfi\n\nif [ ! -d /root/.ssh ]; then\n  mkdir -m 0700 -p /root/.ssh\n  restorecon /root/.ssh\nfi\necho 3 > /proc/sys/net/ipv4/tcp_fastopen\n~\n~\n~\n~\n\n```\n\n3）编辑完过后首先按**ESC键**，再输入**:wq**即可以保存退出了\n\n**然后按照同样的方法修改 /etc/sysctl.conf，在最后增加如下内容：**\n\n```\nnet.ipv4.tcp_fastopen = 3\n```\n\n**再打开一个 Shadowsocks 配置文件，编辑 /etc/shadowsocks.json，把其中 \"fast_open\" 一项的 false 替换成 true 修改如下：**\n\n```\n\"fast_open\":true\n```\n\n**最后，输入以下命令重启 Shadowsocks：**\n\n```\n/etc/init.d/shadowsocks restart\n```\n\n### 开启锐速\n[锐速 ServerSpeeder](https://github.com/91yun/serverspeeder) 是一个 TCP 加速软件，对 Shadowsocks 客户端和服务器端间的传输速度有显著提升。\n\n不同于 FinalSpeed 或 Kcptun 等需要客户端的工具，「锐速」的一大优势是只需要在服务器端单边部署就行了。另外，「锐速」虽然已经停止注册和安装了，不过网上还是有不少「破解版」可用\n\n**锐速破解版一键安装：**\n\n```\nwget -N --no-check-certificate https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh && bash serverspeeder.sh\n```\n\n安装上面官网的的安装步骤执行一键安装脚本会出现如下的错误信息：\n\n```\n前面的省略...\n===============System Info=======================\nCentOS\n2.6.32-696.1.1.el6.x86_64\nx64\n=================================================\n\n\n--2017-12-19 14:14:49--  https://raw.githubusercontent.com/91yun/serverspeeder/test/serverspeederbin.txt\nResolving raw.githubusercontent.com... 151.101.72.133\nConnecting to raw.githubusercontent.com|151.101.72.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 96179 (94K) [text/plain]\nSaving to: “serverspeederbin.txt”\n\n100%[======================================>] 96,179      --.-K/s   in 0.006s\n\n2017-12-19 14:14:49 (16.5 MB/s) - “serverspeederbin.txt” saved [96179/96179]\n\n>>>This kernel is not supported. Trying fuzzy matching...\n\n\n\n\nServerspeeder is not supported on this kernel! View all supported systems and kernels here: https://www.91yun.org/serverspeeder91yun\n\n```\n\n**监测VPS架构**\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/91yun/code/master/vm_check.sh && bash vm_check.sh\n```\n如果是kvm还是xen或者vmare则可以装锐速，如果是Openvz，则不可装锐速\n\n**改核适配锐速**\n\nCentOS 6支持安装锐速的内核：2.6.32–504.3.3.el6.x86_64\n\n```\nuname -r #查看当前内核版本\nrpm -ivh http://xz.wn789.com/CentOSkernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm\nrpm -ivh http://xz.wn789.com/CentOSkernel/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force\nrpm -qa | grep kernel #查看是否安装成功\nreboot #重启VPS\nuname -r #当前使用内核版本\n```\n\n**部署锐速**\n依然使用一键安装脚本，输入以下命令：\n\n```\nwget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh && bash serverspeeder-all.sh\n```\n安装需要一段时间，等待一会。成功界面如下，看到license信息过期时间为”2034-12-31”就没问题了。\n\n```\n[Running Status]\nServerSpeeder is running!\nversion              3.10.61.0\n\n[License Information]\nLicense              763D1329B3D1824A (valid on current device)\nMaxSession           unlimited\nMaxTcpAccSession     unlimited\nMaxBandwidth(kbps)   unlimited\nExpireDate           2034-12-31\n\n[Connection Information]\nTotalFlow            1\nNumOfTcpFlows        1\nTotalAccTcpFlow      0\nTotalActiveTcpFlow   0\n\n[Running Configuration]\naccif                eth0\nacc                  1\nadvacc               1\nadvinacc             1\nwankbps              10000000\nwaninkbps            10000000\ncsvmode              0\nsubnetAcc            0\nmaxmode              1\npcapEnable           0\n```\n\n至此，整个搭建过程就大功告成了！接下来，尽情地享受起飞的速度吧😄\n\n","slug":"科学上网（一）：在 AWS 云服务器上搭建 Shadowsocks","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjcj8yars000wuw0mzpc5jom4","content":"<p>身为程序员平时遇到问题当然需要上网查找资料，普通人首先想到的肯定是百度，但是百度上面给的答案良莠不齐质量不高，这个时候就要借助Goolge，但是由于某些我们都懂的原因在国内我们却访问不了Goolge，这时候我就需要自备梯子。网上虽然有很多免费的服务器可以使用，但是通常质量不会很高，极不稳定，速度也非常慢，所谓一分钱一分货，想不花钱就能用上优质的服务，几乎是不可能。<a href=\"http://bwg.xhay1122.com/\" target=\"_blank\" rel=\"noopener\">xhay1122</a>在他的博客中分享了自己利用廉价的vps搭建的shadowsocks服务器，质量还是不错的比较稳定，但是毕竟是分享给大家用的而且流量有限不敢敞开用，所以最后我选择自己动手，丰衣足食，利用AWS 云服务器搭建Shadowsocks服务器。<br><a id=\"more\"></a></p>\n<h1 id=\"Shadowsocks-原理\"><a href=\"#Shadowsocks-原理\" class=\"headerlink\" title=\"Shadowsocks 原理\"></a>Shadowsocks 原理</h1><p><img src=\"http://p15d1hccg.bkt.clouddn.com/15132555841950.png\" alt=\"\"></p>\n<p>Shadowsocks(ss) 是由 Clowwindy 开发的一款软件，其作用本来是加密传输资料。当然，也正因为它加密传输资料的特性，使得 GFW 没法将由它传输的资料和其他普通资料区分开来（上图），也就不能干扰我们访问那些「不存在」的网站了。</p>\n<h1 id=\"创建-AWS-云服务器\"><a href=\"#创建-AWS-云服务器\" class=\"headerlink\" title=\"创建 AWS 云服务器\"></a>创建 AWS 云服务器</h1><p>先去亚马逊AWS上面注册一个账号：<a href=\"https://amazonaws-china.com/cn/，\" target=\"_blank\" rel=\"noopener\">https://amazonaws-china.com/cn/，</a> 只要有信用卡可以免费使用一年AWS的部分服务</p>\n<h2 id=\"注册AWS\"><a href=\"#注册AWS\" class=\"headerlink\" title=\"注册AWS\"></a>注册AWS</h2><ol>\n<li><p>点击注册进入注册页面<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132560890311.png\" alt=\"\"></p>\n</li>\n<li><p>填写邮件地址，密码，账户名称<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132563312499.png\" alt=\"\"></p>\n</li>\n<li><p>这里选择个人就好了，然后填写个人信息<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132568272500.png\" alt=\"\"></p>\n</li>\n<li><p>填写信用卡信息<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136977189629.png\" alt=\"\"><br>绑定完信用卡之后，信用卡会扣取1美元的费用，网上看的教程说后面会退还.</p>\n</li>\n<li><p>电话验证<br>填写完信息后让系统拨打你的电话，然后页面上会显示出一个PIN码，在电话上输入即可</p>\n</li>\n</ol>\n<h2 id=\"创建-AWS-实例\"><a href=\"#创建-AWS-实例\" class=\"headerlink\" title=\"创建 AWS 实例\"></a>创建 AWS 实例</h2><ol>\n<li><p>点击右上角切换服务器机房，建议选择亚太地区的服务器，因为亚太地区的服务器相对于北美的服务器延迟要低一些，这里我选择 <strong>东京</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136024142885.png\" alt=\"\"></p>\n</li>\n<li><p>点击左上角的服务选择 <strong>EC2</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136026702644.png\" alt=\"\"></p>\n</li>\n<li><p>点击 <strong>启动实例</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136027931278.png\" alt=\"\"></p>\n</li>\n<li><p>在 <strong>AWS Marketplace</strong> 搜索 <strong>centos6</strong> ,然后点击 <strong>选择</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136029683293.png\" alt=\"\"></p>\n</li>\n<li><p>点击 <strong>continue</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136030558122.png\" alt=\"\"></p>\n</li>\n<li><p>这里我们就直接选用免费的就可以了，然后点击 <strong>下一步</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136032510119.png\" alt=\"\"></p>\n</li>\n<li><p>后面我们都使用默认配置，都直接点击下一步，直到 <strong>配置安全组</strong> 的时候，我们将类型改成 <strong>所有流量</strong>，然后点击 <strong>审核和启动</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136034503025.png\" alt=\"\"></p>\n</li>\n<li><p>点击右下角的 <strong>启动</strong> 会弹出一个密钥窗口选择 <strong>创建新密钥对</strong> ，接着填写密钥名称，点击 <strong>下载密钥</strong> ，最后点击 <strong>启动实例</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136042148471.png\" alt=\"\"></p>\n</li>\n<li><p>接着初始化主机，初始化完成后出现下面的这个界面，点击右下角的 <strong>查看实例</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136045186657.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"连接-AWS-实例\"><a href=\"#连接-AWS-实例\" class=\"headerlink\" title=\"连接 AWS 实例\"></a>连接 AWS 实例</h2><ol>\n<li><p>点击 <strong>连接</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136047734339.png\" alt=\"\"></p>\n</li>\n<li><p>按照提示我们直接通过ssh连接，首先打开SSH客户端，我用的MAC自带SSH，所以直接打开终端（Windows可以根据提示使用PuTTY连接），并将路径切换到之前保存密钥的路径下，然后根据提示修改密钥的权限，最后复制下面的示例并将root改为centos（我们安装的centos系统的用户名是centos）<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136451779598.png\" alt=\"\"></p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Last login: Tue Dec 19 09:01:19 on ttys002</span><br><span class=\"line\">xuepengdeMacBook-Pro:~ geekspeng$ cd Downloads/</span><br><span class=\"line\">xuepengdeMacBook-Pro:Downloads geekspeng$ ls</span><br><span class=\"line\">shadowsock.pem</span><br><span class=\"line\">xuepengdeMacBook-Pro:Downloads geekspeng$ chmod 400 shadowsock.pem</span><br><span class=\"line\">xuepengdeMacBook-Pro:Downloads geekspeng$ ssh -i &quot;shadowsock.pem&quot; centos@ec2-13-115-236-100.ap-northeast-1.compute.amazonaws.com</span><br><span class=\"line\">[centos@ip-172-31-22-183 ~]$</span><br></pre></td></tr></table></figure>\n<h1 id=\"部署-Shadowsocks\"><a href=\"#部署-Shadowsocks\" class=\"headerlink\" title=\"部署 Shadowsocks\"></a>部署 Shadowsocks</h1><p>Shadowsocks 需要同时具备客户端和服务器端，所以它的部署也需要分两步</p>\n<h2 id=\"部署-Shadowsocks-服务器\"><a href=\"#部署-Shadowsocks-服务器\" class=\"headerlink\" title=\"部署 Shadowsocks 服务器\"></a>部署 Shadowsocks 服务器</h2><p>这里使用 teddysun 的一键安装脚本。</p>\n<p>可使用 sudo passwd root 先修改root密码，然后切换到root用户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[centos@ip-172-31-22-183 ~]$ sudo passwd root</span><br><span class=\"line\">Changing password for user root.</span><br><span class=\"line\">New password:</span><br><span class=\"line\">Retype new password:</span><br><span class=\"line\">passwd: all authentication tokens updated successfully.</span><br><span class=\"line\">[centos@ip-172-31-22-183 ~]$ su root</span><br><span class=\"line\">Password:</span><br><span class=\"line\">[root@ip-172-31-22-183 centos]#</span><br></pre></td></tr></table></figure>\n<p>这里需要安装 wget，后面需要用到，需要确认的地方都输入y就可以了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ip-172-31-22-183 centos]# yum install wget</span><br></pre></td></tr></table></figure>\n<p>然后执行以下是3条命令，每次输入一行、回车，等待屏幕上的操作完成后再输入下一条。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class=\"line\">chmod +x shadowsocks.sh</span><br><span class=\"line\">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure>\n<p>上面最后一步输完，按照提示输入进行设置，设置完过后按任意键开始部署 Shadowsocks。这时你什么都不用做，只需要静静地等它运行完就好。结束后就会看到你所部署的 Shadowsocks 的配置信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Congratulations, Shadowsocks-python server install completed!</span><br><span class=\"line\">Your Server IP        :  13.115.236.100</span><br><span class=\"line\">Your Server Port      :  8989</span><br><span class=\"line\">Your Password         :  ********</span><br><span class=\"line\">Your Encryption Method:  aes-256-cfb</span><br><span class=\"line\"></span><br><span class=\"line\">Welcome to visit:https://teddysun.com/342.html</span><br><span class=\"line\">Enjoy it!</span><br></pre></td></tr></table></figure>\n<p>复制服务器 IP、服务器端口、你设的密码和加密方式。你就可以在自己任意的设备上进行登录使用了。</p>\n<h2 id=\"安装-Shadowsocks-客户端\"><a href=\"#安装-Shadowsocks-客户端\" class=\"headerlink\" title=\"安装 Shadowsocks 客户端\"></a>安装 Shadowsocks 客户端</h2><p>根据操作系统下载相应的客户端。<br><a href=\"https://github.com/shadowsocks/shadowsocks-iOS/releases\" target=\"_blank\" rel=\"noopener\">Mac 版客户端下载</a><br><a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"noopener\">Win 版客户端下载</a></p>\n<p><strong>打开客户端，在「服务器设定」里新增服务器。然后依次填入服务器 IP、服务器端口、你设的密码和加密方式。</strong></p>\n<p>Mac 版客户端<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132596983585.png\" alt=\"\"></p>\n<p>Win 版客户端<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132591141053.png\" alt=\"\"></p>\n<p><strong>然后启用代理，就可以实现科学上网了</strong></p>\n<p>Mac 版客户端，点击打开Shadowsocks<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132597970585.png\" alt=\"\"></p>\n<p>Win 版客户端，点击”启用系统代理”，选择PAC模式，在PAC中选择从xxx更新本地PAC<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132598862289.png\" alt=\"\"></p>\n<h2 id=\"提升Shadowsocks服务器速度\"><a href=\"#提升Shadowsocks服务器速度\" class=\"headerlink\" title=\"提升Shadowsocks服务器速度\"></a>提升Shadowsocks服务器速度</h2><p>实际上你已经可以在自己的任意设备上进行使用了。但是为了更好的连接速度，你还需要多做几步。</p>\n<h3 id=\"TCP-Fast-Open\"><a href=\"#TCP-Fast-Open\" class=\"headerlink\" title=\"TCP Fast Open\"></a>TCP Fast Open</h3><p><strong>编辑 /etc/rc.local 文件，按照下面的步骤操作</strong></p>\n<p>1） 首先打开rc.local文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/rc.local</span><br></pre></td></tr></table></figure>\n<p>2） 然后按 <strong>i键</strong> 进入编辑模式，通过 ↑  ↓ ← →按键移动光标，在最后增加如下内容：echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">#</span><br><span class=\"line\"># This script will be executed *after* all the other init scripts.</span><br><span class=\"line\"># You can put your own initialization stuff in here if you don&apos;t</span><br><span class=\"line\"># want to do the full Sys V style init stuff.</span><br><span class=\"line\"></span><br><span class=\"line\">touch /var/lock/subsys/local</span><br><span class=\"line\"></span><br><span class=\"line\"># set a random pass on first boot</span><br><span class=\"line\">if [ -f /root/firstrun ]; then</span><br><span class=\"line\">  dd if=/dev/urandom count=50|md5sum|passwd --stdin root</span><br><span class=\"line\">  passwd -l root</span><br><span class=\"line\">  rm /root/firstrun</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">if [ ! -d /root/.ssh ]; then</span><br><span class=\"line\">  mkdir -m 0700 -p /root/.ssh</span><br><span class=\"line\">  restorecon /root/.ssh</span><br><span class=\"line\">fi</span><br><span class=\"line\">echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</span><br><span class=\"line\">~</span><br><span class=\"line\">~</span><br><span class=\"line\">~</span><br><span class=\"line\">~</span><br></pre></td></tr></table></figure>\n<p>3）编辑完过后首先按<strong>ESC键</strong>，再输入<strong>:wq</strong>即可以保存退出了</p>\n<p><strong>然后按照同样的方法修改 /etc/sysctl.conf，在最后增加如下内容：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net.ipv4.tcp_fastopen = 3</span><br></pre></td></tr></table></figure>\n<p><strong>再打开一个 Shadowsocks 配置文件，编辑 /etc/shadowsocks.json，把其中 “fast_open” 一项的 false 替换成 true 修改如下：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;fast_open&quot;:true</span><br></pre></td></tr></table></figure>\n<p><strong>最后，输入以下命令重启 Shadowsocks：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/shadowsocks restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启锐速\"><a href=\"#开启锐速\" class=\"headerlink\" title=\"开启锐速\"></a>开启锐速</h3><p><a href=\"https://github.com/91yun/serverspeeder\" target=\"_blank\" rel=\"noopener\">锐速 ServerSpeeder</a> 是一个 TCP 加速软件，对 Shadowsocks 客户端和服务器端间的传输速度有显著提升。</p>\n<p>不同于 FinalSpeed 或 Kcptun 等需要客户端的工具，「锐速」的一大优势是只需要在服务器端单边部署就行了。另外，「锐速」虽然已经停止注册和安装了，不过网上还是有不少「破解版」可用</p>\n<p><strong>锐速破解版一键安装：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh &amp;&amp; bash serverspeeder.sh</span><br></pre></td></tr></table></figure>\n<p>安装上面官网的的安装步骤执行一键安装脚本会出现如下的错误信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前面的省略...</span><br><span class=\"line\">===============System Info=======================</span><br><span class=\"line\">CentOS</span><br><span class=\"line\">2.6.32-696.1.1.el6.x86_64</span><br><span class=\"line\">x64</span><br><span class=\"line\">=================================================</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">--2017-12-19 14:14:49--  https://raw.githubusercontent.com/91yun/serverspeeder/test/serverspeederbin.txt</span><br><span class=\"line\">Resolving raw.githubusercontent.com... 151.101.72.133</span><br><span class=\"line\">Connecting to raw.githubusercontent.com|151.101.72.133|:443... connected.</span><br><span class=\"line\">HTTP request sent, awaiting response... 200 OK</span><br><span class=\"line\">Length: 96179 (94K) [text/plain]</span><br><span class=\"line\">Saving to: “serverspeederbin.txt”</span><br><span class=\"line\"></span><br><span class=\"line\">100%[======================================&gt;] 96,179      --.-K/s   in 0.006s</span><br><span class=\"line\"></span><br><span class=\"line\">2017-12-19 14:14:49 (16.5 MB/s) - “serverspeederbin.txt” saved [96179/96179]</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt;This kernel is not supported. Trying fuzzy matching...</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Serverspeeder is not supported on this kernel! View all supported systems and kernels here: https://www.91yun.org/serverspeeder91yun</span><br></pre></td></tr></table></figure>\n<p><strong>监测VPS架构</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/code/master/vm_check.sh &amp;&amp; bash vm_check.sh</span><br></pre></td></tr></table></figure>\n<p>如果是kvm还是xen或者vmare则可以装锐速，如果是Openvz，则不可装锐速</p>\n<p><strong>改核适配锐速</strong></p>\n<p>CentOS 6支持安装锐速的内核：2.6.32–504.3.3.el6.x86_64</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -r #查看当前内核版本</span><br><span class=\"line\">rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm</span><br><span class=\"line\">rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force</span><br><span class=\"line\">rpm -qa | grep kernel #查看是否安装成功</span><br><span class=\"line\">reboot #重启VPS</span><br><span class=\"line\">uname -r #当前使用内核版本</span><br></pre></td></tr></table></figure>\n<p><strong>部署锐速</strong><br>依然使用一键安装脚本，输入以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure>\n<p>安装需要一段时间，等待一会。成功界面如下，看到license信息过期时间为”2034-12-31”就没问题了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Running Status]</span><br><span class=\"line\">ServerSpeeder is running!</span><br><span class=\"line\">version              3.10.61.0</span><br><span class=\"line\"></span><br><span class=\"line\">[License Information]</span><br><span class=\"line\">License              763D1329B3D1824A (valid on current device)</span><br><span class=\"line\">MaxSession           unlimited</span><br><span class=\"line\">MaxTcpAccSession     unlimited</span><br><span class=\"line\">MaxBandwidth(kbps)   unlimited</span><br><span class=\"line\">ExpireDate           2034-12-31</span><br><span class=\"line\"></span><br><span class=\"line\">[Connection Information]</span><br><span class=\"line\">TotalFlow            1</span><br><span class=\"line\">NumOfTcpFlows        1</span><br><span class=\"line\">TotalAccTcpFlow      0</span><br><span class=\"line\">TotalActiveTcpFlow   0</span><br><span class=\"line\"></span><br><span class=\"line\">[Running Configuration]</span><br><span class=\"line\">accif                eth0</span><br><span class=\"line\">acc                  1</span><br><span class=\"line\">advacc               1</span><br><span class=\"line\">advinacc             1</span><br><span class=\"line\">wankbps              10000000</span><br><span class=\"line\">waninkbps            10000000</span><br><span class=\"line\">csvmode              0</span><br><span class=\"line\">subnetAcc            0</span><br><span class=\"line\">maxmode              1</span><br><span class=\"line\">pcapEnable           0</span><br></pre></td></tr></table></figure>\n<p>至此，整个搭建过程就大功告成了！接下来，尽情地享受起飞的速度吧😄</p>\n","site":{"data":{}},"excerpt":"<p>身为程序员平时遇到问题当然需要上网查找资料，普通人首先想到的肯定是百度，但是百度上面给的答案良莠不齐质量不高，这个时候就要借助Goolge，但是由于某些我们都懂的原因在国内我们却访问不了Goolge，这时候我就需要自备梯子。网上虽然有很多免费的服务器可以使用，但是通常质量不会很高，极不稳定，速度也非常慢，所谓一分钱一分货，想不花钱就能用上优质的服务，几乎是不可能。<a href=\"http://bwg.xhay1122.com/\" target=\"_blank\" rel=\"noopener\">xhay1122</a>在他的博客中分享了自己利用廉价的vps搭建的shadowsocks服务器，质量还是不错的比较稳定，但是毕竟是分享给大家用的而且流量有限不敢敞开用，所以最后我选择自己动手，丰衣足食，利用AWS 云服务器搭建Shadowsocks服务器。<br>","more":"</p>\n<h1 id=\"Shadowsocks-原理\"><a href=\"#Shadowsocks-原理\" class=\"headerlink\" title=\"Shadowsocks 原理\"></a>Shadowsocks 原理</h1><p><img src=\"http://p15d1hccg.bkt.clouddn.com/15132555841950.png\" alt=\"\"></p>\n<p>Shadowsocks(ss) 是由 Clowwindy 开发的一款软件，其作用本来是加密传输资料。当然，也正因为它加密传输资料的特性，使得 GFW 没法将由它传输的资料和其他普通资料区分开来（上图），也就不能干扰我们访问那些「不存在」的网站了。</p>\n<h1 id=\"创建-AWS-云服务器\"><a href=\"#创建-AWS-云服务器\" class=\"headerlink\" title=\"创建 AWS 云服务器\"></a>创建 AWS 云服务器</h1><p>先去亚马逊AWS上面注册一个账号：<a href=\"https://amazonaws-china.com/cn/，\" target=\"_blank\" rel=\"noopener\">https://amazonaws-china.com/cn/，</a> 只要有信用卡可以免费使用一年AWS的部分服务</p>\n<h2 id=\"注册AWS\"><a href=\"#注册AWS\" class=\"headerlink\" title=\"注册AWS\"></a>注册AWS</h2><ol>\n<li><p>点击注册进入注册页面<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132560890311.png\" alt=\"\"></p>\n</li>\n<li><p>填写邮件地址，密码，账户名称<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132563312499.png\" alt=\"\"></p>\n</li>\n<li><p>这里选择个人就好了，然后填写个人信息<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132568272500.png\" alt=\"\"></p>\n</li>\n<li><p>填写信用卡信息<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136977189629.png\" alt=\"\"><br>绑定完信用卡之后，信用卡会扣取1美元的费用，网上看的教程说后面会退还.</p>\n</li>\n<li><p>电话验证<br>填写完信息后让系统拨打你的电话，然后页面上会显示出一个PIN码，在电话上输入即可</p>\n</li>\n</ol>\n<h2 id=\"创建-AWS-实例\"><a href=\"#创建-AWS-实例\" class=\"headerlink\" title=\"创建 AWS 实例\"></a>创建 AWS 实例</h2><ol>\n<li><p>点击右上角切换服务器机房，建议选择亚太地区的服务器，因为亚太地区的服务器相对于北美的服务器延迟要低一些，这里我选择 <strong>东京</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136024142885.png\" alt=\"\"></p>\n</li>\n<li><p>点击左上角的服务选择 <strong>EC2</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136026702644.png\" alt=\"\"></p>\n</li>\n<li><p>点击 <strong>启动实例</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136027931278.png\" alt=\"\"></p>\n</li>\n<li><p>在 <strong>AWS Marketplace</strong> 搜索 <strong>centos6</strong> ,然后点击 <strong>选择</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136029683293.png\" alt=\"\"></p>\n</li>\n<li><p>点击 <strong>continue</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136030558122.png\" alt=\"\"></p>\n</li>\n<li><p>这里我们就直接选用免费的就可以了，然后点击 <strong>下一步</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136032510119.png\" alt=\"\"></p>\n</li>\n<li><p>后面我们都使用默认配置，都直接点击下一步，直到 <strong>配置安全组</strong> 的时候，我们将类型改成 <strong>所有流量</strong>，然后点击 <strong>审核和启动</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136034503025.png\" alt=\"\"></p>\n</li>\n<li><p>点击右下角的 <strong>启动</strong> 会弹出一个密钥窗口选择 <strong>创建新密钥对</strong> ，接着填写密钥名称，点击 <strong>下载密钥</strong> ，最后点击 <strong>启动实例</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136042148471.png\" alt=\"\"></p>\n</li>\n<li><p>接着初始化主机，初始化完成后出现下面的这个界面，点击右下角的 <strong>查看实例</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136045186657.png\" alt=\"\"></p>\n</li>\n</ol>\n<h2 id=\"连接-AWS-实例\"><a href=\"#连接-AWS-实例\" class=\"headerlink\" title=\"连接 AWS 实例\"></a>连接 AWS 实例</h2><ol>\n<li><p>点击 <strong>连接</strong><br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136047734339.png\" alt=\"\"></p>\n</li>\n<li><p>按照提示我们直接通过ssh连接，首先打开SSH客户端，我用的MAC自带SSH，所以直接打开终端（Windows可以根据提示使用PuTTY连接），并将路径切换到之前保存密钥的路径下，然后根据提示修改密钥的权限，最后复制下面的示例并将root改为centos（我们安装的centos系统的用户名是centos）<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15136451779598.png\" alt=\"\"></p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Last login: Tue Dec 19 09:01:19 on ttys002</span><br><span class=\"line\">xuepengdeMacBook-Pro:~ geekspeng$ cd Downloads/</span><br><span class=\"line\">xuepengdeMacBook-Pro:Downloads geekspeng$ ls</span><br><span class=\"line\">shadowsock.pem</span><br><span class=\"line\">xuepengdeMacBook-Pro:Downloads geekspeng$ chmod 400 shadowsock.pem</span><br><span class=\"line\">xuepengdeMacBook-Pro:Downloads geekspeng$ ssh -i &quot;shadowsock.pem&quot; centos@ec2-13-115-236-100.ap-northeast-1.compute.amazonaws.com</span><br><span class=\"line\">[centos@ip-172-31-22-183 ~]$</span><br></pre></td></tr></table></figure>\n<h1 id=\"部署-Shadowsocks\"><a href=\"#部署-Shadowsocks\" class=\"headerlink\" title=\"部署 Shadowsocks\"></a>部署 Shadowsocks</h1><p>Shadowsocks 需要同时具备客户端和服务器端，所以它的部署也需要分两步</p>\n<h2 id=\"部署-Shadowsocks-服务器\"><a href=\"#部署-Shadowsocks-服务器\" class=\"headerlink\" title=\"部署 Shadowsocks 服务器\"></a>部署 Shadowsocks 服务器</h2><p>这里使用 teddysun 的一键安装脚本。</p>\n<p>可使用 sudo passwd root 先修改root密码，然后切换到root用户</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[centos@ip-172-31-22-183 ~]$ sudo passwd root</span><br><span class=\"line\">Changing password for user root.</span><br><span class=\"line\">New password:</span><br><span class=\"line\">Retype new password:</span><br><span class=\"line\">passwd: all authentication tokens updated successfully.</span><br><span class=\"line\">[centos@ip-172-31-22-183 ~]$ su root</span><br><span class=\"line\">Password:</span><br><span class=\"line\">[root@ip-172-31-22-183 centos]#</span><br></pre></td></tr></table></figure>\n<p>这里需要安装 wget，后面需要用到，需要确认的地方都输入y就可以了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ip-172-31-22-183 centos]# yum install wget</span><br></pre></td></tr></table></figure>\n<p>然后执行以下是3条命令，每次输入一行、回车，等待屏幕上的操作完成后再输入下一条。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class=\"line\">chmod +x shadowsocks.sh</span><br><span class=\"line\">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br></pre></td></tr></table></figure>\n<p>上面最后一步输完，按照提示输入进行设置，设置完过后按任意键开始部署 Shadowsocks。这时你什么都不用做，只需要静静地等它运行完就好。结束后就会看到你所部署的 Shadowsocks 的配置信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Congratulations, Shadowsocks-python server install completed!</span><br><span class=\"line\">Your Server IP        :  13.115.236.100</span><br><span class=\"line\">Your Server Port      :  8989</span><br><span class=\"line\">Your Password         :  ********</span><br><span class=\"line\">Your Encryption Method:  aes-256-cfb</span><br><span class=\"line\"></span><br><span class=\"line\">Welcome to visit:https://teddysun.com/342.html</span><br><span class=\"line\">Enjoy it!</span><br></pre></td></tr></table></figure>\n<p>复制服务器 IP、服务器端口、你设的密码和加密方式。你就可以在自己任意的设备上进行登录使用了。</p>\n<h2 id=\"安装-Shadowsocks-客户端\"><a href=\"#安装-Shadowsocks-客户端\" class=\"headerlink\" title=\"安装 Shadowsocks 客户端\"></a>安装 Shadowsocks 客户端</h2><p>根据操作系统下载相应的客户端。<br><a href=\"https://github.com/shadowsocks/shadowsocks-iOS/releases\" target=\"_blank\" rel=\"noopener\">Mac 版客户端下载</a><br><a href=\"https://github.com/shadowsocks/shadowsocks-windows/releases\" target=\"_blank\" rel=\"noopener\">Win 版客户端下载</a></p>\n<p><strong>打开客户端，在「服务器设定」里新增服务器。然后依次填入服务器 IP、服务器端口、你设的密码和加密方式。</strong></p>\n<p>Mac 版客户端<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132596983585.png\" alt=\"\"></p>\n<p>Win 版客户端<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132591141053.png\" alt=\"\"></p>\n<p><strong>然后启用代理，就可以实现科学上网了</strong></p>\n<p>Mac 版客户端，点击打开Shadowsocks<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132597970585.png\" alt=\"\"></p>\n<p>Win 版客户端，点击”启用系统代理”，选择PAC模式，在PAC中选择从xxx更新本地PAC<br><img src=\"http://p15d1hccg.bkt.clouddn.com/15132598862289.png\" alt=\"\"></p>\n<h2 id=\"提升Shadowsocks服务器速度\"><a href=\"#提升Shadowsocks服务器速度\" class=\"headerlink\" title=\"提升Shadowsocks服务器速度\"></a>提升Shadowsocks服务器速度</h2><p>实际上你已经可以在自己的任意设备上进行使用了。但是为了更好的连接速度，你还需要多做几步。</p>\n<h3 id=\"TCP-Fast-Open\"><a href=\"#TCP-Fast-Open\" class=\"headerlink\" title=\"TCP Fast Open\"></a>TCP Fast Open</h3><p><strong>编辑 /etc/rc.local 文件，按照下面的步骤操作</strong></p>\n<p>1） 首先打开rc.local文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/rc.local</span><br></pre></td></tr></table></figure>\n<p>2） 然后按 <strong>i键</strong> 进入编辑模式，通过 ↑  ↓ ← →按键移动光标，在最后增加如下内容：echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">#</span><br><span class=\"line\"># This script will be executed *after* all the other init scripts.</span><br><span class=\"line\"># You can put your own initialization stuff in here if you don&apos;t</span><br><span class=\"line\"># want to do the full Sys V style init stuff.</span><br><span class=\"line\"></span><br><span class=\"line\">touch /var/lock/subsys/local</span><br><span class=\"line\"></span><br><span class=\"line\"># set a random pass on first boot</span><br><span class=\"line\">if [ -f /root/firstrun ]; then</span><br><span class=\"line\">  dd if=/dev/urandom count=50|md5sum|passwd --stdin root</span><br><span class=\"line\">  passwd -l root</span><br><span class=\"line\">  rm /root/firstrun</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">if [ ! -d /root/.ssh ]; then</span><br><span class=\"line\">  mkdir -m 0700 -p /root/.ssh</span><br><span class=\"line\">  restorecon /root/.ssh</span><br><span class=\"line\">fi</span><br><span class=\"line\">echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</span><br><span class=\"line\">~</span><br><span class=\"line\">~</span><br><span class=\"line\">~</span><br><span class=\"line\">~</span><br></pre></td></tr></table></figure>\n<p>3）编辑完过后首先按<strong>ESC键</strong>，再输入<strong>:wq</strong>即可以保存退出了</p>\n<p><strong>然后按照同样的方法修改 /etc/sysctl.conf，在最后增加如下内容：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">net.ipv4.tcp_fastopen = 3</span><br></pre></td></tr></table></figure>\n<p><strong>再打开一个 Shadowsocks 配置文件，编辑 /etc/shadowsocks.json，把其中 “fast_open” 一项的 false 替换成 true 修改如下：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;fast_open&quot;:true</span><br></pre></td></tr></table></figure>\n<p><strong>最后，输入以下命令重启 Shadowsocks：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/shadowsocks restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启锐速\"><a href=\"#开启锐速\" class=\"headerlink\" title=\"开启锐速\"></a>开启锐速</h3><p><a href=\"https://github.com/91yun/serverspeeder\" target=\"_blank\" rel=\"noopener\">锐速 ServerSpeeder</a> 是一个 TCP 加速软件，对 Shadowsocks 客户端和服务器端间的传输速度有显著提升。</p>\n<p>不同于 FinalSpeed 或 Kcptun 等需要客户端的工具，「锐速」的一大优势是只需要在服务器端单边部署就行了。另外，「锐速」虽然已经停止注册和安装了，不过网上还是有不少「破解版」可用</p>\n<p><strong>锐速破解版一键安装：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://github.com/91yun/serverspeeder/raw/master/serverspeeder.sh &amp;&amp; bash serverspeeder.sh</span><br></pre></td></tr></table></figure>\n<p>安装上面官网的的安装步骤执行一键安装脚本会出现如下的错误信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">前面的省略...</span><br><span class=\"line\">===============System Info=======================</span><br><span class=\"line\">CentOS</span><br><span class=\"line\">2.6.32-696.1.1.el6.x86_64</span><br><span class=\"line\">x64</span><br><span class=\"line\">=================================================</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">--2017-12-19 14:14:49--  https://raw.githubusercontent.com/91yun/serverspeeder/test/serverspeederbin.txt</span><br><span class=\"line\">Resolving raw.githubusercontent.com... 151.101.72.133</span><br><span class=\"line\">Connecting to raw.githubusercontent.com|151.101.72.133|:443... connected.</span><br><span class=\"line\">HTTP request sent, awaiting response... 200 OK</span><br><span class=\"line\">Length: 96179 (94K) [text/plain]</span><br><span class=\"line\">Saving to: “serverspeederbin.txt”</span><br><span class=\"line\"></span><br><span class=\"line\">100%[======================================&gt;] 96,179      --.-K/s   in 0.006s</span><br><span class=\"line\"></span><br><span class=\"line\">2017-12-19 14:14:49 (16.5 MB/s) - “serverspeederbin.txt” saved [96179/96179]</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt;This kernel is not supported. Trying fuzzy matching...</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Serverspeeder is not supported on this kernel! View all supported systems and kernels here: https://www.91yun.org/serverspeeder91yun</span><br></pre></td></tr></table></figure>\n<p><strong>监测VPS架构</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/code/master/vm_check.sh &amp;&amp; bash vm_check.sh</span><br></pre></td></tr></table></figure>\n<p>如果是kvm还是xen或者vmare则可以装锐速，如果是Openvz，则不可装锐速</p>\n<p><strong>改核适配锐速</strong></p>\n<p>CentOS 6支持安装锐速的内核：2.6.32–504.3.3.el6.x86_64</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">uname -r #查看当前内核版本</span><br><span class=\"line\">rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm</span><br><span class=\"line\">rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force</span><br><span class=\"line\">rpm -qa | grep kernel #查看是否安装成功</span><br><span class=\"line\">reboot #重启VPS</span><br><span class=\"line\">uname -r #当前使用内核版本</span><br></pre></td></tr></table></figure>\n<p><strong>部署锐速</strong><br>依然使用一键安装脚本，输入以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure>\n<p>安装需要一段时间，等待一会。成功界面如下，看到license信息过期时间为”2034-12-31”就没问题了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Running Status]</span><br><span class=\"line\">ServerSpeeder is running!</span><br><span class=\"line\">version              3.10.61.0</span><br><span class=\"line\"></span><br><span class=\"line\">[License Information]</span><br><span class=\"line\">License              763D1329B3D1824A (valid on current device)</span><br><span class=\"line\">MaxSession           unlimited</span><br><span class=\"line\">MaxTcpAccSession     unlimited</span><br><span class=\"line\">MaxBandwidth(kbps)   unlimited</span><br><span class=\"line\">ExpireDate           2034-12-31</span><br><span class=\"line\"></span><br><span class=\"line\">[Connection Information]</span><br><span class=\"line\">TotalFlow            1</span><br><span class=\"line\">NumOfTcpFlows        1</span><br><span class=\"line\">TotalAccTcpFlow      0</span><br><span class=\"line\">TotalActiveTcpFlow   0</span><br><span class=\"line\"></span><br><span class=\"line\">[Running Configuration]</span><br><span class=\"line\">accif                eth0</span><br><span class=\"line\">acc                  1</span><br><span class=\"line\">advacc               1</span><br><span class=\"line\">advinacc             1</span><br><span class=\"line\">wankbps              10000000</span><br><span class=\"line\">waninkbps            10000000</span><br><span class=\"line\">csvmode              0</span><br><span class=\"line\">subnetAcc            0</span><br><span class=\"line\">maxmode              1</span><br><span class=\"line\">pcapEnable           0</span><br></pre></td></tr></table></figure>\n<p>至此，整个搭建过程就大功告成了！接下来，尽情地享受起飞的速度吧😄</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjcj8yara0008uw0m52cklrvg","category_id":"cjcj8yar50005uw0mrmc9gd8g","_id":"cjcj8yarj000fuw0m35b752m9"},{"post_id":"cjcj8yaqx0001uw0mp7im4677","category_id":"cjcj8yar50005uw0mrmc9gd8g","_id":"cjcj8yarl000juw0m7g46wbbe"},{"post_id":"cjcj8yare000duw0mai9jdhmw","category_id":"cjcj8yar50005uw0mrmc9gd8g","_id":"cjcj8yarn000luw0mwc6ep33u"},{"post_id":"cjcj8yar20003uw0mvvbz5krj","category_id":"cjcj8yard000auw0m8c2ptatx","_id":"cjcj8yarp000puw0mpn75gvfz"},{"post_id":"cjcj8yark000iuw0m9skkea6n","category_id":"cjcj8yard000auw0m8c2ptatx","_id":"cjcj8yarr000suw0m2gldsx4n"},{"post_id":"cjcj8yar80007uw0mnq58qgm0","category_id":"cjcj8yarj000guw0mzj3w7u2e","_id":"cjcj8yart000xuw0mdathjzxt"},{"post_id":"cjcj8yarm000kuw0mer8x1zqi","category_id":"cjcj8yard000auw0m8c2ptatx","_id":"cjcj8yarv000yuw0m18ohulzj"},{"post_id":"cjcj8yarc0009uw0mofsxah1z","category_id":"cjcj8yarn000muw0mqrw7pm1o","_id":"cjcj8yarw0010uw0m5u32unpx"},{"post_id":"cjcj8yarq000ruw0mb42wgwdf","category_id":"cjcj8yard000auw0m8c2ptatx","_id":"cjcj8yarx0012uw0msakbuguu"},{"post_id":"cjcj8yarg000euw0mq2kc1nnj","category_id":"cjcj8yarn000muw0mqrw7pm1o","_id":"cjcj8yarx0013uw0m8dgdxepq"},{"post_id":"cjcj8yaro000ouw0m8gd5fwia","category_id":"cjcj8yarw000zuw0mpk43i2fq","_id":"cjcj8yarz0017uw0m8av3sgm3"},{"post_id":"cjcj8yars000wuw0mzpc5jom4","category_id":"cjcj8yarw000zuw0mpk43i2fq","_id":"cjcj8yas0001buw0mrws74iz3"}],"PostTag":[{"post_id":"cjcj8yaqx0001uw0mp7im4677","tag_id":"cjcj8yar70006uw0mcse06acm","_id":"cjcj8yare000cuw0mk5x0ydag"},{"post_id":"cjcj8yar20003uw0mvvbz5krj","tag_id":"cjcj8yard000buw0m7z2cfngw","_id":"cjcj8yarq000quw0meviu3ehl"},{"post_id":"cjcj8yar20003uw0mvvbz5krj","tag_id":"cjcj8yark000huw0mc8tt0bp8","_id":"cjcj8yarr000tuw0mvtip25dn"},{"post_id":"cjcj8yar80007uw0mnq58qgm0","tag_id":"cjcj8yarn000nuw0mrbqh60y6","_id":"cjcj8yarz0016uw0mjntfvm8v"},{"post_id":"cjcj8yar80007uw0mnq58qgm0","tag_id":"cjcj8yars000vuw0m00r3x43x","_id":"cjcj8yarz0018uw0m0t8bak03"},{"post_id":"cjcj8yar80007uw0mnq58qgm0","tag_id":"cjcj8yarw0011uw0mwywnpfbf","_id":"cjcj8yas0001auw0ms8iapogk"},{"post_id":"cjcj8yara0008uw0m52cklrvg","tag_id":"cjcj8yar70006uw0mcse06acm","_id":"cjcj8yas2001euw0m5hqycwcj"},{"post_id":"cjcj8yara0008uw0m52cklrvg","tag_id":"cjcj8yarn000nuw0mrbqh60y6","_id":"cjcj8yas2001fuw0myf9aunsl"},{"post_id":"cjcj8yara0008uw0m52cklrvg","tag_id":"cjcj8yas00019uw0manz1qavz","_id":"cjcj8yas3001huw0m1djdzoms"},{"post_id":"cjcj8yara0008uw0m52cklrvg","tag_id":"cjcj8yas1001cuw0mmv1fygqb","_id":"cjcj8yas3001iuw0m55cqscvw"},{"post_id":"cjcj8yarc0009uw0mofsxah1z","tag_id":"cjcj8yas1001duw0mjzwtyb5o","_id":"cjcj8yas4001kuw0mwfz94k27"},{"post_id":"cjcj8yare000duw0mai9jdhmw","tag_id":"cjcj8yar70006uw0mcse06acm","_id":"cjcj8yas6001nuw0mpgu8fzxq"},{"post_id":"cjcj8yare000duw0mai9jdhmw","tag_id":"cjcj8yarn000nuw0mrbqh60y6","_id":"cjcj8yas6001ouw0mdmndl7h6"},{"post_id":"cjcj8yare000duw0mai9jdhmw","tag_id":"cjcj8yas00019uw0manz1qavz","_id":"cjcj8yas7001quw0mc39kr1vi"},{"post_id":"cjcj8yare000duw0mai9jdhmw","tag_id":"cjcj8yas1001cuw0mmv1fygqb","_id":"cjcj8yas7001ruw0mvfhab1f4"},{"post_id":"cjcj8yarg000euw0mq2kc1nnj","tag_id":"cjcj8yas1001duw0mjzwtyb5o","_id":"cjcj8yas9001tuw0m7zgef81i"},{"post_id":"cjcj8yark000iuw0m9skkea6n","tag_id":"cjcj8yard000buw0m7z2cfngw","_id":"cjcj8yas9001uuw0mz5oqdm8b"},{"post_id":"cjcj8yark000iuw0m9skkea6n","tag_id":"cjcj8yas6001puw0mlm6mzml7","_id":"cjcj8yasa001wuw0m1zep6zr7"},{"post_id":"cjcj8yarm000kuw0mer8x1zqi","tag_id":"cjcj8yard000buw0m7z2cfngw","_id":"cjcj8yasa001xuw0myqahearb"},{"post_id":"cjcj8yarm000kuw0mer8x1zqi","tag_id":"cjcj8yas8001suw0mivjrao2f","_id":"cjcj8yasb001zuw0m0vjtzq9g"},{"post_id":"cjcj8yaro000ouw0m8gd5fwia","tag_id":"cjcj8yas9001vuw0mxzzqie7w","_id":"cjcj8yasd0022uw0mdn0gt3ic"},{"post_id":"cjcj8yaro000ouw0m8gd5fwia","tag_id":"cjcj8yasb001yuw0mox2jsmxp","_id":"cjcj8yasd0023uw0m7p27f2w2"},{"post_id":"cjcj8yaro000ouw0m8gd5fwia","tag_id":"cjcj8yasb0020uw0m8blg544w","_id":"cjcj8yase0025uw0mxutbbx8b"},{"post_id":"cjcj8yarq000ruw0mb42wgwdf","tag_id":"cjcj8yard000buw0m7z2cfngw","_id":"cjcj8yase0026uw0ma6099hci"},{"post_id":"cjcj8yarq000ruw0mb42wgwdf","tag_id":"cjcj8yasc0021uw0mxcqjjgvl","_id":"cjcj8yasf0028uw0m38uxwbbb"},{"post_id":"cjcj8yars000wuw0mzpc5jom4","tag_id":"cjcj8yas9001vuw0mxzzqie7w","_id":"cjcj8yash002auw0mnw1qyuv8"},{"post_id":"cjcj8yars000wuw0mzpc5jom4","tag_id":"cjcj8yasb001yuw0mox2jsmxp","_id":"cjcj8yash002buw0m93xuqdnz"},{"post_id":"cjcj8yars000wuw0mzpc5jom4","tag_id":"cjcj8yasf0029uw0m7xv4d93b","_id":"cjcj8yash002cuw0mu7n0fo1l"}],"Tag":[{"name":"Python","_id":"cjcj8yar70006uw0mcse06acm"},{"name":"node","_id":"cjcj8yard000buw0m7z2cfngw"},{"name":"mac","_id":"cjcj8yark000huw0mc8tt0bp8"},{"name":"Mac","_id":"cjcj8yarn000nuw0mrbqh60y6"},{"name":"包管理工具","_id":"cjcj8yars000vuw0m00r3x43x"},{"name":"Homebrew","_id":"cjcj8yarw0011uw0mwywnpfbf"},{"name":"Windows","_id":"cjcj8yas00019uw0manz1qavz"},{"name":"Linux","_id":"cjcj8yas1001cuw0mmv1fygqb"},{"name":"hexo","_id":"cjcj8yas1001duw0mjzwtyb5o"},{"name":"npm","_id":"cjcj8yas6001puw0mlm6mzml7"},{"name":"nvm","_id":"cjcj8yas8001suw0mivjrao2f"},{"name":"科学上网","_id":"cjcj8yas9001vuw0mxzzqie7w"},{"name":"Shadowsocks","_id":"cjcj8yasb001yuw0mox2jsmxp"},{"name":"极路由","_id":"cjcj8yasb0020uw0m8blg544w"},{"name":"nrm","_id":"cjcj8yasc0021uw0mxcqjjgvl"},{"name":"AWS云服务器","_id":"cjcj8yasf0029uw0m7xv4d93b"}]}}